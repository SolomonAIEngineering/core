{
    "openapi": "3.0.0",
    "info": {
        "title": "Financial Service",
        "description": "The financial service for the solomon-ai backend",
        "version": "0.1",
        "contact": {
            "name": "YoanYomba",
            "url": "https://solomon-ai.ip",
            "email": "yoanyomba@solomon-ai.co"
        },
        "license": {
            "name": "Apache-2.0",
            "url": "https://github.com/openfga/openfga/blob/main/LICENSE"
        }
    },
    "tags": [
        {
            "name": "FinancialService"
        }
    ],
    "paths": {
        "/financial-microservice/api/v1/account/{userId}/investment/{investmentAccountId}": {
            "get": {
                "summary": "get investment account by id",
                "description": "This endpoint returns the investment account if the investment account exists",
                "operationId": "GetInvestmentAccount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInvestmentAcccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investmentAccountId",
                        "description": "The investment account id\nValidations:\n- investment_account_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/account/{userId}/liability/{liabilityAccountId}": {
            "get": {
                "summary": "get liability account by id",
                "description": "This endpoint returns the liability account if the liability account exists",
                "operationId": "GetLiabilityAccount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLiabilityAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "liabilityAccountId",
                        "description": "The liability account id\nValidations:\n- liability_account_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/account/{userId}/mortgage/{mortgageAccountId}": {
            "get": {
                "summary": "get mortgage account by id",
                "description": "This endpoint returns the mortgage account if the mortgage account exists",
                "operationId": "GetMortageAccount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMortgageAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mortgageAccountId",
                        "description": "The mortage account id\nValidations:\n- mortage_account_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/account/{userId}/student-loan/{studentLoanAccountId}": {
            "get": {
                "summary": "get student loan account by id",
                "description": "This endpoint returns the student loan account if the student loan account exists",
                "operationId": "GetStudentLoanAccount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetStudentLoanAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "studentLoanAccountId",
                        "description": "The student loan account id\nValidations:\n- student_loan_account_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/balance-history/account/{plaidAccountId}/pagenumber/{pageNumber}/pagesize/{pageSize}": {
            "get": {
                "summary": "Returns the account balance history for an account",
                "description": "This API could accept account_id as input parameters and return the account balance history for that account.",
                "operationId": "GetAccountBalanceHistory",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAccountBalanceHistoryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "plaidAccountId",
                        "description": "Account ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/balance-history/user/{userId}/pagenumber/{pageNumber}/pagesize/{pageSize}": {
            "get": {
                "summary": "Returns the account balance history for a user",
                "description": "This API could accept user_id as input parameters and return the account balance history for that user.",
                "operationId": "GetUserAccountBalanceHistory",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserAccountBalanceHistoryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "User ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/category-monthly-expenditure/user/{userId}": {
            "get": {
                "summary": "Returns the monthly category expenditure for a user",
                "description": "This API could accept user_id as an input parameter and return the monthly category expenditure for that user.",
                "operationId": "GetUserCategoryMonthlyExpenditure",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserCategoryMonthlyExpenditureResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "User ID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "personalFinanceCategoryPrimary",
                        "description": "Personal finance category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "description": "Month in the format of YYYYMM",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/category-monthly-income/user/{userId}": {
            "get": {
                "summary": "Get monthly income by user for a specific category",
                "operationId": "GetUserCategoryMonthlyIncome",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserCategoryMonthlyIncomeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "personalFinanceCategoryPrimary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/category-monthly-transaction-count/user/{userId}": {
            "get": {
                "summary": "Get monthly transaction count by user, month, and category",
                "operationId": "GetCategoryMonthlyTransactionCount",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCategoryMonthlyTransactionCountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "has to be present and defined",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "description": "optional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "personalFinanceCategoryPrimary",
                        "description": "optional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/debt-to-income-ratio/user/{userId}": {
            "get": {
                "summary": "Get Debt-to-Income ratio by user and month",
                "operationId": "GetDebtToIncomeRatio",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDebtToIncomeRatioResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "description": "optional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/expenses/user/{userId}": {
            "get": {
                "summary": "Get Expense Metrics by user, month and category",
                "operationId": "GetExpenseMetrics",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetExpenseMetricsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "description": "optonal",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "personalFinanceCategoryPrimary",
                        "description": "optional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/finance-profile/user/{userId}": {
            "get": {
                "summary": "Get Financial Profile by user and month",
                "operationId": "GetFinancialProfile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFinancialProfileResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "description": "optional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/income-expense-ratio/user/{userId}": {
            "get": {
                "summary": "Get Income Expense Ratio by user and month",
                "operationId": "GetIncomeExpenseRatio",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIncomeExpenseRatioResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "description": "optional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/income/user/{userId}": {
            "get": {
                "summary": "Get Income Metrics by user, month and category",
                "operationId": "GetIncomeMetrics",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIncomeMetricsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "description": "optional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "personalFinanceCategoryPrimary",
                        "description": "optional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/melody-financial-context/user/{userId}": {
            "get": {
                "summary": "Get Melody Financial Context",
                "operationId": "GetMelodyFinancialContext",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMelodyFinancialContextResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/merchant-monthly-expenditure/user/{userId}": {
            "get": {
                "summary": "Get Merchant Monthly Expenditure by user, month and merchant name",
                "operationId": "GetMerchantMonthlyExpenditure",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMerchantMonthlyExpenditureResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "description": "optional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "merchantName",
                        "description": "optional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/monthly-balance/user/{userId}": {
            "get": {
                "summary": "Get Monthly Balance by user and month",
                "operationId": "GetMonthlyBalance",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMonthlyBalanceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "description": "optional",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/monthly-expenditure/user/{userId}": {
            "get": {
                "summary": "Get Monthly Expenditure by user and month",
                "operationId": "GetMonthlyExpenditure",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMonthlyExpenditureResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/monthly-income/user/{userId}": {
            "get": {
                "summary": "Get Monthly Income by user and month",
                "operationId": "GetMonthlyIncome",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMonthlyIncomeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/monthly-savings/{userId}": {
            "get": {
                "summary": "Get Monthly Savings by user and month",
                "operationId": "GetMonthlySavings",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMonthlySavingsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/monthly-total-quantity-by-security-and-user/user/{userId}": {
            "get": {
                "summary": "Get Monthly Total Quantity of Security by user, month and security",
                "operationId": "GetMonthlyTotalQuantityBySecurityAndUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMonthlyTotalQuantityBySecurityAndUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "securityId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/monthly-transaction-count/user/{userId}": {
            "get": {
                "summary": "Get Monthly Transaction Count by user and month",
                "operationId": "GetMonthlyTransactionCount",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMonthlyTransactionCountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/payment-channel-expenditure/user/{userId}": {
            "get": {
                "summary": "Get Payment Channel Monthly Expenditure by user, month, and payment channel",
                "operationId": "GetPaymentChannelMonthlyExpenditure",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPaymentChannelMonthlyExpenditureResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "paymentChannel",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/total-investment/user/{userId}": {
            "get": {
                "summary": "Get Total Investment by user and security",
                "operationId": "GetTotalInvestmentBySecurity",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTotalInvestmentBySecurityResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "securityId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/analytics/transaction-aggregates/{userId}": {
            "get": {
                "summary": "Returns the aggregated transactions for a user and month",
                "description": "This API could accept user_id and month as input parameters and return the aggregated transactions for that user and month.",
                "operationId": "TransactionAggregates",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionAggregatesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "personalFinanceCategoryPrimary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locationCity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentChannel",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "merchantName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return per page.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/async-task/{workflowId}/run/{runId}": {
            "get": {
                "summary": "polls the status of an async task",
                "description": "This endpoint polls the status of an async task",
                "operationId": "PollAsyncTaskExecutionStatus",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PollAsyncTaskExecutionStatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workflowId",
                        "description": "The task id\nValidations:\n- workflow id cannot be empty",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "runId",
                        "description": "The run id\nValidations:\n- run id cannot be empty",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/bank-account": {
            "put": {
                "summary": "update a bank account for a given user profile",
                "description": "This endpoint updates a bank account if the user record id and bank account id exists",
                "operationId": "UpdateBankAccount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateBankAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBankAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/bank-account/profile": {
            "post": {
                "summary": "create a bank account for a given user profile",
                "description": "This endpoint creates a bank account for a given user profile",
                "operationId": "CreateBankAccount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateBankAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBankAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/bank-account/{bankAccountId}": {
            "get": {
                "summary": "get a bank account for a given user profile",
                "description": "This endpoint returns the bank account if the user record id and bank account id exists\nexample: /api/v1/bank-account?user_id=xxxxxx&&bank_account_id=xxxxxxx",
                "operationId": "GetBankAccount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBankAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "bankAccountId",
                        "description": "The bank account id\nValidations:\n- bank_account_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            },
            "delete": {
                "summary": "deletes a bank account for a given user profile",
                "description": "This endpoint performs a delete operation on a user profile based on the provided parametersThis deletion operation spans multiple services (plaid) as user details are stored across a suite of our backend servicesThe operation itself is an atomic one of nature. Either all services successfully delete the recod or we fail the requestDivergent state is not expected to be encountered with this endpoint.",
                "operationId": "DeleteUserProfile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteBankAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "bankAccountId",
                        "description": "The bank account id\nValidations:\n- bank_account_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "userId",
                        "description": "The account ID associated with the user\nValidations:\n- user_id must be greater than 0",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/budget": {
            "get": {
                "summary": "get all budgets",
                "description": "This endpoint returns all budgets",
                "operationId": "GetAllBudgets",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAllBudgetsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "pocketId",
                        "description": "The pocket account id\nValidations:\n- pocket_account_id must be greater than 0",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "smartGoalId",
                        "description": "The smart goal id\nValidations:\n- smart_goal_id must be greater than 0",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "milestoneId",
                        "description": "The milestone id\nValidations:\n- milestone_id must be greater than 0",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            },
            "post": {
                "summary": "create a budget",
                "description": "This endpoint creates a budget",
                "operationId": "CreateBudget",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateBudgetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBudgetRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            },
            "put": {
                "summary": "updates a budget",
                "description": "This endpoint updates a budget",
                "operationId": "UpdatesBudget",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateBudgetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBudgetRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/budget/{budgetId}": {
            "get": {
                "summary": "get budget by id",
                "description": "This endpoint returns the budget if the budget exists",
                "operationId": "GetBudget",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBudgetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "budgetId",
                        "description": "The budget id\nValidations:\n- budget_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            },
            "delete": {
                "summary": "delete a budget",
                "description": "This endpoint deletes a budget",
                "operationId": "DeleteBudget",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteBudgetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "budgetId",
                        "description": "The budget id\nValidations:\n- budget_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/copilot/quota/exceeded/{userId}": {
            "get": {
                "summary": "Checks if the question quota has been exceeded",
                "description": "This endpoint checks if a user has exceeded his/her copilot question quota",
                "operationId": "CheckIfQuotaExceeded",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckIfQuotaExceededResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "the account id associated with the user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/copilot/quota/question": {
            "post": {
                "summary": "Ask a question to copilot",
                "description": "This endpoint checks if a user can ask his/her copilot a question",
                "operationId": "AskCopilotQuestion",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordAskCopilotQuestionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecordAskCopilotQuestionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/forecast/{smartGoalId}": {
            "get": {
                "summary": "get forecast by id",
                "description": "This endpoint returns the forecast if the forecast exists",
                "operationId": "GetForecast",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetForecastResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "smartGoalId",
                        "description": "The smart goal id\nValidations:\n- smart_goal_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/health": {
            "get": {
                "summary": "health check",
                "description": "This endpoint performs a healc check on the service",
                "operationId": "HealthCheck",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthCheckResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/historical-account-balance/user/{userId}/plaid-account-id/{plaidAccountId}": {
            "get": {
                "summary": "gets account balance of an account",
                "description": "This endpoint returns the historical balance for a given account",
                "operationId": "GetAccountBalance",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetHistoricalAccountBalanceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "plaidAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/link": {
            "post": {
                "summary": "create link",
                "description": "This endpoint creates a link",
                "operationId": "CreateLink",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateManualLinkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateManualLinkRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/link/{linkId}": {
            "get": {
                "summary": "get link by id",
                "description": "This endpoint returns the link if the link exists",
                "operationId": "GetLink",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLinkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "linkId",
                        "description": "The link id\nValidations:\n- link_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "userId",
                        "description": "The user id\nValidations:\n- user_id must be greater than 0",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/link/{linkId}/user/{userId}": {
            "delete": {
                "summary": "delete link by id",
                "description": "This endpoint deletes the link if the link exists",
                "operationId": "DeleteLink",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteLinkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "linkId",
                        "description": "The link id\nValidations:\n- link_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "userId",
                        "description": "The user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/links/{userId}": {
            "get": {
                "summary": "get links",
                "description": "This endpoint returns the links",
                "operationId": "GetLinks",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLinksResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/milestone": {
            "post": {
                "summary": "create a milestone",
                "description": "This endpoint creates a milestone",
                "operationId": "CreateMilestone",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateMilestoneResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMilestoneRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            },
            "put": {
                "summary": "updates a milestone",
                "description": "This endpoint updates a milestone",
                "operationId": "UpdatesMilestone",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateMilestoneResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMilestoneRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/milestone/smart-goal/{smartGoalId}": {
            "get": {
                "summary": "get milestones by smart goal id",
                "description": "This endpoint returns the milestones if the smart goal exists",
                "operationId": "GetMilestones",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMilestonesBySmartGoalIdResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "smartGoalId",
                        "description": "The smart goal id\nValidations:\n- smart_goal_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/milestone/{milestoneId}": {
            "get": {
                "summary": "get milestone by id",
                "description": "This endpoint returns the milestone if the milestone exists",
                "operationId": "GetMilestone",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMilestoneResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "milestoneId",
                        "description": "The milestone id\nValidations:\n- milestone_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            },
            "delete": {
                "summary": "delete a milestone",
                "description": "This endpoint deletes a milestone",
                "operationId": "DeleteMilestone",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteMilestoneResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "milestoneId",
                        "description": "The milestone id\nValidations:\n- milestone_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/plaid/exchange-token": {
            "post": {
                "summary": "exchange plaid token",
                "description": "This endpoint exchanges a plaid link token for a plaid access token",
                "operationId": "ExchangePlaidToken",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaidExchangeTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaidExchangeTokenRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/plaid/initiate-token-exchange": {
            "post": {
                "summary": "initiate plaid setup",
                "description": "This endpoint initiates a plaid link token creation",
                "operationId": "InitiatePlaidSetup",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaidInitiateTokenExchangeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaidInitiateTokenExchangeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/plaid/initiate-token-update": {
            "post": {
                "summary": "initiate plaid link token update",
                "description": "This endpoint initiates a plaid link token update",
                "operationId": "InitiatePlaidTokenUpdate",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaidInitiateTokenUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaidInitiateTokenUpdateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/pocket": {
            "put": {
                "summary": "updates a pocket",
                "description": "This endpoint updates a pocket",
                "operationId": "UpdatePocket",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatePocketResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePocketRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/pocket/bank-account": {
            "post": {
                "summary": "adds a default set of pockets to a specific bank account of interest",
                "description": "This endpoint adds a default pocket to a specific bank account of interest",
                "operationId": "AddDefaultPocketsToBankAccount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddDefaultPocketsToBankAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddDefaultPocketsToBankAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/pocket/{pocketId}": {
            "get": {
                "summary": "get a pocket",
                "description": "This endpoint returns the pocket if the pocket exists\nexample: /api/v1/pocket/xxxxxxx",
                "operationId": "GetPocket",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPocketResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "pocketId",
                        "description": "The pocket account id\nValidations:\n- pocket_account_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            },
            "delete": {
                "summary": "deletes a pocket",
                "description": "This endpoint deletes a pocket",
                "operationId": "DeletePocket",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletePocketResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "pocketId",
                        "description": "The pocket id\nValidations:\n- pocket_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/profile": {
            "post": {
                "summary": "create a user profile",
                "description": "This endpoint performs an a creation operation of a user profile based on the provided parametersThis operation is implemented as a distributed transactions as this operation can span multiple services",
                "operationId": "CreateUserProfile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateUserProfileResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserProfileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            },
            "put": {
                "summary": "update a user profile",
                "description": "This endpoint performs an updates operation on a user profile based on the provided parameters",
                "operationId": "UpdateUserProfile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserProfileResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserProfileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/profile/{userId}": {
            "get": {
                "summary": "Gets a user profile",
                "description": "Queries and obtains a user profile based on the provided parameters",
                "operationId": "GetUserProfile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserProfileResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The account ID associated with the user.\nNOTE: This user_id is the simfiny backend platform wide user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            },
            "delete": {
                "summary": "deletes a user profile",
                "description": "This endpoint performs a delete operation on a user profile based on the provided parameters",
                "operationId": "DeleteUserProfile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteUserProfileResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The account ID associated with the user.\nNOTE: This user_id is the simfiny backend platform wide user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/ready": {
            "get": {
                "summary": "readyness check",
                "description": "This endpoint performs a readiness check on the service",
                "operationId": "ReadynessCheck",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReadynessCheckResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/smart-goal": {
            "post": {
                "summary": "create a smart goal",
                "description": "This endpoint creates a smart goal",
                "operationId": "CreateSmartGoal",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSmartGoalResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSmartGoalRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            },
            "put": {
                "summary": "update a smart goal",
                "description": "This endpoint updates a smart goal",
                "operationId": "UpdateSmartGoal",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateSmartGoalResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSmartGoalRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/smart-goal/note": {
            "post": {
                "summary": "adds a note to a smart goal",
                "description": "This endpoint adds a note to a smart goal",
                "operationId": "AddNoteToSmartGoal",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddNoteToSmartGoalResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNoteToSmartGoalRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            },
            "put": {
                "summary": "updates a note to a smart goal",
                "description": "This endpoint updates a note to a smart goal",
                "operationId": "UpdateNoteToSmartGoal",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateNoteToSmartGoalResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateNoteToSmartGoalRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/smart-goal/note/{noteId}": {
            "get": {
                "summary": "gets a note from a smart goal",
                "description": "This endpoint gets a note from a smart goal",
                "operationId": "GetNoteFromSmartGoal",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNoteFromSmartGoalResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "noteId",
                        "description": "The note id\nValidations:\n- note_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            },
            "delete": {
                "summary": "deletes a note from a smart goal",
                "description": "This endpoint deletes a note from a smart goal",
                "operationId": "DeleteNoteFromSmartGoal",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteNoteFromSmartGoalResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "noteId",
                        "description": "The note id\nValidations:\n- note_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "smartGoalId",
                        "description": "The smart goal id\nValidations:\n- smart_goal_id must be greater than 0",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/smart-goal/pocket/{pocketId}": {
            "get": {
                "summary": "get smart goals by pocket id",
                "description": "This endpoint returns the smart goals if the pocket exists",
                "operationId": "GetSmartGoalsByPocketId",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSmartGoalsByPocketIdResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "pocketId",
                        "description": "The pocket account id\nValidations:\n- pocket_account_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/smart-goal/{smartGoalId}": {
            "delete": {
                "summary": "delete a smart goal",
                "description": "This endpoint deletes a smart goal",
                "operationId": "DeleteSmartGoal",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteSmartGoalResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "smartGoalId",
                        "description": "The smart goal id\nValidations:\n- smart_goal_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/smart-goal/{smartGoalId}/note": {
            "get": {
                "summary": "gets notes from a smart goal",
                "description": "This endpoint gets notes from a smart goal",
                "operationId": "GetNotesFromSmartGoal",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNotesFromSmartGoalResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "smartGoalId",
                        "description": "The smart goal id\nValidations:\n- smart_goal_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/stripe/subscription": {
            "post": {
                "summary": "Creates a new subscription for a given customer against stripe",
                "description": "This endpoint enabled a user to create a new subscription against stripe",
                "operationId": "CreateSubscription",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSubscriptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSubscriptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/sync/trigger": {
            "post": {
                "summary": "Triggers a sync",
                "description": "This endpoint triggers a sync",
                "operationId": "TriggerSync",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerSyncResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TriggerSyncRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions": {
            "get": {
                "summary": "lists a set of transactions against a given account of interest",
                "description": "This endpoint gets a list of transactions against a given account of interest",
                "operationId": "ListTransactions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListTransactionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    },
                    {
                        "name": "financialAccountType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED",
                                "FINANCIAL_ACCOUNT_TYPE_BANK",
                                "FINANCIAL_ACCOUNT_TYPE_INVESTMENT",
                                "FINANCIAL_ACCOUNT_TYPE_CREDIT",
                                "FINANCIAL_ACCOUNT_TYPE_MORTGAGE",
                                "FINANCIAL_ACCOUNT_TYPE_STUDENT_LOAN"
                            ],
                            "default": "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/all_accounts": {
            "get": {
                "summary": "lists a set of transactions across all connected accounts",
                "description": "This endpoint gets a list of transactions across all connected accounts",
                "operationId": "ListTransactions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListTransactionsAcrossAllAccountsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/recurring": {
            "put": {
                "summary": "update a transaction",
                "description": "This endpoint updates a transaction",
                "operationId": "UpdateTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateRecurringTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRecurringTransactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/recurring-transactions/{userId}": {
            "get": {
                "summary": "get recurring transactions",
                "description": "This endpoint returns the recurring transactions for a given user id",
                "operationId": "GetRecurringTransactionsForUser",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetRecurringTransactionsForUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/recurring/bulk": {
            "put": {
                "summary": "update a transaction",
                "description": "This endpoint updates a set of transactions",
                "operationId": "BulkUpdateRecurringTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulkUpdateRecurringTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkUpdateRecurringTransactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/recurring/note": {
            "post": {
                "summary": "adds a note to a transaction",
                "description": "This endpoint adds a note to a transaction",
                "operationId": "AddNoteToRecurringTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddNoteToRecurringTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNoteToRecurringTransactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            },
            "put": {
                "summary": "Updates a note to a transaction",
                "description": "This endpoint Updates a note to a transaction",
                "operationId": "UpdateNoteToRecurringTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateNoteToRecurringTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateNoteToRecurringTransactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/recurring/{transactionId}": {
            "get": {
                "summary": "lists a set of transactions against a given account of interest",
                "description": "This endpoint gets a specific transaction based on the transaction id",
                "operationId": "GetRecurringTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSingleRecurringTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "the transaction of interest we aim to obtain",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            },
            "delete": {
                "summary": "deletes a transaction by id",
                "description": "This endpoint deletes a specific transaction based on the transaction id",
                "operationId": "DeleteTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteRecurringTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "the transaction of interest we aim to delete",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/recurring/{transactionId}/note/{noteId}": {
            "delete": {
                "summary": "deletes a note from a transaction",
                "description": "This endpoint deletes a note from a transaction",
                "operationId": "DeleteNoteFromRecurringTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteNoteFromRecurringTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "The transaction id\nValidations:\n- transaction_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "noteId",
                        "description": "The note id\nValidations:\n- note_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/recurring/{transactionId}/notes": {
            "get": {
                "summary": "lists notes from a transaction",
                "description": "This endpoint lists notes from a transaction",
                "operationId": "ListRecurringTransactionNotes",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListRecurringTransactionNotesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "The transaction id\nValidations:\n- transaction_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/recurrings": {
            "get": {
                "summary": "lists a set of transactions against a given account of interest",
                "description": "This endpoint gets a list of transactions against a given account of interest",
                "operationId": "ListRecurringTransactionsForUserAndAccount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListRecurringTransactionsForUserAndAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    },
                    {
                        "name": "financialAccountType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED",
                                "FINANCIAL_ACCOUNT_TYPE_BANK",
                                "FINANCIAL_ACCOUNT_TYPE_INVESTMENT",
                                "FINANCIAL_ACCOUNT_TYPE_CREDIT",
                                "FINANCIAL_ACCOUNT_TYPE_MORTGAGE",
                                "FINANCIAL_ACCOUNT_TYPE_STUDENT_LOAN"
                            ],
                            "default": "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/single-transaction": {
            "put": {
                "summary": "update a transaction",
                "description": "This endpoint updates a transaction",
                "operationId": "UpdateSingleTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateSingleTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSingleTransactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/transaction/bulk": {
            "put": {
                "summary": "update a transaction",
                "description": "This endpoint updates a set of transactions",
                "operationId": "BulkUpdateTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulkUpdateTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkUpdateTransactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/transaction/note": {
            "post": {
                "summary": "adds a note to a transaction",
                "description": "This endpoint adds a note to a transaction",
                "operationId": "AddNoteToTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddNoteToTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNoteToTransactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            },
            "put": {
                "summary": "Updates a note to a transaction",
                "description": "This endpoint Updates a note to a transaction",
                "operationId": "UpdateNoteToTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateNoteToTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateNoteToTransactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/transaction/search": {
            "post": {
                "summary": "searches transactions",
                "description": "This endpoint searches transactions based on a search query and returns a list of transactions that match the search query",
                "operationId": "SearchTransactions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchTransactionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchTransactionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/transaction/split": {
            "post": {
                "summary": "splits a transaction",
                "description": "This endpoint splits a transaction into multiple transactions",
                "operationId": "SplitTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SplitTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SplitTransactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/transaction/unsplit": {
            "post": {
                "summary": "unsplit a transaction",
                "description": "This endpoint unsplit a transaction that was split previously into multiple transactions",
                "operationId": "UnsplitTransactions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnSplitTransactionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnSplitTransactionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/transaction/{transactionId}": {
            "get": {
                "summary": "lists a set of transactions against a given account of interest",
                "description": "This endpoint gets a specific transaction based on the transaction id",
                "operationId": "GetTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "the transaction of interest we aim to obtain",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            },
            "delete": {
                "summary": "deletes a transaction by id",
                "description": "This endpoint deletes a specific transaction based on the transaction id",
                "operationId": "DeleteTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "the transaction of interest we aim to delete",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/transaction/{transactionId}/note/{noteId}": {
            "get": {
                "summary": "gets a note from a transaction",
                "description": "This endpoint gets a note from a transaction",
                "operationId": "GetNoteFromTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNoteFromTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "The transaction id\nValidations:\n- transaction_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "noteId",
                        "description": "The note id\nValidations:\n- note_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            },
            "delete": {
                "summary": "deletes a note from a transaction",
                "description": "This endpoint deletes a note from a transaction",
                "operationId": "DeleteNoteFromTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteNoteFromTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "The transaction id\nValidations:\n- transaction_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "noteId",
                        "description": "The note id\nValidations:\n- note_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/transaction/{transactionId}/notes": {
            "get": {
                "summary": "lists notes from a transaction",
                "description": "This endpoint lists notes from a transaction",
                "operationId": "ListTransactionNotes",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListTransactionNotesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "The transaction id\nValidations:\n- transaction_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/transaction/{transactionId}/split": {
            "get": {
                "summary": "gets a split transaction",
                "description": "This endpoint gets a split transaction that was split previously into multiple transactions",
                "operationId": "GetSplitTransaction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSplitTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "description": "The transaction id\nValidations:\n- transaction_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/user/{userId}/plaid-account-id/{plaidAccountId}/pageNumber/{pageNumber}/pageSize/{pageSize}": {
            "get": {
                "summary": "get transactions tied to a bank account and account id",
                "description": "This endpoint returns the transactions for a given user id and a business account id",
                "operationId": "GetTransactions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionsForBankAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "plaidAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/transactions/{userId}/pageNumber/{pageNumber}/pageSize/{pageSize}": {
            "get": {
                "summary": "get transactions",
                "description": "This endpoint returns the transactions for a given user id",
                "operationId": "GetTransactions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/users/{userId}/accounts/{plaidAccountId}/transactions/month": {
            "get": {
                "summary": "Get transactions for the past month",
                "description": "This endpoint returns the transactions for a given user id over the past month\nexample: /api/v1/users/{user_id}/accounts/{plaid_account_id}/transactions/month",
                "operationId": "GetTransactionsForPastMonth",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionsForPastMonthResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "plaidAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "description": "Current page number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Number of transactions per page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    },
                    {
                        "name": "financialAccountType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED",
                                "FINANCIAL_ACCOUNT_TYPE_BANK",
                                "FINANCIAL_ACCOUNT_TYPE_INVESTMENT",
                                "FINANCIAL_ACCOUNT_TYPE_CREDIT",
                                "FINANCIAL_ACCOUNT_TYPE_MORTGAGE",
                                "FINANCIAL_ACCOUNT_TYPE_STUDENT_LOAN"
                            ],
                            "default": "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/users/{userId}/accounts/{plaidAccountId}/transactions/range": {
            "get": {
                "summary": "get transactions by time",
                "description": "This endpoint returns the transactions for a given user id and time\nexample: /api/v1/users/{user_id}/accounts/{plaid_account_id}/transactions?start_time={start_time}&end_time={end_time}",
                "operationId": "GetTransactionsByTime",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionsBetweenTimeRangesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The user id\nValidations:\n- user_id must be greater than 0",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "plaidAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startDate",
                        "description": "start date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "description": "end date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "page",
                        "description": "Current page number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Number of transactions per page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    },
                    {
                        "name": "financialAccountType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED",
                                "FINANCIAL_ACCOUNT_TYPE_BANK",
                                "FINANCIAL_ACCOUNT_TYPE_INVESTMENT",
                                "FINANCIAL_ACCOUNT_TYPE_CREDIT",
                                "FINANCIAL_ACCOUNT_TYPE_MORTGAGE",
                                "FINANCIAL_ACCOUNT_TYPE_STUDENT_LOAN"
                            ],
                            "default": "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        },
        "/financial-microservice/api/v1/users/{userId}/accounts/{plaidAccountId}/transactions/week": {
            "get": {
                "summary": "get transactions for the past week",
                "description": "This endpoint returns the transactions for a given user id and time\nexample: /api/v1/users/{user_id}/accounts/{plaid_account_id}/transactions/week",
                "operationId": "GetTransactionsForPastWeek",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionsForPastWeekResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed due to invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request failed due to incorrect path.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PathUnknownErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Request failed due to internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "plaidAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "description": "Current page number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "limit",
                        "description": "Number of transactions per page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "profileType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                                "FINANCIAL_USER_PROFILE_TYPE_USER",
                                "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                            ],
                            "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
                        }
                    },
                    {
                        "name": "financialAccountType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED",
                                "FINANCIAL_ACCOUNT_TYPE_BANK",
                                "FINANCIAL_ACCOUNT_TYPE_INVESTMENT",
                                "FINANCIAL_ACCOUNT_TYPE_CREDIT",
                                "FINANCIAL_ACCOUNT_TYPE_MORTGAGE",
                                "FINANCIAL_ACCOUNT_TYPE_STUDENT_LOAN"
                            ],
                            "default": "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED"
                        }
                    }
                ],
                "tags": [
                    "financial-service"
                ]
            }
        }
    },
    "servers": [
        {
            "url": "http://financial-integration-service.platform.svc.cluster.local:9896"
        }
    ],
    "components": {
        "schemas": {
            "AccountBalanceHistory": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "isoCurrencyCode": {
                        "type": "string"
                    },
                    "balance": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "sign": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "id": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "Account Balance History\nThis message is used to represent the balance history of an account."
            },
            "ActionableInsight": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "detailedAction": {
                        "type": "string",
                        "title": "for each user we generate a detailed actionable insights for them to see"
                    },
                    "summarizedAction": {
                        "type": "string",
                        "title": "for each user we generate a summarized insight targeted at optimizing a certain condition"
                    },
                    "generatedTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "the time the insight was generated"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "associated tags with the generated insights"
                    }
                },
                "title": "An actionable insight serves as a basic insight users \ncan leverage and act upon and is typically generated based off of their financial contexts"
            },
            "AddDefaultPocketsToBankAccountRequest": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "title": "The user id\nValidations:\n- user_id must be greater than 0"
                    },
                    "plaidAccountId": {
                        "type": "string",
                        "title": "The bank account id\nValidations:\n- account_id must be greater than 0"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    },
                    "financialAccountType": {
                        "$ref": "#/components/schemas/FinancialAccountType"
                    }
                },
                "required": [
                    "userId",
                    "plaidAccountId",
                    "profileType",
                    "financialAccountType"
                ]
            },
            "AddDefaultPocketsToBankAccountResponse": {
                "type": "object",
                "properties": {
                    "bankAccount": {
                        "$ref": "#/components/schemas/BankAccount"
                    },
                    "creditAccount": {
                        "$ref": "#/components/schemas/CreditAccount"
                    }
                }
            },
            "AddNoteToRecurringTransactionRequest": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The transaction id\nValidations:\n- transaction_id must be greater than 0"
                    },
                    "note": {
                        "$ref": "#/components/schemas/SmartNote"
                    }
                },
                "title": "AddNoteToTransactionRequest adds a note to a transaction",
                "required": [
                    "transactionId",
                    "note"
                ]
            },
            "AddNoteToRecurringTransactionResponse": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountRecurringTransaction"
                    }
                },
                "title": "AddNoteToRecurringTransactionResponse is the responsed obtained after we add a note to a transaction"
            },
            "AddNoteToSmartGoalRequest": {
                "type": "object",
                "properties": {
                    "smartGoalId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The smart goal id\nValidations:\n- smart_goal_id must be greater than 0"
                    },
                    "note": {
                        "$ref": "#/components/schemas/SmartNote"
                    }
                },
                "required": [
                    "smartGoalId",
                    "note"
                ]
            },
            "AddNoteToSmartGoalResponse": {
                "type": "object",
                "properties": {
                    "goal": {
                        "$ref": "#/components/schemas/SmartGoal"
                    }
                }
            },
            "AddNoteToTransactionRequest": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The transaction id\nValidations:\n- transaction_id must be greater than 0"
                    },
                    "note": {
                        "$ref": "#/components/schemas/SmartNote"
                    }
                },
                "title": "AddNoteToTransactionRequest adds a note to a transaction",
                "required": [
                    "transactionId",
                    "note"
                ]
            },
            "AddNoteToTransactionResponse": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountTransaction"
                    }
                },
                "title": "AddNoteToTransactionResponse is the responsed obtained after we add a note to a transaction"
            },
            "Any": {
                "type": "object",
                "properties": {
                    "@type": {
                        "type": "string",
                        "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                    }
                },
                "additionalProperties": {},
                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
            },
            "Apr": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "percentage": {
                        "type": "number",
                        "format": "double"
                    },
                    "type": {
                        "type": "string"
                    },
                    "balanceSubjectToApr": {
                        "type": "number",
                        "format": "double"
                    },
                    "interestChargeAmount": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "BankAccount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/BankAccountType"
                    },
                    "balance": {
                        "type": "number",
                        "format": "float",
                        "title": "the bank account balance"
                    },
                    "currency": {
                        "type": "string",
                        "title": "the bank account currency"
                    },
                    "currentFunds": {
                        "type": "number",
                        "format": "double"
                    },
                    "balanceLimit": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "pockets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Pocket"
                        },
                        "title": "the set of \"virtualized accounts this user witholds\"\nNOTE: these pockets are automatically created by the system\nwhen a user connects a bank account"
                    },
                    "plaidAccountId": {
                        "type": "string"
                    },
                    "subtype": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/BankAccountStatus"
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountTransaction"
                        },
                        "title": "the set of transactions tied to this account"
                    },
                    "recurringTransactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountRecurringTransaction"
                        },
                        "title": "the set of subscriptions tied to this account"
                    }
                },
                "required": [
                    "type",
                    "balance",
                    "currency",
                    "currentFunds"
                ]
            },
            "BankAccountStatus": {
                "type": "string",
                "enum": [
                    "BANK_ACCOUNT_STATUS_UNSPECIFIED",
                    "BANK_ACCOUNT_STATUS_ACTIVE",
                    "BANK_ACCOUNT_STATUS_INACTIVE"
                ],
                "default": "BANK_ACCOUNT_STATUS_UNSPECIFIED"
            },
            "BankAccountType": {
                "type": "string",
                "enum": [
                    "BANK_ACCOUNT_TYPE_UNSPECIFIED",
                    "BANK_ACCOUNT_TYPE_PLAID",
                    "BANK_ACCOUNT_TYPE_MANUAL"
                ],
                "default": "BANK_ACCOUNT_TYPE_UNSPECIFIED"
            },
            "Budget": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "name": {
                        "type": "string",
                        "example": "Buy a car",
                        "title": "The name of the budget",
                        "minLength": 10
                    },
                    "description": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "string",
                        "title": "the time the goal was created"
                    },
                    "endDate": {
                        "type": "string",
                        "title": "the time the goal was updated"
                    },
                    "category": {
                        "$ref": "#/components/schemas/Category"
                    }
                },
                "description": "The Budgets table stores information about each budget created by the user,\nincluding the name of the budget, the start and end dates, and the user ID."
            },
            "BulkUpdateRecurringTransactionRequest": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountRecurringTransaction"
                        },
                        "title": "The transactions to update\nValidations:\n- cannot be nil hence required"
                    }
                },
                "title": "BulkUpdateRecurringTransactionRequest is the bulk update transaction request",
                "required": [
                    "transactions"
                ]
            },
            "BulkUpdateRecurringTransactionResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountRecurringTransaction"
                        },
                        "title": "The transactions that were successfully updated"
                    }
                },
                "title": "BulkUpdateRecurringTransactionResponse is the bulk update transaction response"
            },
            "BulkUpdateTransactionRequest": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountTransaction"
                        },
                        "title": "The transactions to update\nValidations:\n- cannot be nil hence required"
                    }
                },
                "title": "BulkUpdateTransactionRequest is the bulk update transaction request",
                "required": [
                    "transactions"
                ]
            },
            "BulkUpdateTransactionResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountTransaction"
                        },
                        "title": "The transactions that were successfully updated"
                    }
                },
                "title": "BulkUpdateTransactionResponse is the bulk update transaction response"
            },
            "Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "name": {
                        "type": "string",
                        "example": "Housing",
                        "title": "The name of the category",
                        "minLength": 3
                    },
                    "description": {
                        "type": "string",
                        "example": "Housing is a category primarily for housing",
                        "title": "The description of the category",
                        "minLength": 10
                    },
                    "subcategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "the sub categories of the category"
                    }
                },
                "description": "The Categories table stores information about the different categories of expenses or income,\nsuch as \"Housing\", \"Food\", \"Transportation\", and \"Entertainment\". Each category has one or more\nsubcategories, which are stored in the Subcategories table.\n\nFor example, the \"Housing\" category might have subcategories for \"Rent\", \"Utilities\", and \"Home Maintenance\"."
            },
            "CategoryMetricsFinancialSubProfile": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "personalFinanceCategoryPrimary": {
                        "type": "string"
                    },
                    "transactionCount": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "spentLastWeek": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastTwoWeeks": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastMonth": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastSixMonths": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastYear": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastTwoYears": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "CategoryMetricsFinancialSubProfile\nThis message is used to represent the financial sub profile of a category."
            },
            "CategoryMonthlyExpenditure": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "personalFinanceCategoryPrimary": {
                        "type": "string"
                    },
                    "totalSpending": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "CategoryMonthlyExpenditure represents the monthly expenditure of a category.\nThis message is used to represent the monthly expenditure of a category."
            },
            "CategoryMonthlyIncome": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "personalFinanceCategoryPrimary": {
                        "type": "string"
                    },
                    "totalIncome": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "CategoryMonthlyIncome\nThis message is used to represent the monthly income of a category."
            },
            "CategoryMonthlyTransactionCount": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "personalFinanceCategoryPrimary": {
                        "type": "string"
                    },
                    "transactionCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "CategoryMonthlyTransactionCount\nThis message is used to represent the monthly transaction count of a category."
            },
            "CheckIfQuotaExceededResponse": {
                "type": "object",
                "properties": {
                    "exceeded": {
                        "type": "boolean"
                    }
                }
            },
            "CreateBankAccountRequest": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "title": "The account ID associated with the user\nValidations:\n- user_id must be greater than 0"
                    },
                    "bankAccount": {
                        "$ref": "#/components/schemas/BankAccount"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    },
                    "linkId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The linkId to associate this bank account with"
                    }
                },
                "title": "CreateBankAccountRequest: Represents the request object invoked against the financial\nservice to create a bank account for a given user",
                "required": [
                    "userId",
                    "bankAccount",
                    "profileType",
                    "linkId"
                ]
            },
            "CreateBankAccountResponse": {
                "type": "object",
                "properties": {
                    "bankAccountId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The bank account id"
                    }
                },
                "title": "CreateBankAccountResponse: Represents the response object returned as a response to\nthe `create bank account` request"
            },
            "CreateBudgetRequest": {
                "type": "object",
                "properties": {
                    "milestroneId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The milestone to associate this budget with"
                    },
                    "budget": {
                        "$ref": "#/components/schemas/Budget"
                    }
                },
                "required": [
                    "milestroneId",
                    "budget"
                ]
            },
            "CreateBudgetResponse": {
                "type": "object",
                "properties": {
                    "budgetId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The budget id"
                    }
                }
            },
            "CreateManualLinkRequest": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "title": "The user id\nValidations:\n- user_id must be greater than 0"
                    },
                    "manualAccountLink": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "required": [
                    "userId",
                    "manualAccountLink",
                    "profileType"
                ]
            },
            "CreateManualLinkResponse": {
                "type": "object",
                "properties": {
                    "linkId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The link's id"
                    }
                }
            },
            "CreateMilestoneRequest": {
                "type": "object",
                "properties": {
                    "smartGoalId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The smart goal id\nValidations:\n- smart_goal_id must be greater than 0"
                    },
                    "milestone": {
                        "$ref": "#/components/schemas/Milestone"
                    }
                },
                "required": [
                    "smartGoalId",
                    "milestone"
                ]
            },
            "CreateMilestoneResponse": {
                "type": "object",
                "properties": {
                    "milestoneId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The milestone id"
                    }
                }
            },
            "CreateSmartGoalRequest": {
                "type": "object",
                "properties": {
                    "pocketId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The pocket account id\nValidations:\n- pocket_account_id must be greater than 0"
                    },
                    "smartGoal": {
                        "$ref": "#/components/schemas/SmartGoal"
                    }
                },
                "required": [
                    "pocketId",
                    "smartGoal"
                ]
            },
            "CreateSmartGoalResponse": {
                "type": "object",
                "properties": {
                    "smartGoalId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The smart goal id"
                    }
                }
            },
            "CreateSubscriptionRequest": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "priceId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "required": [
                    "userId",
                    "priceId",
                    "profileType"
                ]
            },
            "CreateSubscriptionResponse": {
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "string"
                    },
                    "paymentIntentClientSecret": {
                        "type": "string"
                    }
                }
            },
            "CreateUserProfileRequest": {
                "type": "object",
                "properties": {
                    "profile": {
                        "$ref": "#/components/schemas/FinancialUserProfile"
                    },
                    "email": {
                        "type": "string",
                        "title": "the email of the account to create"
                    }
                },
                "title": "CreateUserProfileRequest: Represents the request object invoked against the user\nservice to create a user profile",
                "required": [
                    "profile",
                    "email"
                ]
            },
            "CreateUserProfileResponse": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    }
                },
                "title": "CreateUserProfileResponse: Represents the response object returned as a response to\nthe `create user profile` request"
            },
            "CreditAccount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "title": "the bank account type"
                    },
                    "balance": {
                        "type": "number",
                        "format": "float",
                        "title": "the bank account balance"
                    },
                    "currentFunds": {
                        "type": "number",
                        "format": "double",
                        "title": "current funds on the account"
                    },
                    "balanceLimit": {
                        "type": "string",
                        "format": "uint64",
                        "title": "balance limit"
                    },
                    "plaidAccountId": {
                        "type": "string",
                        "title": "plaid account id mapped to this bank account"
                    },
                    "subtype": {
                        "type": "string",
                        "title": "accoint subtype"
                    },
                    "isOverdue": {
                        "type": "boolean",
                        "title": "wether the account is overdue"
                    },
                    "lastPaymentAmount": {
                        "type": "number",
                        "format": "double",
                        "title": "the last payment amount"
                    },
                    "lastPaymentDate": {
                        "type": "string",
                        "title": "the last payment date"
                    },
                    "lastStatementIssueDate": {
                        "type": "string",
                        "title": "the last statement issue date"
                    },
                    "minimumAmountDueDate": {
                        "type": "number",
                        "format": "double",
                        "title": "the minimum amount due date"
                    },
                    "nextPaymentDate": {
                        "type": "string",
                        "title": "the next payment date"
                    },
                    "aprs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Apr"
                        },
                        "title": "the aprs"
                    },
                    "lastStatementBalance": {
                        "type": "number",
                        "format": "double",
                        "title": "the last statement balance"
                    },
                    "minimumPaymentAmount": {
                        "type": "number",
                        "format": "double",
                        "title": "the minimum payment amount"
                    },
                    "nextPaymentDueDate": {
                        "type": "string",
                        "title": "the next payment due date"
                    },
                    "status": {
                        "$ref": "#/components/schemas/BankAccountStatus"
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountTransaction"
                        },
                        "title": "the set of transactions tied to this account"
                    },
                    "recurringTransactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountRecurringTransaction"
                        },
                        "title": "the set of subscriptions tied to this account"
                    },
                    "pockets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Pocket"
                        },
                        "title": "set of pockets tied to this account"
                    }
                }
            },
            "DebtToIncomeRatio": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ratio": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "DebtToIncomeRatio\nThis message is used to represent the debt to income ratio of a user."
            },
            "DeleteBankAccountResponse": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean",
                        "example": "true",
                        "title": "The bank account id"
                    }
                }
            },
            "DeleteBudgetResponse": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean",
                        "title": "The budget id"
                    }
                }
            },
            "DeleteLinkResponse": {
                "type": "object",
                "properties": {
                    "linkId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The link's id"
                    }
                }
            },
            "DeleteMilestoneResponse": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean",
                        "title": "The milestone id"
                    }
                }
            },
            "DeleteNoteFromRecurringTransactionResponse": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean",
                        "title": "The transaction id"
                    }
                }
            },
            "DeleteNoteFromSmartGoalResponse": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean",
                        "title": "The smart goal id"
                    }
                }
            },
            "DeleteNoteFromTransactionResponse": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean",
                        "title": "The transaction id"
                    }
                }
            },
            "DeletePocketResponse": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean",
                        "title": "The pocket id"
                    }
                }
            },
            "DeleteRecurringTransactionResponse": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean",
                        "title": "the transaction that was successfully deleted"
                    }
                },
                "title": "DeleteTransactionResponse is the delete transaction response"
            },
            "DeleteSmartGoalResponse": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean",
                        "title": "The smart goal id"
                    }
                }
            },
            "DeleteTransactionResponse": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean",
                        "title": "the transaction that was successfully deleted"
                    }
                },
                "title": "DeleteTransactionResponse is the delete transaction response"
            },
            "DeleteUserProfileResponse": {
                "type": "object",
                "properties": {
                    "profileDeleted": {
                        "type": "boolean"
                    }
                },
                "title": "DeleteUserProfileResponse: Represents the response object returned as a response to\nthe `delete user profile` request"
            },
            "ErrorCode": {
                "type": "string",
                "enum": [
                    "no_error",
                    "validation_error",
                    "authorization_model_not_found",
                    "authorization_model_resolution_too_complex",
                    "invalid_write_input",
                    "cannot_allow_duplicate_tuples_in_one_request",
                    "cannot_allow_duplicate_types_in_one_request",
                    "cannot_allow_multiple_references_to_one_relation",
                    "invalid_continuation_token",
                    "invalid_tuple_set",
                    "invalid_check_input",
                    "invalid_expand_input",
                    "unsupported_user_set",
                    "invalid_object_format",
                    "write_failed_due_to_invalid_input",
                    "authorization_model_assertions_not_found",
                    "latest_authorization_model_not_found",
                    "type_not_found",
                    "relation_not_found",
                    "empty_relation_definition",
                    "invalid_user",
                    "invalid_tuple",
                    "unknown_relation",
                    "store_id_invalid_length",
                    "assertions_too_many_items",
                    "id_too_long",
                    "authorization_model_id_too_long",
                    "tuple_key_value_not_specified",
                    "tuple_keys_too_many_or_too_few_items",
                    "page_size_invalid",
                    "param_missing_value",
                    "difference_base_missing_value",
                    "subtract_base_missing_value",
                    "object_too_long",
                    "relation_too_long",
                    "type_definitions_too_few_items",
                    "type_invalid_length",
                    "type_invalid_pattern",
                    "relations_too_few_items",
                    "relations_too_long",
                    "relations_invalid_pattern",
                    "object_invalid_pattern",
                    "query_string_type_continuation_token_mismatch",
                    "exceeded_entity_limit",
                    "invalid_contextual_tuple",
                    "duplicate_contextual_tuple",
                    "invalid_authorization_model",
                    "unsupported_schema_version"
                ],
                "default": "no_error"
            },
            "ExpenseMetrics": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "personalFinanceCategoryPrimary": {
                        "type": "string"
                    },
                    "transactionCount": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "totalExpenses": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "ExpenseMetrics\nThis message is used to represent the expense metrics of a user."
            },
            "ExpenseMetricsFinancialSubProfileMetrics": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "spentLastWeek": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastMonth": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastSixMonths": {
                        "type": "number",
                        "format": "double"
                    },
                    "averageMonthlyDiscretionarySpending": {
                        "type": "number",
                        "format": "double"
                    },
                    "averageMonthlyRecurringSpending": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "ExpenseMetricsFinancialSubProfileMetrics\nThis message is used to represent the financial sub profile metrics of a user."
            },
            "FinancialAccountType": {
                "type": "string",
                "enum": [
                    "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED",
                    "FINANCIAL_ACCOUNT_TYPE_BANK",
                    "FINANCIAL_ACCOUNT_TYPE_INVESTMENT",
                    "FINANCIAL_ACCOUNT_TYPE_CREDIT",
                    "FINANCIAL_ACCOUNT_TYPE_MORTGAGE",
                    "FINANCIAL_ACCOUNT_TYPE_STUDENT_LOAN"
                ],
                "default": "FINANCIAL_ACCOUNT_TYPE_UNSPECIFIED"
            },
            "FinancialProfile": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalIncome": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalExpenses": {
                        "type": "number",
                        "format": "double"
                    },
                    "numberOfTransactions": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "mostExpensiveCategory": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "FinancialProfile\nThis message is used to represent the financial profile of a user."
            },
            "FinancialUserProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "userId": {
                        "type": "string",
                        "title": "NOTE: this user id refers to the id provided by auth0 as it is the source of truth on the platform. Please remember this"
                    },
                    "stripeCustomerId": {
                        "type": "string"
                    },
                    "stripeSubscriptions": {
                        "$ref": "#/components/schemas/StripeSubscription"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "title": "a user profile can have many links (connected institutions) of which finanical accounts are tied to (checking, savings, etc)"
                    },
                    "actionableInsights": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActionableInsight"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "actionablePersonalInsights": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PersonalActionableInsight"
                        }
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "title": "FinancialUserProfile stores high level user profile details\nsuch as the id, user_id tied to the profile, and many more"
            },
            "FinancialUserProfileType": {
                "type": "string",
                "enum": [
                    "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED",
                    "FINANCIAL_USER_PROFILE_TYPE_USER",
                    "FINANCIAL_USER_PROFILE_TYPE_BUSINESS"
                ],
                "default": "FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED"
            },
            "Forecast": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "forecastedAmount": {
                        "type": "string",
                        "example": "Active",
                        "title": "the forecasted amount of the goal"
                    },
                    "forecastedCompletionDate": {
                        "type": "string",
                        "example": "Active",
                        "title": "the forecasted completion date of the goal"
                    },
                    "varianceAmount": {
                        "type": "string",
                        "example": "Active",
                        "title": "the forecasted variance of the goal between the forecasted and target amounts"
                    }
                },
                "description": "The Forecast table stores information about each forecast generated for a particular goal,\nincluding the forecast date, the forecasted amount of money saved or invested for the\ngoal by the target date, and the variance between the forecasted and target amounts.\nThis allows the user to track how well they are progressing towards their goal and make adjustments as needed."
            },
            "GetAccountBalanceHistoryResponse": {
                "type": "object",
                "properties": {
                    "accountBalanceHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountBalanceHistory"
                        },
                        "title": "List of account balance history records for specific account"
                    }
                }
            },
            "GetAllBudgetsResponse": {
                "type": "object",
                "properties": {
                    "budgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Budget"
                        },
                        "title": "The budgets"
                    }
                }
            },
            "GetBankAccountResponse": {
                "type": "object",
                "properties": {
                    "bankAccount": {
                        "$ref": "#/components/schemas/BankAccount"
                    }
                },
                "title": "GetBankAccountResponse: Represents the response object returned as a response to\nthe `get bank account` request"
            },
            "GetBudgetResponse": {
                "type": "object",
                "properties": {
                    "budget": {
                        "$ref": "#/components/schemas/Budget"
                    }
                }
            },
            "GetCategoryMonthlyTransactionCountResponse": {
                "type": "object",
                "properties": {
                    "categoryMonthlyTransactionCount": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryMonthlyTransactionCount"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetDebtToIncomeRatioResponse": {
                "type": "object",
                "properties": {
                    "debtToIncomeRatios": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebtToIncomeRatio"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetExpenseMetricsResponse": {
                "type": "object",
                "properties": {
                    "expenseMetrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExpenseMetrics"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetFinancialProfileResponse": {
                "type": "object",
                "properties": {
                    "financialProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FinancialProfile"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetForecastResponse": {
                "type": "object",
                "properties": {
                    "forecast": {
                        "$ref": "#/components/schemas/Forecast"
                    }
                }
            },
            "GetHistoricalAccountBalanceResponse": {
                "type": "object",
                "properties": {
                    "historicalAccountBalance": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountBalanceHistory"
                        }
                    }
                }
            },
            "GetIncomeExpenseRatioResponse": {
                "type": "object",
                "properties": {
                    "incomeExpenseRatios": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeExpenseRatio"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetIncomeMetricsResponse": {
                "type": "object",
                "properties": {
                    "incomeMetrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeMetrics"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetInvestmentAcccountResponse": {
                "type": "object",
                "properties": {
                    "investmentAccount": {
                        "$ref": "#/components/schemas/InvestmentAccount"
                    }
                }
            },
            "GetLiabilityAccountResponse": {
                "type": "object",
                "properties": {
                    "liabilityAccount": {
                        "$ref": "#/components/schemas/CreditAccount"
                    }
                }
            },
            "GetLinkResponse": {
                "type": "object",
                "properties": {
                    "link": {
                        "$ref": "#/components/schemas/Link"
                    }
                }
            },
            "GetLinksResponse": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "title": "The links"
                    }
                }
            },
            "GetMelodyFinancialContextResponse": {
                "type": "object",
                "properties": {
                    "melodyFinancialContext": {
                        "$ref": "#/components/schemas/MelodyFinancialContext"
                    }
                }
            },
            "GetMerchantMonthlyExpenditureResponse": {
                "type": "object",
                "properties": {
                    "merchantMonthlyExpenditures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MerchantMonthlyExpenditure"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetMilestoneResponse": {
                "type": "object",
                "properties": {
                    "milestone": {
                        "$ref": "#/components/schemas/Milestone"
                    }
                }
            },
            "GetMilestonesBySmartGoalIdResponse": {
                "type": "object",
                "properties": {
                    "milestones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Milestone"
                        },
                        "title": "The milestones"
                    }
                }
            },
            "GetMonthlyBalanceResponse": {
                "type": "object",
                "properties": {
                    "monthlyBalances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MonthlyBalance"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetMonthlyExpenditureResponse": {
                "type": "object",
                "properties": {
                    "monthlyExpenditures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MonthlyExpenditure"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetMonthlyIncomeResponse": {
                "type": "object",
                "properties": {
                    "monthlyIncomes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MonthlyIncome"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetMonthlySavingsResponse": {
                "type": "object",
                "properties": {
                    "monthlySavings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MonthlySavings"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetMonthlyTotalQuantityBySecurityAndUserResponse": {
                "type": "object",
                "properties": {
                    "monthlyTotalQuantityBySecurityAndUser": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MonthlyTotalQuantityBySecurityAndUser"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetMonthlyTransactionCountResponse": {
                "type": "object",
                "properties": {
                    "monthlyTransactionCounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MonthlyTransactionCount"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetMortgageAccountResponse": {
                "type": "object",
                "properties": {
                    "mortageAccount": {
                        "$ref": "#/components/schemas/MortgageAccount"
                    }
                }
            },
            "GetNoteFromSmartGoalResponse": {
                "type": "object",
                "properties": {
                    "note": {
                        "$ref": "#/components/schemas/SmartNote"
                    }
                }
            },
            "GetNoteFromTransactionResponse": {
                "type": "object",
                "properties": {
                    "note": {
                        "$ref": "#/components/schemas/SmartNote"
                    }
                }
            },
            "GetNotesFromSmartGoalResponse": {
                "type": "object",
                "properties": {
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartNote"
                        },
                        "title": "The notes"
                    }
                }
            },
            "GetPaymentChannelMonthlyExpenditureResponse": {
                "type": "object",
                "properties": {
                    "paymentChannelMonthlyExpenditure": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentChannelMonthlyExpenditure"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetPocketResponse": {
                "type": "object",
                "properties": {
                    "pocket": {
                        "$ref": "#/components/schemas/Pocket"
                    }
                }
            },
            "GetRecurringTransactionsForUserResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountRecurringTransaction"
                        },
                        "title": "The transactions"
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "uint64"
                    }
                }
            },
            "GetSingleRecurringTransactionResponse": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountRecurringTransaction"
                    }
                },
                "title": "GetRecurringTransactionResponse is the get transaction response"
            },
            "GetSmartGoalsByPocketIdResponse": {
                "type": "object",
                "properties": {
                    "smartGoals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartGoal"
                        },
                        "title": "The smart goals"
                    }
                }
            },
            "GetSplitTransactionResponse": {
                "type": "object",
                "properties": {
                    "splitTransactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionSplit"
                        },
                        "title": "The split transactions"
                    }
                }
            },
            "GetStudentLoanAccountResponse": {
                "type": "object",
                "properties": {
                    "studentLoanAccount": {
                        "$ref": "#/components/schemas/StudentLoanAccount"
                    }
                }
            },
            "GetTotalInvestmentBySecurityResponse": {
                "type": "object",
                "properties": {
                    "totalInvestmentBySecurity": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TotalInvestmentBySecurity"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetTransactionAggregatesResponse": {
                "type": "object",
                "properties": {
                    "transactionAggregates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionAggregatesByMonth"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetTransactionResponse": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountTransaction"
                    }
                },
                "title": "GetTransactionResponse is the get transaction response"
            },
            "GetTransactionsBetweenTimeRangesResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountTransaction"
                        },
                        "title": "The transactions"
                    },
                    "currentPage": {
                        "type": "integer",
                        "format": "int64",
                        "title": "Current page number"
                    },
                    "totalAges": {
                        "type": "integer",
                        "format": "int64",
                        "title": "Total number of pages"
                    },
                    "totalTransactions": {
                        "type": "string",
                        "format": "uint64",
                        "title": "Total number of transactions in the month"
                    }
                }
            },
            "GetTransactionsForBankAccountResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        },
                        "title": "The transactions"
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "uint64"
                    }
                }
            },
            "GetTransactionsForPastMonthResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountTransaction"
                        }
                    },
                    "currentPage": {
                        "type": "integer",
                        "format": "int64",
                        "title": "Current page number"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int64",
                        "title": "Total number of pages"
                    },
                    "totalTransactions": {
                        "type": "string",
                        "format": "uint64",
                        "title": "Total number of transactions in the month"
                    }
                }
            },
            "GetTransactionsForPastWeekResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountTransaction"
                        }
                    },
                    "currentPage": {
                        "type": "integer",
                        "format": "int64",
                        "title": "Current page number"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int64",
                        "title": "Total number of pages"
                    },
                    "totalTransactions": {
                        "type": "string",
                        "format": "uint64",
                        "title": "Total number of transactions in the week"
                    }
                }
            },
            "GetTransactionsResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        },
                        "title": "The transactions"
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "uint64"
                    }
                }
            },
            "GetUserAccountBalanceHistoryResponse": {
                "type": "object",
                "properties": {
                    "accountBalanceHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountBalanceHistory"
                        },
                        "title": "List of account balance history records"
                    }
                }
            },
            "GetUserCategoryMonthlyExpenditureResponse": {
                "type": "object",
                "properties": {
                    "categoryMonthlyExpenditure": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryMonthlyExpenditure"
                        },
                        "title": "List of CategoryMonthlyExpenditure records for the user"
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetUserCategoryMonthlyIncomeResponse": {
                "type": "object",
                "properties": {
                    "categoryMonthlyIncome": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryMonthlyIncome"
                        }
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "GetUserProfileResponse": {
                "type": "object",
                "properties": {
                    "profile": {
                        "$ref": "#/components/schemas/FinancialUserProfile"
                    },
                    "financialContext": {
                        "$ref": "#/components/schemas/MelodyFinancialContext"
                    }
                },
                "title": "GetUserProfileResponse: Represents the response object returned as a response to\nthe `get user profile` request",
                "required": [
                    "financialContext"
                ]
            },
            "GoalType": {
                "type": "string",
                "enum": [
                    "GOAL_TYPE_UNSPECIFIED",
                    "GOAL_TYPE_SAVINGS",
                    "GOAL_TYPE_INVESTMENT",
                    "GOAL_TYPE_DEBT",
                    "GOAL_TYPE_EXPENSE"
                ],
                "default": "GOAL_TYPE_UNSPECIFIED"
            },
            "HealthCheckResponse": {
                "type": "object",
                "properties": {
                    "healthy": {
                        "type": "boolean"
                    }
                }
            },
            "IncomeExpenseRatio": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ratio": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "IncomeExpenseRatio\nThis message is used to represent the income expense ratio of a user."
            },
            "IncomeMetrics": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "personalFinanceCategoryPrimary": {
                        "type": "string"
                    },
                    "transactionCount": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "totalIncome": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "IncomeMetrics\nThis message is used to represent the income metrics of a user."
            },
            "IncomeMetricsFinancialSubProfile": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "incomeLastTwoWeeks": {
                        "type": "number",
                        "format": "double"
                    },
                    "incomeLastMonth": {
                        "type": "number",
                        "format": "double"
                    },
                    "incomeLastTwoMonths": {
                        "type": "number",
                        "format": "double"
                    },
                    "incomeLastSixMonths": {
                        "type": "number",
                        "format": "double"
                    },
                    "incomeLastYear": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "IncomeMetricsFinancialSubProfile\nThis message is used to represent the financial sub profile of a user."
            },
            "InternalErrorCode": {
                "type": "string",
                "enum": [
                    "no_internal_error",
                    "internal_error",
                    "cancelled",
                    "deadline_exceeded",
                    "already_exists",
                    "resource_exhausted",
                    "failed_precondition",
                    "aborted",
                    "out_of_range",
                    "unavailable",
                    "data_loss"
                ],
                "default": "no_internal_error"
            },
            "InternalErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": "internal_error",
                    "message": "Internal Server Error"
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/InternalErrorCode"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "InvesmentHolding": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "name": {
                        "type": "string",
                        "example": "nfdkjfjksdhjhfjsdhjgf",
                        "title": "The name of the investment holding",
                        "minLength": 3
                    },
                    "plaidAccountId": {
                        "type": "string",
                        "example": "k67E4xKvMlhmleEa4pg9hlwGGNnnEeixPolGm",
                        "title": "plaid account id"
                    },
                    "costBasis": {
                        "type": "number",
                        "format": "double",
                        "example": "15"
                    },
                    "institutionPrice": {
                        "type": "number",
                        "format": "double",
                        "example": "13.73"
                    },
                    "institutionPriceAsOf": {
                        "type": "string",
                        "example": "2021-04-13"
                    },
                    "institutionPriceDatetime": {
                        "type": "string",
                        "example": "2022-06-07T23:01:00Z"
                    },
                    "institutionValue": {
                        "type": "number",
                        "format": "double",
                        "example": "4437.35905"
                    },
                    "isoCurrencyCode": {
                        "type": "string",
                        "example": "USD"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "example": "25000"
                    },
                    "securityId": {
                        "type": "string",
                        "example": "vLRMV3MvY1FYNP91on35CJD5QN5rw9Fpa9qOL"
                    },
                    "unofficialCurrencyCode": {
                        "type": "string",
                        "example": "USD"
                    }
                }
            },
            "InvestmentAccount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "title": "the bank account type"
                    },
                    "balance": {
                        "type": "number",
                        "format": "float",
                        "title": "the bank account balance"
                    },
                    "currentFunds": {
                        "type": "number",
                        "format": "double"
                    },
                    "balanceLimit": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "plaidAccountId": {
                        "type": "string",
                        "title": "plaid account id mapped to this bank account"
                    },
                    "subtype": {
                        "type": "string"
                    },
                    "holdings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvesmentHolding"
                        },
                        "title": "invesment holding is the set of securities this account witholds"
                    },
                    "securities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvestmentSecurity"
                        },
                        "title": "the set of securities this account witholds"
                    },
                    "status": {
                        "$ref": "#/components/schemas/BankAccountStatus"
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountInvestmentTransaction"
                        },
                        "title": "the set of transactions tied to this account"
                    }
                }
            },
            "InvestmentSecurity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "closePrice": {
                        "type": "number",
                        "format": "double",
                        "example": " 0.140034616"
                    },
                    "closePriceAsOf": {
                        "type": "string",
                        "example": "2022-01-24"
                    },
                    "cusip": {
                        "type": "string",
                        "example": "dfkjhdgjdhhgd"
                    },
                    "institutionId": {
                        "type": "string",
                        "example": "ins_3"
                    },
                    "institutionSecurityId": {
                        "type": "string",
                        "example": "dfkjhdgjdhhgd"
                    },
                    "isCashEquivalent": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "isin": {
                        "type": "string",
                        "example": "dfkjhdgjdhhgd"
                    },
                    "isoCurrencyCode": {
                        "type": "string",
                        "example": "USD"
                    },
                    "name": {
                        "type": "string",
                        "example": "Dogecoin"
                    },
                    "proxySecurityId": {
                        "type": "string",
                        "example": "dfkjhdgjdhhgd"
                    },
                    "securityId": {
                        "type": "string",
                        "example": "vLRMV3MvY1FYNP91on35CJD5QN5rw9Fpa9qOL"
                    },
                    "sedol": {
                        "type": "string",
                        "example": "dfkjhdgjdhhgd"
                    },
                    "tickerSymbol": {
                        "type": "string",
                        "example": "DOGE"
                    },
                    "type": {
                        "type": "string",
                        "example": "cryptocurrency"
                    },
                    "unofficialCurrencyCode": {
                        "type": "string",
                        "example": "USD"
                    },
                    "updateDatetime": {
                        "type": "string",
                        "example": "2022-06-07T23:01:00Z"
                    }
                }
            },
            "Link": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "plaidSync": {
                        "$ref": "#/components/schemas/PlaidSync"
                    },
                    "linkStatus": {
                        "$ref": "#/components/schemas/LinkStatus"
                    },
                    "plaidLink": {
                        "$ref": "#/components/schemas/PlaidLink"
                    },
                    "plaidNewAccountsAvailable": {
                        "type": "boolean"
                    },
                    "expirationDate": {
                        "type": "string"
                    },
                    "institutionName": {
                        "type": "string"
                    },
                    "customInstitutionName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "lastManualSync": {
                        "type": "string"
                    },
                    "lastSuccessfulUpdate": {
                        "type": "string"
                    },
                    "token": {
                        "$ref": "#/components/schemas/Token"
                    },
                    "bankAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccount"
                        },
                        "title": "a link event - or client login event can have many connected bank accounts\nfor example a log in link against one instition like chase can have many account (checking and savings)\nit is important though to ensure that if a link against an instition already exists, we dont fascilitate duplicated"
                    },
                    "investmentAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvestmentAccount"
                        },
                        "title": "a link event - or client login event can have many connected investment accounts\nfor example a log in link against one instition like fidelity can have many accounts (401k and investment account)\nit is important though to ensure that if a link against an instition already exists, we dont fascilitate duplicated"
                    },
                    "creditAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreditAccount"
                        },
                        "title": "credit accounts tied to a user"
                    },
                    "mortgageAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MortgageAccount"
                        },
                        "title": "mortgage accounts tied to a user"
                    },
                    "studentLoanAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StudentLoanAccount"
                        },
                        "title": "student loan accounts tied to a link"
                    },
                    "plaidInstitutionId": {
                        "type": "string",
                        "title": "the id of the institution this link is tied to and against"
                    },
                    "linkType": {
                        "$ref": "#/components/schemas/LinkType"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "newAccountsAvailable": {
                        "type": "boolean"
                    },
                    "shouldBeUpdated": {
                        "type": "boolean"
                    }
                },
                "description": "A Link represents a login at a financial institution. A single end-user of your application might have accounts at different financial\ninstitutions, which means they would have multiple different Items. An Item is not the same as a financial institution account,\nalthough every account will be associated with an Item. For example, if a user has one login at their bank that allows them to access\nboth their checking account and their savings account, a single Item would be associated with both of those accounts. Each Item \nlinked within your application will have a corresponding access_token, which is a token that you can use to make API requests related\nto that specific Item.\nTwo Items created for the same set of credentials at the same institution will be considered different and not share the same item_id."
            },
            "LinkStatus": {
                "type": "string",
                "enum": [
                    "LINK_STATUS_UNSPECIFIED",
                    "LINK_STATUS_SETUP",
                    "LINK_STATUS_PENDING",
                    "LINK_STATUS_ERROR",
                    "LINK_STATUS_SUCCESS",
                    "LINK_STATUS_PENDING_EXPIRATION",
                    "LINK_STATUS_REVOKED",
                    "LINK_STATUS_ITEM_LOGIN_REQUIRED"
                ],
                "default": "LINK_STATUS_UNSPECIFIED"
            },
            "LinkType": {
                "type": "string",
                "enum": [
                    "LINK_TYPE_UNSPECIFIED",
                    "LINK_TYPE_PLAID",
                    "LINK_TYPE_MANUAL"
                ],
                "default": "LINK_TYPE_UNSPECIFIED"
            },
            "ListRecurringTransactionNotesResponse": {
                "type": "object",
                "properties": {
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartNote"
                        },
                        "title": "The notes"
                    }
                }
            },
            "ListRecurringTransactionsForUserAndAccountResponse": {
                "type": "object",
                "properties": {
                    "nextPage": {
                        "type": "string"
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountRecurringTransaction"
                        }
                    }
                },
                "title": "ListRecurringTransactionsResponse is the list transaction response"
            },
            "ListTransactionNotesResponse": {
                "type": "object",
                "properties": {
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartNote"
                        },
                        "title": "The notes"
                    }
                }
            },
            "ListTransactionsAcrossAllAccountsResponse": {
                "type": "object",
                "properties": {
                    "nextPage": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountTransaction"
                        }
                    }
                },
                "title": "ListTransactionsResponse is the list transaction response"
            },
            "ListTransactionsResponse": {
                "type": "object",
                "properties": {
                    "nextPage": {
                        "type": "string"
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountTransaction"
                        }
                    }
                },
                "title": "ListTransactionsResponse is the list transaction response"
            },
            "LocationFinancialSubProfile": {
                "type": "object",
                "properties": {
                    "locationCity": {
                        "type": "string"
                    },
                    "transactionCount": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "spentLastWeek": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastTwoWeeks": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastMonth": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastSixMonths": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastYear": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastTwoYears": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "LocationFinancialSubProfile\nThis message is used to represent the financial sub profile of a location."
            },
            "MelodyFinancialContext": {
                "type": "object",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryMetricsFinancialSubProfile"
                        }
                    },
                    "expenses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExpenseMetricsFinancialSubProfileMetrics"
                        }
                    },
                    "income": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeMetricsFinancialSubProfile"
                        }
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocationFinancialSubProfile"
                        }
                    },
                    "merchants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MerchantMetricsFinancialSubProfile"
                        }
                    },
                    "paymentChannels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentChannelMetricsFinancialSubProfile"
                        }
                    },
                    "bankAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccount"
                        }
                    },
                    "investmentAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvestmentAccount"
                        }
                    },
                    "creditAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreditAccount"
                        }
                    },
                    "mortgageLoanAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MortgageAccount"
                        }
                    },
                    "studentLoanAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StudentLoanAccount"
                        }
                    },
                    "financialUserProfileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "MelodyFinancialContext represents the financial context of a user.\nThis message is used to represent the financial context of a user."
            },
            "MerchantMetricsFinancialSubProfile": {
                "type": "object",
                "properties": {
                    "merchantName": {
                        "type": "string"
                    },
                    "spentLastWeek": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastTwoWeeks": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastMonth": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastSixMonths": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastYear": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastTwoYears": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "MerchantFinancialSubProfile\nThis message is used to represent the financial sub profile of a merchant."
            },
            "MerchantMonthlyExpenditure": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "merchantName": {
                        "type": "string"
                    },
                    "totalSpending": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "MerchantMonthlyExpenditure\nThis message is used to represent the monthly expenditure of a merchant."
            },
            "Milestone": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "name": {
                        "type": "string",
                        "example": "Buy a car",
                        "title": "The name of the milestone\nValidations:\n- must be at least 3 characters long"
                    },
                    "description": {
                        "type": "string",
                        "example": "Buy a car",
                        "title": "The description of the miletone\nValidations:\n- must be at least 3 characters long"
                    },
                    "targetDate": {
                        "type": "string",
                        "example": "testtagdescription",
                        "title": "the target date of the milestone\nValidations:\n- must be at least 3 characters long"
                    },
                    "targetAmount": {
                        "type": "string",
                        "example": "Active",
                        "title": "the target amount of the milestone"
                    },
                    "isCompleted": {
                        "type": "boolean",
                        "example": true,
                        "title": "wethe milestone is completed or not"
                    },
                    "budget": {
                        "$ref": "#/components/schemas/Budget"
                    }
                },
                "title": "Milestone: represents a milestone in the context of simfinni. A financial milestone that is both smart\nand achievable. A milestone is a sub goal of a goal and is tied to a goal by the goal id"
            },
            "MonthlyBalance": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "netBalance": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "MonthlyBalance\nThis message is used to represent the monthly balance of a user."
            },
            "MonthlyExpenditure": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalSpending": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "MonthlyExpenditure\nThis message is used to represent the monthly expenditure of a user."
            },
            "MonthlyIncome": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalIncome": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "MonthlyIncome\nThis message is used to represent the monthly income of a user."
            },
            "MonthlySavings": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "netSavings": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "MonthlySavings\nThis message is used to represent the monthly savings of a user."
            },
            "MonthlyTotalQuantityBySecurityAndUser": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "securityId": {
                        "type": "string"
                    },
                    "totalQuantity": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "MonthlyTotalQuantityBySecurityAndUser\nThis message is used to represent the monthly total quantity of a security."
            },
            "MonthlyTransactionCount": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "transactionCount": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "MonthlyTransactionCount\nThis message is used to represent the monthly transaction count of a user."
            },
            "MortgageAccount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "plaidAccountId": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "currentLateFee": {
                        "type": "number",
                        "format": "double"
                    },
                    "escrowBalance": {
                        "type": "number",
                        "format": "double"
                    },
                    "hasPmi": {
                        "type": "boolean"
                    },
                    "hasPrepaymentPenalty": {
                        "type": "boolean"
                    },
                    "lastPaymentAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "lastPaymentDate": {
                        "type": "string"
                    },
                    "loanTerm": {
                        "type": "string"
                    },
                    "loanTypeDescription": {
                        "type": "string"
                    },
                    "maturityDate": {
                        "type": "string"
                    },
                    "nextMonthlyPayment": {
                        "type": "number",
                        "format": "double"
                    },
                    "nextPaymentDueDate": {
                        "type": "string"
                    },
                    "originalPrincipalBalance": {
                        "type": "number",
                        "format": "double"
                    },
                    "originalPropertyValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "outstandingPrincipalBalance": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentDate": {
                        "type": "string"
                    },
                    "originationDate": {
                        "type": "string"
                    },
                    "originationPrincipalAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "pastDueAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "ytdInterestPaid": {
                        "type": "number",
                        "format": "double"
                    },
                    "ytdPrincipalPaid": {
                        "type": "number",
                        "format": "double"
                    },
                    "propertyAddressCity": {
                        "type": "string"
                    },
                    "propertyAddressState": {
                        "type": "string"
                    },
                    "propertyAddressStreet": {
                        "type": "string"
                    },
                    "propertyAddressPostalCode": {
                        "type": "string"
                    },
                    "propertyRegion": {
                        "type": "string"
                    },
                    "propertyCountry": {
                        "type": "string"
                    },
                    "interestRatePercentage": {
                        "type": "number",
                        "format": "double"
                    },
                    "interestRateType": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/BankAccountStatus"
                    }
                }
            },
            "NotFoundErrorCode": {
                "type": "string",
                "enum": [
                    "no_not_found_error",
                    "undefined_endpoint",
                    "store_id_not_found",
                    "unimplemented"
                ],
                "default": "no_not_found_error"
            },
            "PathUnknownErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": "undefined_endpoint",
                    "message": "Endpoint not enabled"
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/NotFoundErrorCode"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "PaymentChannelMetricsFinancialSubProfile": {
                "type": "object",
                "properties": {
                    "paymentChannel": {
                        "type": "string"
                    },
                    "spentLastWeek": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastTwoWeeks": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastMonth": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastSixMonths": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastYear": {
                        "type": "number",
                        "format": "double"
                    },
                    "spentLastTwoYears": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "transactionCount": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "PaymentChannelMetricsFinancialSubProfile\nThis message is used to represent the financial sub profile of a payment channel."
            },
            "PaymentChannelMonthlyExpenditure": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paymentChannel": {
                        "type": "string"
                    },
                    "totalSpending": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "PaymentChannelMonthlyExpenditure\nThis message is used to represent the monthly expenditure of a payment channel."
            },
            "PersonalActionableInsight": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "insightName": {
                        "$ref": "#/components/schemas/PersonalActionableInsightName"
                    },
                    "description": {
                        "type": "string",
                        "title": "insight description"
                    },
                    "takeaway": {
                        "type": "string",
                        "title": "insight takeaway"
                    },
                    "action": {
                        "type": "string",
                        "title": "insight action"
                    },
                    "expectedBenefit": {
                        "type": "string",
                        "title": "insight expected benefit"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "insight tags"
                    },
                    "generatedTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "insight generated time"
                    },
                    "metricsToOptimizeFor": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "metrics to optimize for"
                    }
                }
            },
            "PersonalActionableInsightName": {
                "type": "string",
                "enum": [
                    "PERSONAL_ACTIONABLE_INSIGHT_NAME_UNSPECIFIED",
                    "PERSONAL_ACTIONABLE_INSIGHT_NAME_EXPENSE",
                    "PERSONAL_ACTIONABLE_INSIGHT_NAME_EMERGENCY_FUND",
                    "PERSONAL_ACTIONABLE_INSIGHT_NAME_DEBT_PRIORITIZATION",
                    "PERSONAL_ACTIONABLE_INSIGHT_NAME_NON_ESSENTIAL_EXPENSES",
                    "PERSONAL_ACTIONABLE_INSIGHT_NAME_NON_SUBSCRIPTIONS",
                    "PERSONAL_ACTIONABLE_INSIGHT_NAME_DISCRETIONARY_SPENDING"
                ],
                "default": "PERSONAL_ACTIONABLE_INSIGHT_NAME_UNSPECIFIED"
            },
            "PlaidAccountInvestmentTransaction": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "title": "The unique identifier for the associated investment account.\n@gotag: ch:\"account_id\""
                    },
                    "ammount": {
                        "type": "string",
                        "title": "The amount of the investment transaction.\n@gotag: ch:\"amount\""
                    },
                    "investmentTransactionId": {
                        "type": "string",
                        "title": "The unique identifier for the investment transaction.\n@gotag: ch:\"investment_transaction_id\""
                    },
                    "securityId": {
                        "type": "string",
                        "title": "The security or asset identifier associated with the investment transaction.\n@gotag: ch:\"security_id\""
                    },
                    "currentDate": {
                        "type": "string",
                        "title": "The date of the investment transaction.\n@gotag: ch:\"date\""
                    },
                    "name": {
                        "type": "string",
                        "title": "The name or description of the investment transaction.\n@gotag: ch:\"name\""
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "title": "The quantity of the investment transaction (e.g., number of shares).\n@gotag: ch:\"quantity\""
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "title": "The monetary amount of the investment transaction.\n@gotag: ch:\"amount\""
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "title": "The price per unit of the security for the investment transaction.\n@gotag: ch:\"price\""
                    },
                    "fees": {
                        "type": "number",
                        "format": "double",
                        "title": "The fees associated with the investment transaction.\n@gotag: ch:\"fees\""
                    },
                    "type": {
                        "type": "string",
                        "title": "The type of the investment transaction (e.g., buy, sell, dividend).\n@gotag: ch:\"type\""
                    },
                    "subtype": {
                        "type": "string",
                        "title": "The subtype of the investment transaction (e.g., stock, bond).\n@gotag: ch:\"subtype\""
                    },
                    "isoCurrencyCode": {
                        "type": "string",
                        "title": "The ISO currency code for the investment transaction.\n@gotag: ch:\"iso_currency_code\""
                    },
                    "unofficialCurrencyCode": {
                        "type": "string",
                        "title": "The unofficial currency code of the investment transaction.\n@gotag: ch:\"unofficial_currency_code\""
                    },
                    "linkId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The link ID associated with this investment transaction.\n@gotag: ch:\"link_id\""
                    },
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The unique identifier for this investment transaction.\n@gotag: ch:\"id\""
                    },
                    "userId": {
                        "type": "string",
                        "title": "The user ID associated with this investment transaction.\n@gotag: ch:\"user_id\""
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The date and time when this investment transaction was created.\n@gotag: ch:\"created_at\""
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The timestamp associated with this investment transaction.\n@gotag: ch:\"time\""
                    },
                    "additionalProperties": {
                        "$ref": "#/components/schemas/Any"
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartNote"
                        },
                        "title": "Notes associated with this investment transaction.\n@gotag: ch:\"notes\""
                    }
                },
                "description": "Message representing investment transactions associated with a Plaid account."
            },
            "PlaidAccountRecurringTransaction": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "title": "The unique identifier for the associated bank account.\n@gotag: ch:\"account_id\""
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string",
                        "title": "The category ID associated with the recurring transaction.\n@gotag: ch:\"category_id\""
                    },
                    "description": {
                        "type": "string",
                        "title": "A description or note for the recurring transaction.\n@gotag: ch:\"description\""
                    },
                    "merchantName": {
                        "type": "string",
                        "title": "The name of the merchant associated with the recurring transaction.\n@gotag: ch:\"merchant_name\""
                    },
                    "personalFinanceCategoryPrimary": {
                        "type": "string",
                        "title": "The primary personal finance category of the recurring transaction.\n@gotag: ch:\"personal_finance_category_primary\""
                    },
                    "personalFinanceCategoryDetailed": {
                        "type": "string",
                        "title": "The detailed personal finance category of the recurring transaction.\n@gotag: ch:\"personal_finance_category_detailed\""
                    },
                    "firstDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The date of the first occurrence of the recurring transaction.\n@gotag: ch:\"first_date\""
                    },
                    "lastDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The date of the last occurrence of the recurring transaction.\n@gotag: ch:\"last_date\""
                    },
                    "frequency": {
                        "type": "string",
                        "title": "The frequency at which the recurring transaction occurs (e.g., monthly).\n@gotag: ch:\"frequency\""
                    },
                    "transactionIds": {
                        "type": "string",
                        "title": "A comma-separated list of transaction IDs associated with this recurring transaction.\n@gotag: ch:\"transaction_ids,array\""
                    },
                    "averageAmount": {
                        "type": "string",
                        "title": "The average amount of the recurring transaction.\n@gotag: ch:\"average_amount\""
                    },
                    "averageAmountIsoCurrencyCode": {
                        "type": "string",
                        "title": "The ISO currency code for the average transaction amount.\n@gotag: ch:\"average_amount_iso_currency_code\""
                    },
                    "lastAmount": {
                        "type": "string",
                        "title": "The amount of the most recent occurrence of the recurring transaction.\n@gotag: ch:\"last_amount\""
                    },
                    "lastAmountIsoCurrencyCode": {
                        "type": "string",
                        "title": "The ISO currency code for the most recent transaction amount.\n@gotag: ch:\"last_amount_iso_currency_code\""
                    },
                    "isActive": {
                        "type": "boolean",
                        "title": "Indicates whether the recurring transaction is currently active.\n@gotag: ch:\"is_active\""
                    },
                    "status": {
                        "type": "string",
                        "title": "The status of the recurring transaction (e.g., \"Active\" or \"Inactive\").\n@gotag: ch:\"status\""
                    },
                    "updatedTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The timestamp when this recurring transaction was last updated.\n@gotag: ch:\"updated_time\""
                    },
                    "userId": {
                        "type": "string",
                        "title": "The user ID associated with this recurring transaction.\n@gotag: ch:\"user_id\""
                    },
                    "linkId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The link ID associated with this recurring transaction.\n@gotag: ch:\"link_id\""
                    },
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The unique identifier for this recurring transaction.\n@gotag: ch:\"id\""
                    },
                    "flow": {
                        "type": "string",
                        "title": "The flow associated with this recurring transaction.\n@gotag: ch:\"flow\""
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp associated with this recurring transaction."
                    },
                    "additionalProperties": {
                        "$ref": "#/components/schemas/Any"
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartNote"
                        },
                        "description": "Notes associated with this recurring transaction."
                    }
                },
                "description": "Message representing recurring transactions associated with a Plaid account."
            },
            "PlaidAccountTransaction": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The bank account ID associated with the transaction."
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of the transaction.\n\n@gotag: ch:\"amount\""
                    },
                    "isoCurrencyCode": {
                        "type": "string",
                        "description": "The currency code of the transaction.\n\n@gotag: ch:\"iso_currency_code\""
                    },
                    "unofficialCurrencyCode": {
                        "type": "string",
                        "description": "The unofficial currency code of the transaction.\n\n@gotag: ch:\"unofficial_currency_code\""
                    },
                    "transactionId": {
                        "type": "string",
                        "description": "The transaction ID of interest.\n\n@gotag: ch:\"transaction_id\""
                    },
                    "transactionCode": {
                        "type": "string",
                        "description": "The transaction code.\n\n@gotag: ch:\"transaction_code\""
                    },
                    "currentDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date of the transaction.\n\n@gotag: ch:\"date\""
                    },
                    "currentDatetime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The current datetime of the transaction.\n\n@gotag: ch:\"datetime\""
                    },
                    "authorizedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time at which the transaction was authorized.\n\n@gotag: ch:\"authorized_date\""
                    },
                    "authorizedDatetime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date-time when the transaction was authorized.\n\n@gotag: ch:\"authorized_datetime\""
                    },
                    "categoryId": {
                        "type": "string",
                        "description": "The category ID of the transaction.\n\n@gotag: ch:\"category_id\""
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The set of categories that the transaction belongs to."
                    },
                    "personalFinanceCategoryPrimary": {
                        "type": "string",
                        "description": "The primary personal finance category of the transaction.\n\n@gotag: ch:\"personal_finance_category_primary\""
                    },
                    "personalFinanceCategoryDetailed": {
                        "type": "string",
                        "description": "The detailed personal finance category of the transaction.\n\n@gotag: ch:\"personal_finance_category_detailed\""
                    },
                    "transactionName": {
                        "type": "string",
                        "description": "The name of the transaction.\n\n@gotag: ch:\"name\""
                    },
                    "merchantName": {
                        "type": "string",
                        "description": "The merchant name of the transaction.\n\n@gotag: ch:\"merchant_name\""
                    },
                    "checkNumber": {
                        "type": "string",
                        "description": "The check number associated with the transaction.\n\n@gotag: ch:\"check_number\""
                    },
                    "paymentChannel": {
                        "type": "string",
                        "description": "The payment channel for the transaction.\n\n@gotag: ch:\"payment_channel\""
                    },
                    "pending": {
                        "type": "boolean",
                        "description": "Indicates whether the transaction is pending.\n\n@gotag: ch:\"pending\""
                    },
                    "pendingTransactionId": {
                        "type": "string",
                        "description": "The ID of the pending transaction, if applicable.\n\n@gotag: ch:\"pending_transaction_id\""
                    },
                    "accountOwner": {
                        "type": "string",
                        "description": "The account owner associated with the transaction.\n\n@gotag: ch:\"account_owner\""
                    },
                    "paymentMetaByOrderOf": {
                        "type": "string",
                        "description": "Information about the entity to whom the payment is made (if available)."
                    },
                    "paymentMetaPayee": {
                        "type": "string",
                        "description": "Information about the payee (if available)."
                    },
                    "paymentMetaPayer": {
                        "type": "string",
                        "description": "Information about the payer (if available)."
                    },
                    "paymentMetaPaymentMethod": {
                        "type": "string",
                        "description": "The payment method used for the transaction (if available)."
                    },
                    "paymentMetaPaymentProcessor": {
                        "type": "string",
                        "description": "The payment processor involved in the transaction (if available)."
                    },
                    "paymentMetaPpdId": {
                        "type": "string",
                        "description": "The Prearranged Payment and Deposit (PPD) ID (if available)."
                    },
                    "paymentMetaReason": {
                        "type": "string",
                        "description": "The reason for the payment (if available)."
                    },
                    "paymentMetaReferenceNumber": {
                        "type": "string",
                        "description": "The reference number associated with the payment (if available)."
                    },
                    "locationAddress": {
                        "type": "string",
                        "description": "The street address of the transaction location (if available)."
                    },
                    "locationCity": {
                        "type": "string",
                        "description": "The city of the transaction location (if available)."
                    },
                    "locationRegion": {
                        "type": "string",
                        "description": "The region or state of the transaction location (if available)."
                    },
                    "locationPostalCode": {
                        "type": "string",
                        "description": "The postal code of the transaction location (if available)."
                    },
                    "locationCountry": {
                        "type": "string",
                        "description": "The country of the transaction location (if available)."
                    },
                    "locationLat": {
                        "type": "number",
                        "format": "double",
                        "description": "The latitude of the transaction location (if available)."
                    },
                    "locationLon": {
                        "type": "number",
                        "format": "double",
                        "description": "The longitude of the transaction location (if available)."
                    },
                    "locationStoreNumber": {
                        "type": "string",
                        "description": "The store number associated with the transaction location (if available)."
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp associated with the transaction."
                    },
                    "additionalProperties": {
                        "$ref": "#/components/schemas/Any"
                    },
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "description": "The unique ID for this transaction."
                    },
                    "userId": {
                        "type": "string",
                        "description": "The user ID associated with this transaction."
                    },
                    "linkId": {
                        "type": "string",
                        "format": "uint64",
                        "description": "The link ID associated with this transaction."
                    },
                    "needsReview": {
                        "type": "boolean",
                        "description": "Indicates whether this transaction needs review."
                    },
                    "hideTransaction": {
                        "type": "boolean",
                        "description": "Indicates whether this transaction should be hidden."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags associated with this transaction."
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartNote"
                        },
                        "description": "Notes associated with this transaction."
                    },
                    "splits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionSplit"
                        },
                        "description": "The number of splits associated with this transaction."
                    }
                },
                "description": "Message representing Plaid account transactions."
            },
            "PlaidExchangeTokenRequest": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "title": "The user id\nValidations:\n- user_id must be greater than 0"
                    },
                    "publicToken": {
                        "type": "string",
                        "title": "The public token\nValidations:\n- cannot be nil hence required"
                    },
                    "institutionId": {
                        "type": "string",
                        "title": "The institution id"
                    },
                    "institutionName": {
                        "type": "string",
                        "title": "The institution name"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "required": [
                    "userId",
                    "publicToken",
                    "profileType"
                ]
            },
            "PlaidExchangeTokenResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "wether the operation was successful"
                    },
                    "workflowId": {
                        "type": "string",
                        "title": "the id of the async task triggered to sync plaid records"
                    },
                    "runId": {
                        "type": "string"
                    }
                },
                "required": [
                    "success"
                ]
            },
            "PlaidInitiateTokenExchangeRequest": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "title": "A unique ID representing the end user. Typically this will be a user ID number from your application.\nPersonally identifiable information, such as an email address or phone number, \nshould not be used in the `client_user_id`. It is currently used as a means of searching logs \nfor the given user in the Plaid Dashboard.\nValidations:\n- user_id must be greater than 0"
                    },
                    "fullName": {
                        "type": "string",
                        "description": "The user's full legal name. This is an optional field used in \nthe [returning user experience](https://plaid.com/docs/link/returning-user) to associate Items to the user."
                    },
                    "email": {
                        "type": "string",
                        "description": "The user's email address. This field is optional, but required to enable the \n[pre-authenticated returning user flow](https://plaid.com/docs/link/returning-user/#enabling-the-returning-user-experience)."
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "The user's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.\nThis field is optional, but required to enable the [returning user experience](https://plaid.com/docs/link/returning-user)."
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "required": [
                    "userId",
                    "fullName",
                    "email",
                    "phoneNumber",
                    "profileType"
                ]
            },
            "PlaidInitiateTokenExchangeResponse": {
                "type": "object",
                "properties": {
                    "linkToken": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "plaidRequestId": {
                        "type": "string"
                    }
                }
            },
            "PlaidInitiateTokenUpdateRequest": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "title": "The user id\nValidations:\n- user_id must be greater than 0"
                    },
                    "linkId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The link id we want to update for\nValidations:\n- cannot be nil hence required"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "required": [
                    "userId",
                    "linkId",
                    "profileType"
                ]
            },
            "PlaidInitiateTokenUpdateResponse": {
                "type": "object",
                "properties": {
                    "linkToken": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    }
                }
            },
            "PlaidLink": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webhookUrl": {
                        "type": "string"
                    },
                    "institutionId": {
                        "type": "string"
                    },
                    "institutionName": {
                        "type": "string"
                    },
                    "usePlaidSync": {
                        "type": "boolean"
                    },
                    "itemId": {
                        "type": "string"
                    }
                }
            },
            "PlaidSync": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "timeStamp": {
                        "type": "string"
                    },
                    "trigger": {
                        "type": "string"
                    },
                    "nextCursor": {
                        "type": "string"
                    },
                    "added": {
                        "type": "string",
                        "format": "int64"
                    },
                    "removed": {
                        "type": "string",
                        "format": "int64"
                    },
                    "modified": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "Pocket": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "goals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartGoal"
                        },
                        "title": "the set of smart goals this user witholds"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PocketType"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "the tags tied to this pocket"
                    }
                },
                "title": "Pocket is an abstraction of a over a bank account. A user can has at most 4 pockets per connected account\nNOTE: these pockets are automatically created by the system and should not be exposed for mutation\nby any client. The only operations that can be performed against a pocket are:\n1. Get the pocket\n2. Get the pocket's smart goals\n3. Adding a smart goal to the pocket"
            },
            "PocketType": {
                "type": "string",
                "enum": [
                    "POCKET_TYPE_UNSPECIFIED",
                    "POCKET_TYPE_DISCRETIONARY_SPENDING",
                    "POCKET_TYPE_FUN_MONEY",
                    "POCKET_TYPE_DEBT_REDUCTION",
                    "POCKET_TYPE_EMERGENCY_FUND",
                    "POCKET_TYPE_INVESTMENT",
                    "POCKET_TYPE_SHORT_TERM_SAVINGS",
                    "POCKET_TYPE_LONG_TERM_SAVINGS",
                    "POCKET_TYPE_IMPROVE_CREDIT_SCORE",
                    "POCKET_TYPE_DEBT_CONSOLIDATION",
                    "POCKET_TYPE_CREDIT_CARD_MANAGEMENT",
                    "POCKET_TYPE_LOAN_REPAYMENT"
                ],
                "default": "POCKET_TYPE_UNSPECIFIED"
            },
            "PollAsyncTaskExecutionStatusResponse": {
                "type": "object",
                "properties": {
                    "workflowId": {
                        "type": "string",
                        "title": "The workflow id"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TaskState"
                    },
                    "runId": {
                        "type": "string",
                        "title": "The run id"
                    }
                }
            },
            "ReadynessCheckResponse": {
                "type": "object",
                "properties": {
                    "healthy": {
                        "type": "boolean"
                    }
                }
            },
            "RecordAskCopilotQuestionRequest": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "title": "the account id associated with the user"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "required": [
                    "profileType"
                ]
            },
            "RecordAskCopilotQuestionResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "wether or not the user is below quote"
                    },
                    "remainingQuota": {
                        "type": "number",
                        "format": "double",
                        "title": "the remaining quote"
                    }
                }
            },
            "SearchTransactionsRequest": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "title": "The user id\nValidations:\n- user_id must be greater than 0"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    },
                    "pageNumber": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The page number"
                    },
                    "pageSize": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The page size"
                    },
                    "minAmount": {
                        "type": "number",
                        "format": "double",
                        "title": "min amount"
                    },
                    "maxAmount": {
                        "type": "number",
                        "format": "double",
                        "title": "max amount"
                    },
                    "category": {
                        "type": "string",
                        "title": "category"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "start date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "end date"
                    },
                    "financialAccountType": {
                        "$ref": "#/components/schemas/FinancialAccountType"
                    }
                },
                "required": [
                    "userId",
                    "profileType",
                    "pageNumber",
                    "pageSize"
                ]
            },
            "SearchTransactionsResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaidAccountTransaction"
                        },
                        "title": "The transactions"
                    },
                    "nextPageNumber": {
                        "type": "string",
                        "format": "uint64"
                    }
                }
            },
            "SmartGoal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "example": "Buy a car",
                        "title": "The description of the goal\nValidations:\n- must be at least 3 characters long"
                    },
                    "isCompleted": {
                        "type": "boolean",
                        "example": true,
                        "title": "wether the goal has been achieved or not"
                    },
                    "goalType": {
                        "$ref": "#/components/schemas/GoalType"
                    },
                    "duration": {
                        "type": "string",
                        "example": "Active",
                        "title": "The duration of the goal"
                    },
                    "startDate": {
                        "type": "string",
                        "example": "Active",
                        "title": "the start date of the goal"
                    },
                    "endDate": {
                        "type": "string",
                        "example": "Active",
                        "title": "the end date of the goal"
                    },
                    "targetAmount": {
                        "type": "string",
                        "example": "Active",
                        "title": "the target amount of the goal\namount of money the user wants to save or invest"
                    },
                    "currentAmount": {
                        "type": "string",
                        "example": "Active",
                        "title": "the current amount of the goal\ncurrent amount of money saved or invested towards the goal"
                    },
                    "milestones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Milestone"
                        },
                        "title": "Milestones associated with the goal"
                    },
                    "forecasts": {
                        "$ref": "#/components/schemas/Forecast"
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartNote"
                        },
                        "title": "Notes associated with the goal"
                    }
                },
                "description": "SmartGoal: The Goals table stores information about each financial goal, including the name of the goal,\nits description, the target amount of money the user wants to save or invest, and the expected date of completion.\n\nThe Goals table also includes columns for the start date of the goal, the current amount of money saved or\ninvested towards the goal, and a boolean flag indicating whether the goal has been achieved.\nThese additional columns allow the user to track their progress towards the goal and see how much\nmore they need to save or invest to reach their target amount."
            },
            "SmartNote": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "Unique identifier for the note"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string",
                        "example": "Note content here...",
                        "title": "The content of the note\nValidations:\n- must be at least 3 characters long"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp indicating when the note was created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp indicating when the note was last updated"
                    }
                },
                "title": "Note schema"
            },
            "SplitTransactionRequest": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The transaction id\nValidations:\n- transaction_id must be greater than 0"
                    },
                    "splitTransactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionSplit"
                        },
                        "title": "The split transaction\nValidations:\n- cannot be nil hence required"
                    }
                },
                "required": [
                    "transactionId",
                    "splitTransactions"
                ]
            },
            "SplitTransactionResponse": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountTransaction"
                    }
                }
            },
            "Status": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Any"
                        }
                    }
                }
            },
            "StripeSubscription": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "stripeSubscriptionId": {
                        "type": "string",
                        "title": "stripe subscription id tied to the customer"
                    },
                    "stripeSubscriptionStatus": {
                        "$ref": "#/components/schemas/StripeSubscriptionStatus"
                    },
                    "stripeSubscriptionActiveUntil": {
                        "type": "string",
                        "title": "stripe subscription active until"
                    },
                    "stripeWebhookLatestTimestamp": {
                        "type": "string",
                        "title": "stripe webhook latest timestamp"
                    },
                    "isTrialing": {
                        "type": "boolean",
                        "title": "wether the subscription is trialing"
                    }
                },
                "title": "StripeSubscription stores high level stripe subscription details of which the user profile has"
            },
            "StripeSubscriptionStatus": {
                "type": "string",
                "enum": [
                    "STRIPE_SUBSCRIPTION_STATUS_UNSPECIFIED",
                    "STRIPE_SUBSCRIPTION_STATUS_TRIALING",
                    "STRIPE_SUBSCRIPTION_STATUS_ACTIVE",
                    "STRIPE_SUBSCRIPTION_STATUS_PAST_DUE",
                    "STRIPE_SUBSCRIPTION_STATUS_CANCELED",
                    "STRIPE_SUBSCRIPTION_STATUS_UNPAID",
                    "STRIPE_SUBSCRIPTION_STATUS_COMPLETE",
                    "STRIPE_SUBSCRIPTION_STATUS_INCOMPLETE",
                    "STRIPE_SUBSCRIPTION_STATUS_INCOMPLETE_EXPIRED",
                    "STRIPE_SUBSCRIPTION_STATUS_CREATED",
                    "STRIPE_SUBSCRIPTION_STATUS_PAUSED"
                ],
                "default": "STRIPE_SUBSCRIPTION_STATUS_UNSPECIFIED"
            },
            "StudentLoanAccount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "plaidAccountId": {
                        "type": "string"
                    },
                    "disbursementDates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "expectedPayoffDate": {
                        "type": "string"
                    },
                    "guarantor": {
                        "type": "string"
                    },
                    "interestRatePercentage": {
                        "type": "number",
                        "format": "double"
                    },
                    "isOverdue": {
                        "type": "boolean"
                    },
                    "lastPaymentAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "lastPaymentDate": {
                        "type": "string"
                    },
                    "lastStatementIssueDate": {
                        "type": "string"
                    },
                    "loanName": {
                        "type": "string"
                    },
                    "loanEndDate": {
                        "type": "string"
                    },
                    "minimumPaymentAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "nextPaymentDueDate": {
                        "type": "string"
                    },
                    "originationDate": {
                        "type": "string"
                    },
                    "originationPrincipalAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "outstandingInterestAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentReferenceNumber": {
                        "type": "string"
                    },
                    "sequenceNumber": {
                        "type": "string"
                    },
                    "ytdInterestPaid": {
                        "type": "number",
                        "format": "double"
                    },
                    "ytdPrincipalPaid": {
                        "type": "number",
                        "format": "double"
                    },
                    "loanType": {
                        "type": "string"
                    },
                    "pslfStatusEstimatedEligibilityDate": {
                        "type": "string"
                    },
                    "pslfStatusPaymentsMade": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pslfStatusPaymentsRemaining": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "repaymentPlanType": {
                        "type": "string"
                    },
                    "repaymentPlanDescription": {
                        "type": "string"
                    },
                    "servicerAddressCity": {
                        "type": "string"
                    },
                    "servicerAddressPostalCode": {
                        "type": "string"
                    },
                    "servicerAddressState": {
                        "type": "string"
                    },
                    "servicerAddressStreet": {
                        "type": "string"
                    },
                    "servicerAddressRegion": {
                        "type": "string"
                    },
                    "servicerAddressCountry": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string",
                        "title": "the user id to which this bank account is tied to"
                    },
                    "name": {
                        "type": "string",
                        "title": "the account name"
                    },
                    "status": {
                        "$ref": "#/components/schemas/BankAccountStatus"
                    }
                }
            },
            "TaskState": {
                "type": "string",
                "enum": [
                    "TASK_STATE_UNSPECIFIED",
                    "TASK_STATE_ACTIVE",
                    "TASK_STATE_PENDING",
                    "TASK_STATE_SCHEDULED",
                    "TASK_STATE_RETRY",
                    "TASK_STATE_ARCHIVED",
                    "TASK_STATE_COMPLETED",
                    "TASK_STATE_AGGREGATING",
                    "TASK_STATE_FAILED"
                ],
                "default": "TASK_STATE_UNSPECIFIED",
                "description": " - TASK_STATE_UNSPECIFIED: The zero value is omitted in proto3 by convention if it's not used.\nIn your case, since you start your iota with 1, we will not define a zero value.\n - TASK_STATE_ACTIVE: Indicates that the task is currently being processed by Handler.\n - TASK_STATE_PENDING: Indicates that the task is ready to be processed by Handler.\n - TASK_STATE_SCHEDULED: Indicates that the task is scheduled to be processed some time in the future.\n - TASK_STATE_RETRY: Indicates that the task has previously failed and scheduled to be processed some time in the future.\n - TASK_STATE_ARCHIVED: Indicates that the task is archived and stored for inspection purposes.\n - TASK_STATE_COMPLETED: Indicates that the task is processed successfully and retained until the retention TTL expires.\n - TASK_STATE_AGGREGATING: Indicates that the task is waiting in a group to be aggregated into one task.\n - TASK_STATE_FAILED: Indicates that the task has failed and will not be retried."
            },
            "Token": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "id"
                    },
                    "itemId": {
                        "type": "string",
                        "title": "the id of the item the token is tied to"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "accessToken": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "mergeEndUserOriginId": {
                        "type": "string",
                        "description": "This is what you'll pass to Merge as the end_user_origin_id."
                    },
                    "mergeIntegrationSlug": {
                        "type": "string",
                        "description": "The integration slug/identifier. This is returned at the end of the linking flow."
                    },
                    "lastMergeCreatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "last time you performed a merge fetch"
                    }
                }
            },
            "TotalInvestmentBySecurity": {
                "type": "object",
                "properties": {
                    "securityId": {
                        "type": "string"
                    },
                    "totalInvestment": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "TotalInvestmentBySecurity\nThis message is used to represent the total investment of a security."
            },
            "Transaction": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "title": "@gotag: ch:\"account_id\""
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "title": "@gotag: ch:\"amount\""
                    },
                    "isoCurrencyCode": {
                        "type": "string",
                        "title": "@gotag: ch:\"iso_currency_code\""
                    },
                    "unofficialCurrencyCode": {
                        "type": "string",
                        "title": "@gotag: ch:\"unofficial_currency_code\""
                    },
                    "categoryId": {
                        "type": "string",
                        "title": "@gotag: ch:\"category_id\""
                    },
                    "checkNumber": {
                        "type": "string",
                        "title": "@gotag: ch:\"check_number\""
                    },
                    "currentDate": {
                        "type": "string",
                        "title": "@gotag: ch:\"date\""
                    },
                    "currentDatetime": {
                        "type": "string",
                        "title": "@gotag: ch:\"datetime\""
                    },
                    "authorizedDate": {
                        "type": "string",
                        "title": "@gotag: ch:\"authorized_date\""
                    },
                    "authorizedDatetime": {
                        "type": "string",
                        "title": "@gotag: ch:\"authorized_datetime\""
                    },
                    "name": {
                        "type": "string",
                        "title": "@gotag: ch:\"name\""
                    },
                    "merchantName": {
                        "type": "string",
                        "title": "@gotag: ch:\"merchant_name\""
                    },
                    "paymentChannel": {
                        "type": "string",
                        "title": "@gotag: ch:\"payment_channel\""
                    },
                    "pending": {
                        "type": "boolean",
                        "title": "@gotag: ch:\"pending\""
                    },
                    "pendingTransactionId": {
                        "type": "string",
                        "title": "@gotag: ch:\"pending_transaction_id\""
                    },
                    "accountOwner": {
                        "type": "string",
                        "title": "@gotag: ch:\"account_owner\""
                    },
                    "transactionId": {
                        "type": "string",
                        "title": "@gotag: ch:\"transaction_id\""
                    },
                    "transactionCode": {
                        "type": "string",
                        "title": "@gotag: ch:\"transaction_code\""
                    },
                    "id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string",
                        "title": "@gotag: ch:\"user_id\""
                    },
                    "linkId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "@gotag: ch:\"link_id\""
                    },
                    "sign": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personalFinanceCategoryPrimary": {
                        "type": "string",
                        "title": "@gotag: ch:\"personal_finance_category_primary\""
                    },
                    "personalFinanceCategoryDetailed": {
                        "type": "string",
                        "title": "@gotag: ch:\"personal_finance_category_detailed\""
                    },
                    "locationAddress": {
                        "type": "string"
                    },
                    "locationCity": {
                        "type": "string"
                    },
                    "locationRegion": {
                        "type": "string"
                    },
                    "locationPostalCode": {
                        "type": "string"
                    },
                    "locationCountry": {
                        "type": "string"
                    },
                    "locationLat": {
                        "type": "number",
                        "format": "double"
                    },
                    "locationLon": {
                        "type": "number",
                        "format": "double"
                    },
                    "locationStoreNumber": {
                        "type": "string"
                    },
                    "paymentMetaByOrderOf": {
                        "type": "string"
                    },
                    "paymentMetaPayee": {
                        "type": "string"
                    },
                    "paymentMetaPayer": {
                        "type": "string"
                    },
                    "paymentMetaPaymentMethod": {
                        "type": "string"
                    },
                    "paymentMetaPaymentProcessor": {
                        "type": "string"
                    },
                    "paymentMetaPpdId": {
                        "type": "string"
                    },
                    "paymentMetaReason": {
                        "type": "string"
                    },
                    "paymentMetaReferenceNumber": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "additionalProperties": {
                        "$ref": "#/components/schemas/Any"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                }
            },
            "TransactionAggregatesByMonth": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "personalFinanceCategoryPrimary": {
                        "type": "string"
                    },
                    "locationCity": {
                        "type": "string"
                    },
                    "paymentChannel": {
                        "type": "string"
                    },
                    "merchantName": {
                        "type": "string"
                    },
                    "transactionCount": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "totalAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    }
                },
                "description": "TransactionAggregatesByMonth\nThis message is used to represent the transaction aggregates of a user."
            },
            "TransactionSplit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "description": "The unique ID for this transaction."
                    },
                    "userId": {
                        "type": "string",
                        "description": "The user ID associated with this transaction."
                    },
                    "linkId": {
                        "type": "string",
                        "format": "uint64",
                        "description": "The link ID associated with this transaction."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the transaction."
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of money involved in the transaction."
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The set of categories that the transaction belongs to."
                    },
                    "personalFinanceCategoryPrimary": {
                        "type": "string",
                        "description": "The primary personal finance category of the transaction."
                    },
                    "personalFinanceCategoryDetailed": {
                        "type": "string",
                        "description": "The detailed personal finance category of the transaction."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags associated with this transaction."
                    },
                    "authorizedDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time at which the transaction was authorized (time field)"
                    },
                    "authorizedDatetime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date-time when the transaction was authorized."
                    },
                    "timeOfSplit": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The time of split of the transaction"
                    }
                },
                "description": "PlaidAccountTransactionSplit represents a split of a PlaidAccountTransaction."
            },
            "TriggerSyncRequest": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "title": "the account id associated with the user"
                    },
                    "profileType": {
                        "$ref": "#/components/schemas/FinancialUserProfileType"
                    },
                    "linkId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "the account id associated with the user"
                    },
                    "financialAccountType": {
                        "$ref": "#/components/schemas/FinancialAccountType"
                    }
                },
                "required": [
                    "profileType",
                    "financialAccountType"
                ]
            },
            "TriggerSyncResponse": {
                "type": "object",
                "properties": {
                    "workflowId": {
                        "type": "string",
                        "title": "the task id"
                    },
                    "runId": {
                        "type": "string"
                    }
                }
            },
            "UnSplitTransactionsRequest": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The transaction id\nValidations:\n- transaction_id must be greater than 0"
                    }
                },
                "required": [
                    "transactionId"
                ]
            },
            "UnSplitTransactionsResponse": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountTransaction"
                    }
                }
            },
            "UpdateBankAccountRequest": {
                "type": "object",
                "properties": {
                    "bankAccount": {
                        "$ref": "#/components/schemas/BankAccount"
                    }
                },
                "required": [
                    "bankAccount"
                ]
            },
            "UpdateBankAccountResponse": {
                "type": "object",
                "properties": {
                    "updated": {
                        "type": "boolean",
                        "title": "The bank account id"
                    },
                    "bankAccount": {
                        "$ref": "#/components/schemas/BankAccount"
                    }
                }
            },
            "UpdateBudgetRequest": {
                "type": "object",
                "properties": {
                    "budget": {
                        "$ref": "#/components/schemas/Budget"
                    }
                },
                "required": [
                    "budget"
                ]
            },
            "UpdateBudgetResponse": {
                "type": "object",
                "properties": {
                    "budget": {
                        "$ref": "#/components/schemas/Budget"
                    }
                }
            },
            "UpdateMilestoneRequest": {
                "type": "object",
                "properties": {
                    "milestone": {
                        "$ref": "#/components/schemas/Milestone"
                    }
                },
                "required": [
                    "milestone"
                ]
            },
            "UpdateMilestoneResponse": {
                "type": "object",
                "properties": {
                    "milestone": {
                        "$ref": "#/components/schemas/Milestone"
                    }
                }
            },
            "UpdateNoteToRecurringTransactionRequest": {
                "type": "object",
                "properties": {
                    "note": {
                        "$ref": "#/components/schemas/SmartNote"
                    }
                },
                "title": "UpdateNoteToTransactionRequest updates a note to a transaction",
                "required": [
                    "note"
                ]
            },
            "UpdateNoteToRecurringTransactionResponse": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountRecurringTransaction"
                    }
                },
                "title": "UpdateNoteToTransactionResponse is the responsed obtained after we update a note to a transaction"
            },
            "UpdateNoteToSmartGoalRequest": {
                "type": "object",
                "properties": {
                    "note": {
                        "$ref": "#/components/schemas/SmartNote"
                    }
                },
                "required": [
                    "note"
                ]
            },
            "UpdateNoteToSmartGoalResponse": {
                "type": "object",
                "properties": {
                    "note": {
                        "$ref": "#/components/schemas/SmartNote"
                    }
                }
            },
            "UpdateNoteToTransactionRequest": {
                "type": "object",
                "properties": {
                    "note": {
                        "$ref": "#/components/schemas/SmartNote"
                    }
                },
                "title": "UpdateNoteToTransactionRequest updates a note to a transaction",
                "required": [
                    "note"
                ]
            },
            "UpdateNoteToTransactionResponse": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountTransaction"
                    }
                },
                "title": "UpdateNoteToTransactionResponse is the responsed obtained after we update a note to a transaction"
            },
            "UpdatePocketRequest": {
                "type": "object",
                "properties": {
                    "pocket": {
                        "$ref": "#/components/schemas/Pocket"
                    }
                },
                "required": [
                    "pocket"
                ]
            },
            "UpdatePocketResponse": {
                "type": "object",
                "properties": {
                    "pocket": {
                        "$ref": "#/components/schemas/Pocket"
                    }
                }
            },
            "UpdateRecurringTransactionRequest": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountRecurringTransaction"
                    }
                },
                "title": "UpdateRecurringTransactionRequest is the update transaction request",
                "required": [
                    "transaction"
                ]
            },
            "UpdateRecurringTransactionResponse": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountRecurringTransaction"
                    }
                },
                "title": "UpdateRecurringTransactionResponse is the update transaction response"
            },
            "UpdateSingleTransactionRequest": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountTransaction"
                    }
                },
                "title": "UpdateSingleTransactionRequest is the update transaction request",
                "required": [
                    "transaction"
                ]
            },
            "UpdateSingleTransactionResponse": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "$ref": "#/components/schemas/PlaidAccountTransaction"
                    }
                },
                "title": "UpdateSingleTransactionResponse is the update transaction response"
            },
            "UpdateSmartGoalRequest": {
                "type": "object",
                "properties": {
                    "smartGoal": {
                        "$ref": "#/components/schemas/SmartGoal"
                    }
                },
                "required": [
                    "smartGoal"
                ]
            },
            "UpdateSmartGoalResponse": {
                "type": "object",
                "properties": {
                    "smartGoalId": {
                        "type": "string",
                        "format": "uint64",
                        "title": "The smart goal id"
                    }
                }
            },
            "UpdateUserProfileRequest": {
                "type": "object",
                "properties": {
                    "profile": {
                        "$ref": "#/components/schemas/FinancialUserProfile"
                    }
                },
                "title": "UpdateUserProfileRequest: Represents the request object invoked against the user\nservice to update a user profile",
                "required": [
                    "profile"
                ]
            },
            "UpdateUserProfileResponse": {
                "type": "object",
                "properties": {
                    "profileUpdated": {
                        "type": "boolean"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/FinancialUserProfile"
                    }
                },
                "title": "UpdateUserProfileResponse: Represents the response object returned as a response to\nthe `update user profile` request"
            },
            "ValidationErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": "validation_error",
                    "message": "Generic validation error"
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}