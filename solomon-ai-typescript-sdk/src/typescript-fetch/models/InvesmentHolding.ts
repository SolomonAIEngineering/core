/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InvesmentHolding
 */
export interface InvesmentHolding {
    /**
     * 
     * @type {string}
     * @memberof InvesmentHolding
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof InvesmentHolding
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof InvesmentHolding
     */
    plaidAccountId?: string;
    /**
     * 
     * @type {number}
     * @memberof InvesmentHolding
     */
    costBasis?: number;
    /**
     * 
     * @type {number}
     * @memberof InvesmentHolding
     */
    institutionPrice?: number;
    /**
     * 
     * @type {string}
     * @memberof InvesmentHolding
     */
    institutionPriceAsOf?: string;
    /**
     * 
     * @type {string}
     * @memberof InvesmentHolding
     */
    institutionPriceDatetime?: string;
    /**
     * 
     * @type {number}
     * @memberof InvesmentHolding
     */
    institutionValue?: number;
    /**
     * 
     * @type {string}
     * @memberof InvesmentHolding
     */
    isoCurrencyCode?: string;
    /**
     * 
     * @type {number}
     * @memberof InvesmentHolding
     */
    quantity?: number;
    /**
     * 
     * @type {string}
     * @memberof InvesmentHolding
     */
    securityId?: string;
    /**
     * 
     * @type {string}
     * @memberof InvesmentHolding
     */
    unofficialCurrencyCode?: string;
}

/**
 * Check if a given object implements the InvesmentHolding interface.
 */
export function instanceOfInvesmentHolding(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InvesmentHoldingFromJSON(json: any): InvesmentHolding {
    return InvesmentHoldingFromJSONTyped(json, false);
}

export function InvesmentHoldingFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvesmentHolding {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'plaidAccountId': !exists(json, 'plaidAccountId') ? undefined : json['plaidAccountId'],
        'costBasis': !exists(json, 'costBasis') ? undefined : json['costBasis'],
        'institutionPrice': !exists(json, 'institutionPrice') ? undefined : json['institutionPrice'],
        'institutionPriceAsOf': !exists(json, 'institutionPriceAsOf') ? undefined : json['institutionPriceAsOf'],
        'institutionPriceDatetime': !exists(json, 'institutionPriceDatetime') ? undefined : json['institutionPriceDatetime'],
        'institutionValue': !exists(json, 'institutionValue') ? undefined : json['institutionValue'],
        'isoCurrencyCode': !exists(json, 'isoCurrencyCode') ? undefined : json['isoCurrencyCode'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'securityId': !exists(json, 'securityId') ? undefined : json['securityId'],
        'unofficialCurrencyCode': !exists(json, 'unofficialCurrencyCode') ? undefined : json['unofficialCurrencyCode'],
    };
}

export function InvesmentHoldingToJSON(value?: InvesmentHolding | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'plaidAccountId': value.plaidAccountId,
        'costBasis': value.costBasis,
        'institutionPrice': value.institutionPrice,
        'institutionPriceAsOf': value.institutionPriceAsOf,
        'institutionPriceDatetime': value.institutionPriceDatetime,
        'institutionValue': value.institutionValue,
        'isoCurrencyCode': value.isoCurrencyCode,
        'quantity': value.quantity,
        'securityId': value.securityId,
        'unofficialCurrencyCode': value.unofficialCurrencyCode,
    };
}

