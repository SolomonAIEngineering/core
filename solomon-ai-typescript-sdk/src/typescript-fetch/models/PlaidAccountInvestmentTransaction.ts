/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Any1 } from './Any1';
import {
    Any1FromJSON,
    Any1FromJSONTyped,
    Any1ToJSON,
} from './Any1';
import type { SmartNote } from './SmartNote';
import {
    SmartNoteFromJSON,
    SmartNoteFromJSONTyped,
    SmartNoteToJSON,
} from './SmartNote';

/**
 * Message representing investment transactions associated with a Plaid account.
 * @export
 * @interface PlaidAccountInvestmentTransaction
 */
export interface PlaidAccountInvestmentTransaction {
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    accountId?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    ammount?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    investmentTransactionId?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    securityId?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    currentDate?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof PlaidAccountInvestmentTransaction
     */
    quantity?: number;
    /**
     * 
     * @type {number}
     * @memberof PlaidAccountInvestmentTransaction
     */
    amount?: number;
    /**
     * 
     * @type {number}
     * @memberof PlaidAccountInvestmentTransaction
     */
    price?: number;
    /**
     * 
     * @type {number}
     * @memberof PlaidAccountInvestmentTransaction
     */
    fees?: number;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    subtype?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    isoCurrencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    unofficialCurrencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    linkId?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountInvestmentTransaction
     */
    userId?: string;
    /**
     * 
     * @type {Date}
     * @memberof PlaidAccountInvestmentTransaction
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PlaidAccountInvestmentTransaction
     */
    time?: Date;
    /**
     * 
     * @type {Any1}
     * @memberof PlaidAccountInvestmentTransaction
     */
    additionalProperties?: Any1;
    /**
     * 
     * @type {Array<SmartNote>}
     * @memberof PlaidAccountInvestmentTransaction
     */
    notes?: Array<SmartNote>;
}

/**
 * Check if a given object implements the PlaidAccountInvestmentTransaction interface.
 */
export function instanceOfPlaidAccountInvestmentTransaction(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PlaidAccountInvestmentTransactionFromJSON(json: any): PlaidAccountInvestmentTransaction {
    return PlaidAccountInvestmentTransactionFromJSONTyped(json, false);
}

export function PlaidAccountInvestmentTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaidAccountInvestmentTransaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'ammount': !exists(json, 'ammount') ? undefined : json['ammount'],
        'investmentTransactionId': !exists(json, 'investmentTransactionId') ? undefined : json['investmentTransactionId'],
        'securityId': !exists(json, 'securityId') ? undefined : json['securityId'],
        'currentDate': !exists(json, 'currentDate') ? undefined : json['currentDate'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'fees': !exists(json, 'fees') ? undefined : json['fees'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'subtype': !exists(json, 'subtype') ? undefined : json['subtype'],
        'isoCurrencyCode': !exists(json, 'isoCurrencyCode') ? undefined : json['isoCurrencyCode'],
        'unofficialCurrencyCode': !exists(json, 'unofficialCurrencyCode') ? undefined : json['unofficialCurrencyCode'],
        'linkId': !exists(json, 'linkId') ? undefined : json['linkId'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'time': !exists(json, 'time') ? undefined : (new Date(json['time'])),
        'additionalProperties': !exists(json, 'additionalProperties') ? undefined : Any1FromJSON(json['additionalProperties']),
        'notes': !exists(json, 'notes') ? undefined : ((json['notes'] as Array<any>).map(SmartNoteFromJSON)),
    };
}

export function PlaidAccountInvestmentTransactionToJSON(value?: PlaidAccountInvestmentTransaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': value.accountId,
        'ammount': value.ammount,
        'investmentTransactionId': value.investmentTransactionId,
        'securityId': value.securityId,
        'currentDate': value.currentDate,
        'name': value.name,
        'quantity': value.quantity,
        'amount': value.amount,
        'price': value.price,
        'fees': value.fees,
        'type': value.type,
        'subtype': value.subtype,
        'isoCurrencyCode': value.isoCurrencyCode,
        'unofficialCurrencyCode': value.unofficialCurrencyCode,
        'linkId': value.linkId,
        'id': value.id,
        'userId': value.userId,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'time': value.time === undefined ? undefined : (value.time.toISOString()),
        'additionalProperties': Any1ToJSON(value.additionalProperties),
        'notes': value.notes === undefined ? undefined : ((value.notes as Array<any>).map(SmartNoteToJSON)),
    };
}

