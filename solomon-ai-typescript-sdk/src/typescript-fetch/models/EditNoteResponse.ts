/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PollPost } from './PollPost';
import {
    PollPostFromJSON,
    PollPostFromJSONTyped,
    PollPostToJSON,
} from './PollPost';
import type { Post } from './Post';
import {
    PostFromJSON,
    PostFromJSONTyped,
    PostToJSON,
} from './Post';
import type { SharedPost } from './SharedPost';
import {
    SharedPostFromJSON,
    SharedPostFromJSONTyped,
    SharedPostToJSON,
} from './SharedPost';

/**
 * 
 * @export
 * @interface EditNoteResponse
 */
export interface EditNoteResponse {
    /**
     * 
     * @type {Post}
     * @memberof EditNoteResponse
     */
    regularPost?: Post;
    /**
     * 
     * @type {SharedPost}
     * @memberof EditNoteResponse
     */
    sharedPost?: SharedPost;
    /**
     * 
     * @type {PollPost}
     * @memberof EditNoteResponse
     */
    pollPost?: PollPost;
}

/**
 * Check if a given object implements the EditNoteResponse interface.
 */
export function instanceOfEditNoteResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EditNoteResponseFromJSON(json: any): EditNoteResponse {
    return EditNoteResponseFromJSONTyped(json, false);
}

export function EditNoteResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditNoteResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'regularPost': !exists(json, 'regularPost') ? undefined : PostFromJSON(json['regularPost']),
        'sharedPost': !exists(json, 'sharedPost') ? undefined : SharedPostFromJSON(json['sharedPost']),
        'pollPost': !exists(json, 'pollPost') ? undefined : PollPostFromJSON(json['pollPost']),
    };
}

export function EditNoteResponseToJSON(value?: EditNoteResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'regularPost': PostToJSON(value.regularPost),
        'sharedPost': SharedPostToJSON(value.sharedPost),
        'pollPost': PollPostToJSON(value.pollPost),
    };
}

