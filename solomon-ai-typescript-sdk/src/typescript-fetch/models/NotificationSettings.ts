/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NotificationType } from './NotificationType';
import {
    NotificationTypeFromJSON,
    NotificationTypeFromJSONTyped,
    NotificationTypeToJSON,
} from './NotificationType';

/**
 * 
 * @export
 * @interface NotificationSettings
 */
export interface NotificationSettings {
    /**
     * 
     * @type {string}
     * @memberof NotificationSettings
     */
    id?: string;
    /**
     * 
     * @type {NotificationType}
     * @memberof NotificationSettings
     */
    notificationType?: NotificationType;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationSettings
     */
    alerts?: boolean;
}

/**
 * Check if a given object implements the NotificationSettings interface.
 */
export function instanceOfNotificationSettings(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NotificationSettingsFromJSON(json: any): NotificationSettings {
    return NotificationSettingsFromJSONTyped(json, false);
}

export function NotificationSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'notificationType': !exists(json, 'notificationType') ? undefined : NotificationTypeFromJSON(json['notificationType']),
        'alerts': !exists(json, 'alerts') ? undefined : json['alerts'],
    };
}

export function NotificationSettingsToJSON(value?: NotificationSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'notificationType': NotificationTypeToJSON(value.notificationType),
        'alerts': value.alerts,
    };
}

