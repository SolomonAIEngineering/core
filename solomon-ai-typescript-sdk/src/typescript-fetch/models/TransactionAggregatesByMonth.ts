/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FinancialUserProfileType } from './FinancialUserProfileType';
import {
    FinancialUserProfileTypeFromJSON,
    FinancialUserProfileTypeFromJSONTyped,
    FinancialUserProfileTypeToJSON,
} from './FinancialUserProfileType';

/**
 * TransactionAggregatesByMonth
 * This message is used to represent the transaction aggregates of a user.
 * @export
 * @interface TransactionAggregatesByMonth
 */
export interface TransactionAggregatesByMonth {
    /**
     * 
     * @type {number}
     * @memberof TransactionAggregatesByMonth
     */
    month?: number;
    /**
     * 
     * @type {string}
     * @memberof TransactionAggregatesByMonth
     */
    personalFinanceCategoryPrimary?: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionAggregatesByMonth
     */
    locationCity?: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionAggregatesByMonth
     */
    paymentChannel?: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionAggregatesByMonth
     */
    merchantName?: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionAggregatesByMonth
     */
    transactionCount?: string;
    /**
     * 
     * @type {number}
     * @memberof TransactionAggregatesByMonth
     */
    totalAmount?: number;
    /**
     * 
     * @type {string}
     * @memberof TransactionAggregatesByMonth
     */
    userId?: string;
    /**
     * 
     * @type {FinancialUserProfileType}
     * @memberof TransactionAggregatesByMonth
     */
    profileType?: FinancialUserProfileType;
}

/**
 * Check if a given object implements the TransactionAggregatesByMonth interface.
 */
export function instanceOfTransactionAggregatesByMonth(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransactionAggregatesByMonthFromJSON(json: any): TransactionAggregatesByMonth {
    return TransactionAggregatesByMonthFromJSONTyped(json, false);
}

export function TransactionAggregatesByMonthFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionAggregatesByMonth {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'month': !exists(json, 'month') ? undefined : json['month'],
        'personalFinanceCategoryPrimary': !exists(json, 'personalFinanceCategoryPrimary') ? undefined : json['personalFinanceCategoryPrimary'],
        'locationCity': !exists(json, 'locationCity') ? undefined : json['locationCity'],
        'paymentChannel': !exists(json, 'paymentChannel') ? undefined : json['paymentChannel'],
        'merchantName': !exists(json, 'merchantName') ? undefined : json['merchantName'],
        'transactionCount': !exists(json, 'transactionCount') ? undefined : json['transactionCount'],
        'totalAmount': !exists(json, 'totalAmount') ? undefined : json['totalAmount'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'profileType': !exists(json, 'profileType') ? undefined : FinancialUserProfileTypeFromJSON(json['profileType']),
    };
}

export function TransactionAggregatesByMonthToJSON(value?: TransactionAggregatesByMonth | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'month': value.month,
        'personalFinanceCategoryPrimary': value.personalFinanceCategoryPrimary,
        'locationCity': value.locationCity,
        'paymentChannel': value.paymentChannel,
        'merchantName': value.merchantName,
        'transactionCount': value.transactionCount,
        'totalAmount': value.totalAmount,
        'userId': value.userId,
        'profileType': FinancialUserProfileTypeToJSON(value.profileType),
    };
}

