/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Any1 } from './Any1';
import {
    Any1FromJSON,
    Any1FromJSONTyped,
    Any1ToJSON,
} from './Any1';
import type { SmartNote } from './SmartNote';
import {
    SmartNoteFromJSON,
    SmartNoteFromJSONTyped,
    SmartNoteToJSON,
} from './SmartNote';
import type { TransactionSplit } from './TransactionSplit';
import {
    TransactionSplitFromJSON,
    TransactionSplitFromJSONTyped,
    TransactionSplitToJSON,
} from './TransactionSplit';

/**
 * Message representing Plaid account transactions.
 * @export
 * @interface PlaidAccountTransaction
 */
export interface PlaidAccountTransaction {
    /**
     * The bank account ID associated with the transaction.
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    accountId?: string;
    /**
     * The amount of the transaction.
     * 
     * @gotag: ch:"amount"
     * @type {number}
     * @memberof PlaidAccountTransaction
     */
    amount?: number;
    /**
     * The currency code of the transaction.
     * 
     * @gotag: ch:"iso_currency_code"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    isoCurrencyCode?: string;
    /**
     * The unofficial currency code of the transaction.
     * 
     * @gotag: ch:"unofficial_currency_code"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    unofficialCurrencyCode?: string;
    /**
     * The transaction ID of interest.
     * 
     * @gotag: ch:"transaction_id"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    transactionId?: string;
    /**
     * The transaction code.
     * 
     * @gotag: ch:"transaction_code"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    transactionCode?: string;
    /**
     * The date of the transaction.
     * 
     * @gotag: ch:"date"
     * @type {Date}
     * @memberof PlaidAccountTransaction
     */
    currentDate?: Date;
    /**
     * The current datetime of the transaction.
     * 
     * @gotag: ch:"datetime"
     * @type {Date}
     * @memberof PlaidAccountTransaction
     */
    currentDatetime?: Date;
    /**
     * The time at which the transaction was authorized.
     * 
     * @gotag: ch:"authorized_date"
     * @type {Date}
     * @memberof PlaidAccountTransaction
     */
    authorizedDate?: Date;
    /**
     * The date-time when the transaction was authorized.
     * 
     * @gotag: ch:"authorized_datetime"
     * @type {Date}
     * @memberof PlaidAccountTransaction
     */
    authorizedDatetime?: Date;
    /**
     * The category ID of the transaction.
     * 
     * @gotag: ch:"category_id"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    categoryId?: string;
    /**
     * The set of categories that the transaction belongs to.
     * @type {Array<string>}
     * @memberof PlaidAccountTransaction
     */
    categories?: Array<string>;
    /**
     * The primary personal finance category of the transaction.
     * 
     * @gotag: ch:"personal_finance_category_primary"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    personalFinanceCategoryPrimary?: string;
    /**
     * The detailed personal finance category of the transaction.
     * 
     * @gotag: ch:"personal_finance_category_detailed"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    personalFinanceCategoryDetailed?: string;
    /**
     * The name of the transaction.
     * 
     * @gotag: ch:"name"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    transactionName?: string;
    /**
     * The merchant name of the transaction.
     * 
     * @gotag: ch:"merchant_name"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    merchantName?: string;
    /**
     * The check number associated with the transaction.
     * 
     * @gotag: ch:"check_number"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    checkNumber?: string;
    /**
     * The payment channel for the transaction.
     * 
     * @gotag: ch:"payment_channel"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    paymentChannel?: string;
    /**
     * Indicates whether the transaction is pending.
     * 
     * @gotag: ch:"pending"
     * @type {boolean}
     * @memberof PlaidAccountTransaction
     */
    pending?: boolean;
    /**
     * The ID of the pending transaction, if applicable.
     * 
     * @gotag: ch:"pending_transaction_id"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    pendingTransactionId?: string;
    /**
     * The account owner associated with the transaction.
     * 
     * @gotag: ch:"account_owner"
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    accountOwner?: string;
    /**
     * Information about the entity to whom the payment is made (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    paymentMetaByOrderOf?: string;
    /**
     * Information about the payee (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    paymentMetaPayee?: string;
    /**
     * Information about the payer (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    paymentMetaPayer?: string;
    /**
     * The payment method used for the transaction (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    paymentMetaPaymentMethod?: string;
    /**
     * The payment processor involved in the transaction (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    paymentMetaPaymentProcessor?: string;
    /**
     * The Prearranged Payment and Deposit (PPD) ID (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    paymentMetaPpdId?: string;
    /**
     * The reason for the payment (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    paymentMetaReason?: string;
    /**
     * The reference number associated with the payment (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    paymentMetaReferenceNumber?: string;
    /**
     * The street address of the transaction location (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    locationAddress?: string;
    /**
     * The city of the transaction location (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    locationCity?: string;
    /**
     * The region or state of the transaction location (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    locationRegion?: string;
    /**
     * The postal code of the transaction location (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    locationPostalCode?: string;
    /**
     * The country of the transaction location (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    locationCountry?: string;
    /**
     * The latitude of the transaction location (if available).
     * @type {number}
     * @memberof PlaidAccountTransaction
     */
    locationLat?: number;
    /**
     * The longitude of the transaction location (if available).
     * @type {number}
     * @memberof PlaidAccountTransaction
     */
    locationLon?: number;
    /**
     * The store number associated with the transaction location (if available).
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    locationStoreNumber?: string;
    /**
     * The timestamp associated with the transaction.
     * @type {Date}
     * @memberof PlaidAccountTransaction
     */
    time?: Date;
    /**
     * 
     * @type {Any1}
     * @memberof PlaidAccountTransaction
     */
    additionalProperties?: Any1;
    /**
     * The unique ID for this transaction.
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    id?: string;
    /**
     * The user ID associated with this transaction.
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    userId?: string;
    /**
     * The link ID associated with this transaction.
     * @type {string}
     * @memberof PlaidAccountTransaction
     */
    linkId?: string;
    /**
     * Indicates whether this transaction needs review.
     * @type {boolean}
     * @memberof PlaidAccountTransaction
     */
    needsReview?: boolean;
    /**
     * Indicates whether this transaction should be hidden.
     * @type {boolean}
     * @memberof PlaidAccountTransaction
     */
    hideTransaction?: boolean;
    /**
     * Tags associated with this transaction.
     * @type {Array<string>}
     * @memberof PlaidAccountTransaction
     */
    tags?: Array<string>;
    /**
     * Notes associated with this transaction.
     * @type {Array<SmartNote>}
     * @memberof PlaidAccountTransaction
     */
    notes?: Array<SmartNote>;
    /**
     * The number of splits associated with this transaction.
     * @type {Array<TransactionSplit>}
     * @memberof PlaidAccountTransaction
     */
    splits?: Array<TransactionSplit>;
}

/**
 * Check if a given object implements the PlaidAccountTransaction interface.
 */
export function instanceOfPlaidAccountTransaction(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PlaidAccountTransactionFromJSON(json: any): PlaidAccountTransaction {
    return PlaidAccountTransactionFromJSONTyped(json, false);
}

export function PlaidAccountTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaidAccountTransaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'isoCurrencyCode': !exists(json, 'isoCurrencyCode') ? undefined : json['isoCurrencyCode'],
        'unofficialCurrencyCode': !exists(json, 'unofficialCurrencyCode') ? undefined : json['unofficialCurrencyCode'],
        'transactionId': !exists(json, 'transactionId') ? undefined : json['transactionId'],
        'transactionCode': !exists(json, 'transactionCode') ? undefined : json['transactionCode'],
        'currentDate': !exists(json, 'currentDate') ? undefined : (new Date(json['currentDate'])),
        'currentDatetime': !exists(json, 'currentDatetime') ? undefined : (new Date(json['currentDatetime'])),
        'authorizedDate': !exists(json, 'authorizedDate') ? undefined : (new Date(json['authorizedDate'])),
        'authorizedDatetime': !exists(json, 'authorizedDatetime') ? undefined : (new Date(json['authorizedDatetime'])),
        'categoryId': !exists(json, 'categoryId') ? undefined : json['categoryId'],
        'categories': !exists(json, 'categories') ? undefined : json['categories'],
        'personalFinanceCategoryPrimary': !exists(json, 'personalFinanceCategoryPrimary') ? undefined : json['personalFinanceCategoryPrimary'],
        'personalFinanceCategoryDetailed': !exists(json, 'personalFinanceCategoryDetailed') ? undefined : json['personalFinanceCategoryDetailed'],
        'transactionName': !exists(json, 'transactionName') ? undefined : json['transactionName'],
        'merchantName': !exists(json, 'merchantName') ? undefined : json['merchantName'],
        'checkNumber': !exists(json, 'checkNumber') ? undefined : json['checkNumber'],
        'paymentChannel': !exists(json, 'paymentChannel') ? undefined : json['paymentChannel'],
        'pending': !exists(json, 'pending') ? undefined : json['pending'],
        'pendingTransactionId': !exists(json, 'pendingTransactionId') ? undefined : json['pendingTransactionId'],
        'accountOwner': !exists(json, 'accountOwner') ? undefined : json['accountOwner'],
        'paymentMetaByOrderOf': !exists(json, 'paymentMetaByOrderOf') ? undefined : json['paymentMetaByOrderOf'],
        'paymentMetaPayee': !exists(json, 'paymentMetaPayee') ? undefined : json['paymentMetaPayee'],
        'paymentMetaPayer': !exists(json, 'paymentMetaPayer') ? undefined : json['paymentMetaPayer'],
        'paymentMetaPaymentMethod': !exists(json, 'paymentMetaPaymentMethod') ? undefined : json['paymentMetaPaymentMethod'],
        'paymentMetaPaymentProcessor': !exists(json, 'paymentMetaPaymentProcessor') ? undefined : json['paymentMetaPaymentProcessor'],
        'paymentMetaPpdId': !exists(json, 'paymentMetaPpdId') ? undefined : json['paymentMetaPpdId'],
        'paymentMetaReason': !exists(json, 'paymentMetaReason') ? undefined : json['paymentMetaReason'],
        'paymentMetaReferenceNumber': !exists(json, 'paymentMetaReferenceNumber') ? undefined : json['paymentMetaReferenceNumber'],
        'locationAddress': !exists(json, 'locationAddress') ? undefined : json['locationAddress'],
        'locationCity': !exists(json, 'locationCity') ? undefined : json['locationCity'],
        'locationRegion': !exists(json, 'locationRegion') ? undefined : json['locationRegion'],
        'locationPostalCode': !exists(json, 'locationPostalCode') ? undefined : json['locationPostalCode'],
        'locationCountry': !exists(json, 'locationCountry') ? undefined : json['locationCountry'],
        'locationLat': !exists(json, 'locationLat') ? undefined : json['locationLat'],
        'locationLon': !exists(json, 'locationLon') ? undefined : json['locationLon'],
        'locationStoreNumber': !exists(json, 'locationStoreNumber') ? undefined : json['locationStoreNumber'],
        'time': !exists(json, 'time') ? undefined : (new Date(json['time'])),
        'additionalProperties': !exists(json, 'additionalProperties') ? undefined : Any1FromJSON(json['additionalProperties']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'linkId': !exists(json, 'linkId') ? undefined : json['linkId'],
        'needsReview': !exists(json, 'needsReview') ? undefined : json['needsReview'],
        'hideTransaction': !exists(json, 'hideTransaction') ? undefined : json['hideTransaction'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'notes': !exists(json, 'notes') ? undefined : ((json['notes'] as Array<any>).map(SmartNoteFromJSON)),
        'splits': !exists(json, 'splits') ? undefined : ((json['splits'] as Array<any>).map(TransactionSplitFromJSON)),
    };
}

export function PlaidAccountTransactionToJSON(value?: PlaidAccountTransaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': value.accountId,
        'amount': value.amount,
        'isoCurrencyCode': value.isoCurrencyCode,
        'unofficialCurrencyCode': value.unofficialCurrencyCode,
        'transactionId': value.transactionId,
        'transactionCode': value.transactionCode,
        'currentDate': value.currentDate === undefined ? undefined : (value.currentDate.toISOString()),
        'currentDatetime': value.currentDatetime === undefined ? undefined : (value.currentDatetime.toISOString()),
        'authorizedDate': value.authorizedDate === undefined ? undefined : (value.authorizedDate.toISOString()),
        'authorizedDatetime': value.authorizedDatetime === undefined ? undefined : (value.authorizedDatetime.toISOString()),
        'categoryId': value.categoryId,
        'categories': value.categories,
        'personalFinanceCategoryPrimary': value.personalFinanceCategoryPrimary,
        'personalFinanceCategoryDetailed': value.personalFinanceCategoryDetailed,
        'transactionName': value.transactionName,
        'merchantName': value.merchantName,
        'checkNumber': value.checkNumber,
        'paymentChannel': value.paymentChannel,
        'pending': value.pending,
        'pendingTransactionId': value.pendingTransactionId,
        'accountOwner': value.accountOwner,
        'paymentMetaByOrderOf': value.paymentMetaByOrderOf,
        'paymentMetaPayee': value.paymentMetaPayee,
        'paymentMetaPayer': value.paymentMetaPayer,
        'paymentMetaPaymentMethod': value.paymentMetaPaymentMethod,
        'paymentMetaPaymentProcessor': value.paymentMetaPaymentProcessor,
        'paymentMetaPpdId': value.paymentMetaPpdId,
        'paymentMetaReason': value.paymentMetaReason,
        'paymentMetaReferenceNumber': value.paymentMetaReferenceNumber,
        'locationAddress': value.locationAddress,
        'locationCity': value.locationCity,
        'locationRegion': value.locationRegion,
        'locationPostalCode': value.locationPostalCode,
        'locationCountry': value.locationCountry,
        'locationLat': value.locationLat,
        'locationLon': value.locationLon,
        'locationStoreNumber': value.locationStoreNumber,
        'time': value.time === undefined ? undefined : (value.time.toISOString()),
        'additionalProperties': Any1ToJSON(value.additionalProperties),
        'id': value.id,
        'userId': value.userId,
        'linkId': value.linkId,
        'needsReview': value.needsReview,
        'hideTransaction': value.hideTransaction,
        'tags': value.tags,
        'notes': value.notes === undefined ? undefined : ((value.notes as Array<any>).map(SmartNoteToJSON)),
        'splits': value.splits === undefined ? undefined : ((value.splits as Array<any>).map(TransactionSplitToJSON)),
    };
}

