/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Any1 } from './Any1';
import {
    Any1FromJSON,
    Any1FromJSONTyped,
    Any1ToJSON,
} from './Any1';
import type { FinancialUserProfileType } from './FinancialUserProfileType';
import {
    FinancialUserProfileTypeFromJSON,
    FinancialUserProfileTypeFromJSONTyped,
    FinancialUserProfileTypeToJSON,
} from './FinancialUserProfileType';
import type { ReCurringFlow } from './ReCurringFlow';
import {
    ReCurringFlowFromJSON,
    ReCurringFlowFromJSONTyped,
    ReCurringFlowToJSON,
} from './ReCurringFlow';
import type { ReOccuringTransactionsFrequency } from './ReOccuringTransactionsFrequency';
import {
    ReOccuringTransactionsFrequencyFromJSON,
    ReOccuringTransactionsFrequencyFromJSONTyped,
    ReOccuringTransactionsFrequencyToJSON,
} from './ReOccuringTransactionsFrequency';
import type { ReOccuringTransactionsStatus } from './ReOccuringTransactionsStatus';
import {
    ReOccuringTransactionsStatusFromJSON,
    ReOccuringTransactionsStatusFromJSONTyped,
    ReOccuringTransactionsStatusToJSON,
} from './ReOccuringTransactionsStatus';

/**
 * 
 * @export
 * @interface ReOccuringTransaction
 */
export interface ReOccuringTransaction {
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    accountId?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    streamId?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    categoryId?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    merchantName?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    personalFinanceCategoryPrimary?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    personalFinanceCategoryDetailed?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    firstDate?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    lastDate?: string;
    /**
     * 
     * @type {ReOccuringTransactionsFrequency}
     * @memberof ReOccuringTransaction
     */
    frequency?: ReOccuringTransactionsFrequency;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    transactionIds?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    averageAmount?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    averageAmountIsoCurrencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    lastAmount?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    lastAmountIsoCurrencyCode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ReOccuringTransaction
     */
    isActive?: boolean;
    /**
     * 
     * @type {ReOccuringTransactionsStatus}
     * @memberof ReOccuringTransaction
     */
    status?: ReOccuringTransactionsStatus;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    updatedTime?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    linkId?: string;
    /**
     * 
     * @type {string}
     * @memberof ReOccuringTransaction
     */
    id?: string;
    /**
     * 
     * @type {ReCurringFlow}
     * @memberof ReOccuringTransaction
     */
    flow?: ReCurringFlow;
    /**
     * 
     * @type {number}
     * @memberof ReOccuringTransaction
     */
    sign?: number;
    /**
     * 
     * @type {Date}
     * @memberof ReOccuringTransaction
     */
    time?: Date;
    /**
     * 
     * @type {Any1}
     * @memberof ReOccuringTransaction
     */
    additionalProperties?: Any1;
    /**
     * 
     * @type {FinancialUserProfileType}
     * @memberof ReOccuringTransaction
     */
    profileType?: FinancialUserProfileType;
}

/**
 * Check if a given object implements the ReOccuringTransaction interface.
 */
export function instanceOfReOccuringTransaction(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReOccuringTransactionFromJSON(json: any): ReOccuringTransaction {
    return ReOccuringTransactionFromJSONTyped(json, false);
}

export function ReOccuringTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReOccuringTransaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'streamId': !exists(json, 'streamId') ? undefined : json['streamId'],
        'categoryId': !exists(json, 'categoryId') ? undefined : json['categoryId'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'merchantName': !exists(json, 'merchantName') ? undefined : json['merchantName'],
        'personalFinanceCategoryPrimary': !exists(json, 'personalFinanceCategoryPrimary') ? undefined : json['personalFinanceCategoryPrimary'],
        'personalFinanceCategoryDetailed': !exists(json, 'personalFinanceCategoryDetailed') ? undefined : json['personalFinanceCategoryDetailed'],
        'firstDate': !exists(json, 'firstDate') ? undefined : json['firstDate'],
        'lastDate': !exists(json, 'lastDate') ? undefined : json['lastDate'],
        'frequency': !exists(json, 'frequency') ? undefined : ReOccuringTransactionsFrequencyFromJSON(json['frequency']),
        'transactionIds': !exists(json, 'transactionIds') ? undefined : json['transactionIds'],
        'averageAmount': !exists(json, 'averageAmount') ? undefined : json['averageAmount'],
        'averageAmountIsoCurrencyCode': !exists(json, 'averageAmountIsoCurrencyCode') ? undefined : json['averageAmountIsoCurrencyCode'],
        'lastAmount': !exists(json, 'lastAmount') ? undefined : json['lastAmount'],
        'lastAmountIsoCurrencyCode': !exists(json, 'lastAmountIsoCurrencyCode') ? undefined : json['lastAmountIsoCurrencyCode'],
        'isActive': !exists(json, 'isActive') ? undefined : json['isActive'],
        'status': !exists(json, 'status') ? undefined : ReOccuringTransactionsStatusFromJSON(json['status']),
        'updatedTime': !exists(json, 'updatedTime') ? undefined : json['updatedTime'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'linkId': !exists(json, 'linkId') ? undefined : json['linkId'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'flow': !exists(json, 'flow') ? undefined : ReCurringFlowFromJSON(json['flow']),
        'sign': !exists(json, 'sign') ? undefined : json['sign'],
        'time': !exists(json, 'time') ? undefined : (new Date(json['time'])),
        'additionalProperties': !exists(json, 'additionalProperties') ? undefined : Any1FromJSON(json['additionalProperties']),
        'profileType': !exists(json, 'profileType') ? undefined : FinancialUserProfileTypeFromJSON(json['profileType']),
    };
}

export function ReOccuringTransactionToJSON(value?: ReOccuringTransaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': value.accountId,
        'streamId': value.streamId,
        'categoryId': value.categoryId,
        'description': value.description,
        'merchantName': value.merchantName,
        'personalFinanceCategoryPrimary': value.personalFinanceCategoryPrimary,
        'personalFinanceCategoryDetailed': value.personalFinanceCategoryDetailed,
        'firstDate': value.firstDate,
        'lastDate': value.lastDate,
        'frequency': ReOccuringTransactionsFrequencyToJSON(value.frequency),
        'transactionIds': value.transactionIds,
        'averageAmount': value.averageAmount,
        'averageAmountIsoCurrencyCode': value.averageAmountIsoCurrencyCode,
        'lastAmount': value.lastAmount,
        'lastAmountIsoCurrencyCode': value.lastAmountIsoCurrencyCode,
        'isActive': value.isActive,
        'status': ReOccuringTransactionsStatusToJSON(value.status),
        'updatedTime': value.updatedTime,
        'userId': value.userId,
        'linkId': value.linkId,
        'id': value.id,
        'flow': ReCurringFlowToJSON(value.flow),
        'sign': value.sign,
        'time': value.time === undefined ? undefined : (value.time.toISOString()),
        'additionalProperties': Any1ToJSON(value.additionalProperties),
        'profileType': FinancialUserProfileTypeToJSON(value.profileType),
    };
}

