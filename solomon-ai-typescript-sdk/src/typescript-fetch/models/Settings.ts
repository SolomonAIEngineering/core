/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ApplicationTheme } from './ApplicationTheme';
import {
    ApplicationThemeFromJSON,
    ApplicationThemeFromJSONTyped,
    ApplicationThemeToJSON,
} from './ApplicationTheme';
import type { DigitalWorkerSettings } from './DigitalWorkerSettings';
import {
    DigitalWorkerSettingsFromJSON,
    DigitalWorkerSettingsFromJSONTyped,
    DigitalWorkerSettingsToJSON,
} from './DigitalWorkerSettings';
import type { FinancialPreferences } from './FinancialPreferences';
import {
    FinancialPreferencesFromJSON,
    FinancialPreferencesFromJSONTyped,
    FinancialPreferencesToJSON,
} from './FinancialPreferences';
import type { LikedDashboardPanels } from './LikedDashboardPanels';
import {
    LikedDashboardPanelsFromJSON,
    LikedDashboardPanelsFromJSONTyped,
    LikedDashboardPanelsToJSON,
} from './LikedDashboardPanels';
import type { NotificationSettings } from './NotificationSettings';
import {
    NotificationSettingsFromJSON,
    NotificationSettingsFromJSONTyped,
    NotificationSettingsToJSON,
} from './NotificationSettings';
import type { RiskToleranceSettings } from './RiskToleranceSettings';
import {
    RiskToleranceSettingsFromJSON,
    RiskToleranceSettingsFromJSONTyped,
    RiskToleranceSettingsToJSON,
} from './RiskToleranceSettings';

/**
 * User settings for the fintech application.
 * @export
 * @interface Settings
 */
export interface Settings {
    /**
     * 
     * @type {string}
     * @memberof Settings
     */
    id?: string;
    /**
     * 
     * @type {ApplicationTheme}
     * @memberof Settings
     */
    appTheme?: ApplicationTheme;
    /**
     * 
     * @type {NotificationSettings}
     * @memberof Settings
     */
    notificationSettings?: NotificationSettings;
    /**
     * Language preference.
     * @type {string}
     * @memberof Settings
     */
    preferredLanguage?: string;
    /**
     * 
     * @type {RiskToleranceSettings}
     * @memberof Settings
     */
    riskTolerance?: RiskToleranceSettings;
    /**
     * Dashboard customization, e.g., specific widgets or reports.
     * @type {Array<LikedDashboardPanels>}
     * @memberof Settings
     */
    likedDashboardPanels?: Array<LikedDashboardPanels>;
    /**
     * 
     * @type {DigitalWorkerSettings}
     * @memberof Settings
     */
    digitalWorkerSettings?: DigitalWorkerSettings;
    /**
     * 
     * @type {FinancialPreferences}
     * @memberof Settings
     */
    financialPreferences?: FinancialPreferences;
}

/**
 * Check if a given object implements the Settings interface.
 */
export function instanceOfSettings(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SettingsFromJSON(json: any): Settings {
    return SettingsFromJSONTyped(json, false);
}

export function SettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Settings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'appTheme': !exists(json, 'appTheme') ? undefined : ApplicationThemeFromJSON(json['appTheme']),
        'notificationSettings': !exists(json, 'notificationSettings') ? undefined : NotificationSettingsFromJSON(json['notificationSettings']),
        'preferredLanguage': !exists(json, 'preferredLanguage') ? undefined : json['preferredLanguage'],
        'riskTolerance': !exists(json, 'riskTolerance') ? undefined : RiskToleranceSettingsFromJSON(json['riskTolerance']),
        'likedDashboardPanels': !exists(json, 'likedDashboardPanels') ? undefined : ((json['likedDashboardPanels'] as Array<any>).map(LikedDashboardPanelsFromJSON)),
        'digitalWorkerSettings': !exists(json, 'digitalWorkerSettings') ? undefined : DigitalWorkerSettingsFromJSON(json['digitalWorkerSettings']),
        'financialPreferences': !exists(json, 'financialPreferences') ? undefined : FinancialPreferencesFromJSON(json['financialPreferences']),
    };
}

export function SettingsToJSON(value?: Settings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'appTheme': ApplicationThemeToJSON(value.appTheme),
        'notificationSettings': NotificationSettingsToJSON(value.notificationSettings),
        'preferredLanguage': value.preferredLanguage,
        'riskTolerance': RiskToleranceSettingsToJSON(value.riskTolerance),
        'likedDashboardPanels': value.likedDashboardPanels === undefined ? undefined : ((value.likedDashboardPanels as Array<any>).map(LikedDashboardPanelsToJSON)),
        'digitalWorkerSettings': DigitalWorkerSettingsToJSON(value.digitalWorkerSettings),
        'financialPreferences': FinancialPreferencesToJSON(value.financialPreferences),
    };
}

