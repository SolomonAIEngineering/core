/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BusinessTransaction } from './BusinessTransaction';
import {
    BusinessTransactionFromJSON,
    BusinessTransactionFromJSONTyped,
    BusinessTransactionToJSON,
} from './BusinessTransaction';

/**
 * Response for the request containing the paginated list of transactions.
 * @export
 * @interface ReadBusinessTransactionsResponse
 */
export interface ReadBusinessTransactionsResponse {
    /**
     * The list of transactions for the current page.
     * @type {Array<BusinessTransaction>}
     * @memberof ReadBusinessTransactionsResponse
     */
    transactions?: Array<BusinessTransaction>;
    /**
     * The current page number.
     * @type {string}
     * @memberof ReadBusinessTransactionsResponse
     */
    nextPage?: string;
}

/**
 * Check if a given object implements the ReadBusinessTransactionsResponse interface.
 */
export function instanceOfReadBusinessTransactionsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReadBusinessTransactionsResponseFromJSON(json: any): ReadBusinessTransactionsResponse {
    return ReadBusinessTransactionsResponseFromJSONTyped(json, false);
}

export function ReadBusinessTransactionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadBusinessTransactionsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transactions': !exists(json, 'transactions') ? undefined : ((json['transactions'] as Array<any>).map(BusinessTransactionFromJSON)),
        'nextPage': !exists(json, 'nextPage') ? undefined : json['nextPage'],
    };
}

export function ReadBusinessTransactionsResponseToJSON(value?: ReadBusinessTransactionsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transactions': value.transactions === undefined ? undefined : ((value.transactions as Array<any>).map(BusinessTransactionToJSON)),
        'nextPage': value.nextPage,
    };
}

