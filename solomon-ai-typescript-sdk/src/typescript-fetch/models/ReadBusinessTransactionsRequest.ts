/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Request for reading business transactions with pagination and time filtering.
 * @export
 * @interface ReadBusinessTransactionsRequest
 */
export interface ReadBusinessTransactionsRequest {
    /**
     * The ID of the user whose transactions are to be fetched.
     * @type {string}
     * @memberof ReadBusinessTransactionsRequest
     */
    authZeroUserId: string;
    /**
     * The ID of the accounting account whose transactions are to be fetched.
     * @type {string}
     * @memberof ReadBusinessTransactionsRequest
     */
    linkedAccountingAccountId: string;
    /**
     * The page number of the paginated results.
     * @type {string}
     * @memberof ReadBusinessTransactionsRequest
     */
    pageNumber: string;
    /**
     * The number of items to be returned per page.
     * @type {string}
     * @memberof ReadBusinessTransactionsRequest
     */
    pageSize: string;
}

/**
 * Check if a given object implements the ReadBusinessTransactionsRequest interface.
 */
export function instanceOfReadBusinessTransactionsRequest(value: object): boolean {
    if (!('authZeroUserId' in value)) return false;
    if (!('linkedAccountingAccountId' in value)) return false;
    if (!('pageNumber' in value)) return false;
    if (!('pageSize' in value)) return false;
    return true;
}

export function ReadBusinessTransactionsRequestFromJSON(json: any): ReadBusinessTransactionsRequest {
    return ReadBusinessTransactionsRequestFromJSONTyped(json, false);
}

export function ReadBusinessTransactionsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadBusinessTransactionsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'authZeroUserId': json['authZeroUserId'],
        'linkedAccountingAccountId': json['linkedAccountingAccountId'],
        'pageNumber': json['pageNumber'],
        'pageSize': json['pageSize'],
    };
}

export function ReadBusinessTransactionsRequestToJSON(value?: ReadBusinessTransactionsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'authZeroUserId': value['authZeroUserId'],
        'linkedAccountingAccountId': value['linkedAccountingAccountId'],
        'pageNumber': value['pageNumber'],
        'pageSize': value['pageSize'],
    };
}

