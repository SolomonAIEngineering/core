/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Any1 } from './Any1';
import {
    Any1FromJSON,
    Any1FromJSONTyped,
    Any1ToJSON,
} from './Any1';
import type { FinancialUserProfileType } from './FinancialUserProfileType';
import {
    FinancialUserProfileTypeFromJSON,
    FinancialUserProfileTypeFromJSONTyped,
    FinancialUserProfileTypeToJSON,
} from './FinancialUserProfileType';

/**
 * 
 * @export
 * @interface Transaction
 */
export interface Transaction {
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    accountId?: string;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    isoCurrencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    unofficialCurrencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    categoryId?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    checkNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    currentDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    currentDatetime?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    authorizedDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    authorizedDatetime?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    merchantName?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentChannel?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Transaction
     */
    pending?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    pendingTransactionId?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    accountOwner?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    transactionId?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    transactionCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    linkId?: string;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    sign?: number;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    personalFinanceCategoryPrimary?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    personalFinanceCategoryDetailed?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationCity?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationRegion?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationPostalCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationCountry?: string;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    locationLat?: number;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    locationLon?: number;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationStoreNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaByOrderOf?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaPayee?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaPayer?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaPaymentMethod?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaPaymentProcessor?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaPpdId?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaReason?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaReferenceNumber?: string;
    /**
     * 
     * @type {Date}
     * @memberof Transaction
     */
    time?: Date;
    /**
     * 
     * @type {Any1}
     * @memberof Transaction
     */
    additionalProperties?: Any1;
    /**
     * 
     * @type {Array<string>}
     * @memberof Transaction
     */
    categories?: Array<string>;
    /**
     * 
     * @type {FinancialUserProfileType}
     * @memberof Transaction
     */
    profileType?: FinancialUserProfileType;
}

/**
 * Check if a given object implements the Transaction interface.
 */
export function instanceOfTransaction(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransactionFromJSON(json: any): Transaction {
    return TransactionFromJSONTyped(json, false);
}

export function TransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'isoCurrencyCode': !exists(json, 'isoCurrencyCode') ? undefined : json['isoCurrencyCode'],
        'unofficialCurrencyCode': !exists(json, 'unofficialCurrencyCode') ? undefined : json['unofficialCurrencyCode'],
        'categoryId': !exists(json, 'categoryId') ? undefined : json['categoryId'],
        'checkNumber': !exists(json, 'checkNumber') ? undefined : json['checkNumber'],
        'currentDate': !exists(json, 'currentDate') ? undefined : json['currentDate'],
        'currentDatetime': !exists(json, 'currentDatetime') ? undefined : json['currentDatetime'],
        'authorizedDate': !exists(json, 'authorizedDate') ? undefined : json['authorizedDate'],
        'authorizedDatetime': !exists(json, 'authorizedDatetime') ? undefined : json['authorizedDatetime'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'merchantName': !exists(json, 'merchantName') ? undefined : json['merchantName'],
        'paymentChannel': !exists(json, 'paymentChannel') ? undefined : json['paymentChannel'],
        'pending': !exists(json, 'pending') ? undefined : json['pending'],
        'pendingTransactionId': !exists(json, 'pendingTransactionId') ? undefined : json['pendingTransactionId'],
        'accountOwner': !exists(json, 'accountOwner') ? undefined : json['accountOwner'],
        'transactionId': !exists(json, 'transactionId') ? undefined : json['transactionId'],
        'transactionCode': !exists(json, 'transactionCode') ? undefined : json['transactionCode'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'linkId': !exists(json, 'linkId') ? undefined : json['linkId'],
        'sign': !exists(json, 'sign') ? undefined : json['sign'],
        'personalFinanceCategoryPrimary': !exists(json, 'personalFinanceCategoryPrimary') ? undefined : json['personalFinanceCategoryPrimary'],
        'personalFinanceCategoryDetailed': !exists(json, 'personalFinanceCategoryDetailed') ? undefined : json['personalFinanceCategoryDetailed'],
        'locationAddress': !exists(json, 'locationAddress') ? undefined : json['locationAddress'],
        'locationCity': !exists(json, 'locationCity') ? undefined : json['locationCity'],
        'locationRegion': !exists(json, 'locationRegion') ? undefined : json['locationRegion'],
        'locationPostalCode': !exists(json, 'locationPostalCode') ? undefined : json['locationPostalCode'],
        'locationCountry': !exists(json, 'locationCountry') ? undefined : json['locationCountry'],
        'locationLat': !exists(json, 'locationLat') ? undefined : json['locationLat'],
        'locationLon': !exists(json, 'locationLon') ? undefined : json['locationLon'],
        'locationStoreNumber': !exists(json, 'locationStoreNumber') ? undefined : json['locationStoreNumber'],
        'paymentMetaByOrderOf': !exists(json, 'paymentMetaByOrderOf') ? undefined : json['paymentMetaByOrderOf'],
        'paymentMetaPayee': !exists(json, 'paymentMetaPayee') ? undefined : json['paymentMetaPayee'],
        'paymentMetaPayer': !exists(json, 'paymentMetaPayer') ? undefined : json['paymentMetaPayer'],
        'paymentMetaPaymentMethod': !exists(json, 'paymentMetaPaymentMethod') ? undefined : json['paymentMetaPaymentMethod'],
        'paymentMetaPaymentProcessor': !exists(json, 'paymentMetaPaymentProcessor') ? undefined : json['paymentMetaPaymentProcessor'],
        'paymentMetaPpdId': !exists(json, 'paymentMetaPpdId') ? undefined : json['paymentMetaPpdId'],
        'paymentMetaReason': !exists(json, 'paymentMetaReason') ? undefined : json['paymentMetaReason'],
        'paymentMetaReferenceNumber': !exists(json, 'paymentMetaReferenceNumber') ? undefined : json['paymentMetaReferenceNumber'],
        'time': !exists(json, 'time') ? undefined : (new Date(json['time'])),
        'additionalProperties': !exists(json, 'additionalProperties') ? undefined : Any1FromJSON(json['additionalProperties']),
        'categories': !exists(json, 'categories') ? undefined : json['categories'],
        'profileType': !exists(json, 'profileType') ? undefined : FinancialUserProfileTypeFromJSON(json['profileType']),
    };
}

export function TransactionToJSON(value?: Transaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': value.accountId,
        'amount': value.amount,
        'isoCurrencyCode': value.isoCurrencyCode,
        'unofficialCurrencyCode': value.unofficialCurrencyCode,
        'categoryId': value.categoryId,
        'checkNumber': value.checkNumber,
        'currentDate': value.currentDate,
        'currentDatetime': value.currentDatetime,
        'authorizedDate': value.authorizedDate,
        'authorizedDatetime': value.authorizedDatetime,
        'name': value.name,
        'merchantName': value.merchantName,
        'paymentChannel': value.paymentChannel,
        'pending': value.pending,
        'pendingTransactionId': value.pendingTransactionId,
        'accountOwner': value.accountOwner,
        'transactionId': value.transactionId,
        'transactionCode': value.transactionCode,
        'id': value.id,
        'userId': value.userId,
        'linkId': value.linkId,
        'sign': value.sign,
        'personalFinanceCategoryPrimary': value.personalFinanceCategoryPrimary,
        'personalFinanceCategoryDetailed': value.personalFinanceCategoryDetailed,
        'locationAddress': value.locationAddress,
        'locationCity': value.locationCity,
        'locationRegion': value.locationRegion,
        'locationPostalCode': value.locationPostalCode,
        'locationCountry': value.locationCountry,
        'locationLat': value.locationLat,
        'locationLon': value.locationLon,
        'locationStoreNumber': value.locationStoreNumber,
        'paymentMetaByOrderOf': value.paymentMetaByOrderOf,
        'paymentMetaPayee': value.paymentMetaPayee,
        'paymentMetaPayer': value.paymentMetaPayer,
        'paymentMetaPaymentMethod': value.paymentMetaPaymentMethod,
        'paymentMetaPaymentProcessor': value.paymentMetaPaymentProcessor,
        'paymentMetaPpdId': value.paymentMetaPpdId,
        'paymentMetaReason': value.paymentMetaReason,
        'paymentMetaReferenceNumber': value.paymentMetaReferenceNumber,
        'time': value.time === undefined ? undefined : (value.time.toISOString()),
        'additionalProperties': Any1ToJSON(value.additionalProperties),
        'categories': value.categories,
        'profileType': FinancialUserProfileTypeToJSON(value.profileType),
    };
}

