/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Any1 } from './Any1';
import {
    Any1FromJSON,
    Any1FromJSONTyped,
    Any1ToJSON,
} from './Any1';
import type { FinancialUserProfileType } from './FinancialUserProfileType';
import {
    FinancialUserProfileTypeFromJSON,
    FinancialUserProfileTypeFromJSONTyped,
    FinancialUserProfileTypeToJSON,
} from './FinancialUserProfileType';

/**
 * 
 * @export
 * @interface Transaction
 */
export interface Transaction {
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    accountId?: string;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    isoCurrencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    unofficialCurrencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    categoryId?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    checkNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    currentDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    currentDatetime?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    authorizedDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    authorizedDatetime?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    merchantName?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentChannel?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Transaction
     */
    pending?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    pendingTransactionId?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    accountOwner?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    transactionId?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    transactionCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    linkId?: string;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    sign?: number;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    personalFinanceCategoryPrimary?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    personalFinanceCategoryDetailed?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationCity?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationRegion?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationPostalCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationCountry?: string;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    locationLat?: number;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    locationLon?: number;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    locationStoreNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaByOrderOf?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaPayee?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaPayer?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaPaymentMethod?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaPaymentProcessor?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaPpdId?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaReason?: string;
    /**
     * 
     * @type {string}
     * @memberof Transaction
     */
    paymentMetaReferenceNumber?: string;
    /**
     * 
     * @type {Date}
     * @memberof Transaction
     */
    time?: Date;
    /**
     * 
     * @type {Any1}
     * @memberof Transaction
     */
    additionalProperties?: Any1;
    /**
     * 
     * @type {Array<string>}
     * @memberof Transaction
     */
    categories?: Array<string>;
    /**
     * 
     * @type {FinancialUserProfileType}
     * @memberof Transaction
     */
    profileType?: FinancialUserProfileType;
}

/**
 * Check if a given object implements the Transaction interface.
 */
export function instanceOfTransaction(value: object): boolean {
    return true;
}

export function TransactionFromJSON(json: any): Transaction {
    return TransactionFromJSONTyped(json, false);
}

export function TransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transaction {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['accountId'] == null ? undefined : json['accountId'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'isoCurrencyCode': json['isoCurrencyCode'] == null ? undefined : json['isoCurrencyCode'],
        'unofficialCurrencyCode': json['unofficialCurrencyCode'] == null ? undefined : json['unofficialCurrencyCode'],
        'categoryId': json['categoryId'] == null ? undefined : json['categoryId'],
        'checkNumber': json['checkNumber'] == null ? undefined : json['checkNumber'],
        'currentDate': json['currentDate'] == null ? undefined : json['currentDate'],
        'currentDatetime': json['currentDatetime'] == null ? undefined : json['currentDatetime'],
        'authorizedDate': json['authorizedDate'] == null ? undefined : json['authorizedDate'],
        'authorizedDatetime': json['authorizedDatetime'] == null ? undefined : json['authorizedDatetime'],
        'name': json['name'] == null ? undefined : json['name'],
        'merchantName': json['merchantName'] == null ? undefined : json['merchantName'],
        'paymentChannel': json['paymentChannel'] == null ? undefined : json['paymentChannel'],
        'pending': json['pending'] == null ? undefined : json['pending'],
        'pendingTransactionId': json['pendingTransactionId'] == null ? undefined : json['pendingTransactionId'],
        'accountOwner': json['accountOwner'] == null ? undefined : json['accountOwner'],
        'transactionId': json['transactionId'] == null ? undefined : json['transactionId'],
        'transactionCode': json['transactionCode'] == null ? undefined : json['transactionCode'],
        'id': json['id'] == null ? undefined : json['id'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'linkId': json['linkId'] == null ? undefined : json['linkId'],
        'sign': json['sign'] == null ? undefined : json['sign'],
        'personalFinanceCategoryPrimary': json['personalFinanceCategoryPrimary'] == null ? undefined : json['personalFinanceCategoryPrimary'],
        'personalFinanceCategoryDetailed': json['personalFinanceCategoryDetailed'] == null ? undefined : json['personalFinanceCategoryDetailed'],
        'locationAddress': json['locationAddress'] == null ? undefined : json['locationAddress'],
        'locationCity': json['locationCity'] == null ? undefined : json['locationCity'],
        'locationRegion': json['locationRegion'] == null ? undefined : json['locationRegion'],
        'locationPostalCode': json['locationPostalCode'] == null ? undefined : json['locationPostalCode'],
        'locationCountry': json['locationCountry'] == null ? undefined : json['locationCountry'],
        'locationLat': json['locationLat'] == null ? undefined : json['locationLat'],
        'locationLon': json['locationLon'] == null ? undefined : json['locationLon'],
        'locationStoreNumber': json['locationStoreNumber'] == null ? undefined : json['locationStoreNumber'],
        'paymentMetaByOrderOf': json['paymentMetaByOrderOf'] == null ? undefined : json['paymentMetaByOrderOf'],
        'paymentMetaPayee': json['paymentMetaPayee'] == null ? undefined : json['paymentMetaPayee'],
        'paymentMetaPayer': json['paymentMetaPayer'] == null ? undefined : json['paymentMetaPayer'],
        'paymentMetaPaymentMethod': json['paymentMetaPaymentMethod'] == null ? undefined : json['paymentMetaPaymentMethod'],
        'paymentMetaPaymentProcessor': json['paymentMetaPaymentProcessor'] == null ? undefined : json['paymentMetaPaymentProcessor'],
        'paymentMetaPpdId': json['paymentMetaPpdId'] == null ? undefined : json['paymentMetaPpdId'],
        'paymentMetaReason': json['paymentMetaReason'] == null ? undefined : json['paymentMetaReason'],
        'paymentMetaReferenceNumber': json['paymentMetaReferenceNumber'] == null ? undefined : json['paymentMetaReferenceNumber'],
        'time': json['time'] == null ? undefined : (new Date(json['time'])),
        'additionalProperties': json['additionalProperties'] == null ? undefined : Any1FromJSON(json['additionalProperties']),
        'categories': json['categories'] == null ? undefined : json['categories'],
        'profileType': json['profileType'] == null ? undefined : FinancialUserProfileTypeFromJSON(json['profileType']),
    };
}

export function TransactionToJSON(value?: Transaction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'accountId': value['accountId'],
        'amount': value['amount'],
        'isoCurrencyCode': value['isoCurrencyCode'],
        'unofficialCurrencyCode': value['unofficialCurrencyCode'],
        'categoryId': value['categoryId'],
        'checkNumber': value['checkNumber'],
        'currentDate': value['currentDate'],
        'currentDatetime': value['currentDatetime'],
        'authorizedDate': value['authorizedDate'],
        'authorizedDatetime': value['authorizedDatetime'],
        'name': value['name'],
        'merchantName': value['merchantName'],
        'paymentChannel': value['paymentChannel'],
        'pending': value['pending'],
        'pendingTransactionId': value['pendingTransactionId'],
        'accountOwner': value['accountOwner'],
        'transactionId': value['transactionId'],
        'transactionCode': value['transactionCode'],
        'id': value['id'],
        'userId': value['userId'],
        'linkId': value['linkId'],
        'sign': value['sign'],
        'personalFinanceCategoryPrimary': value['personalFinanceCategoryPrimary'],
        'personalFinanceCategoryDetailed': value['personalFinanceCategoryDetailed'],
        'locationAddress': value['locationAddress'],
        'locationCity': value['locationCity'],
        'locationRegion': value['locationRegion'],
        'locationPostalCode': value['locationPostalCode'],
        'locationCountry': value['locationCountry'],
        'locationLat': value['locationLat'],
        'locationLon': value['locationLon'],
        'locationStoreNumber': value['locationStoreNumber'],
        'paymentMetaByOrderOf': value['paymentMetaByOrderOf'],
        'paymentMetaPayee': value['paymentMetaPayee'],
        'paymentMetaPayer': value['paymentMetaPayer'],
        'paymentMetaPaymentMethod': value['paymentMetaPaymentMethod'],
        'paymentMetaPaymentProcessor': value['paymentMetaPaymentProcessor'],
        'paymentMetaPpdId': value['paymentMetaPpdId'],
        'paymentMetaReason': value['paymentMetaReason'],
        'paymentMetaReferenceNumber': value['paymentMetaReferenceNumber'],
        'time': value['time'] == null ? undefined : ((value['time']).toISOString()),
        'additionalProperties': Any1ToJSON(value['additionalProperties']),
        'categories': value['categories'],
        'profileType': FinancialUserProfileTypeToJSON(value['profileType']),
    };
}

