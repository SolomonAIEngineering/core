/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FinancialAccountType } from './FinancialAccountType';
import {
    FinancialAccountTypeFromJSON,
    FinancialAccountTypeFromJSONTyped,
    FinancialAccountTypeToJSON,
} from './FinancialAccountType';
import type { FinancialUserProfileType } from './FinancialUserProfileType';
import {
    FinancialUserProfileTypeFromJSON,
    FinancialUserProfileTypeFromJSONTyped,
    FinancialUserProfileTypeToJSON,
} from './FinancialUserProfileType';

/**
 * 
 * @export
 * @interface SearchTransactionsRequest
 */
export interface SearchTransactionsRequest {
    /**
     * 
     * @type {string}
     * @memberof SearchTransactionsRequest
     */
    userId: string;
    /**
     * 
     * @type {FinancialUserProfileType}
     * @memberof SearchTransactionsRequest
     */
    profileType: FinancialUserProfileType;
    /**
     * 
     * @type {string}
     * @memberof SearchTransactionsRequest
     */
    pageNumber: string;
    /**
     * 
     * @type {string}
     * @memberof SearchTransactionsRequest
     */
    pageSize: string;
    /**
     * 
     * @type {number}
     * @memberof SearchTransactionsRequest
     */
    minAmount?: number;
    /**
     * 
     * @type {number}
     * @memberof SearchTransactionsRequest
     */
    maxAmount?: number;
    /**
     * 
     * @type {string}
     * @memberof SearchTransactionsRequest
     */
    category?: string;
    /**
     * 
     * @type {Date}
     * @memberof SearchTransactionsRequest
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof SearchTransactionsRequest
     */
    endDate?: Date;
    /**
     * 
     * @type {FinancialAccountType}
     * @memberof SearchTransactionsRequest
     */
    financialAccountType?: FinancialAccountType;
}

/**
 * Check if a given object implements the SearchTransactionsRequest interface.
 */
export function instanceOfSearchTransactionsRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "profileType" in value;
    isInstance = isInstance && "pageNumber" in value;
    isInstance = isInstance && "pageSize" in value;

    return isInstance;
}

export function SearchTransactionsRequestFromJSON(json: any): SearchTransactionsRequest {
    return SearchTransactionsRequestFromJSONTyped(json, false);
}

export function SearchTransactionsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchTransactionsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'profileType': FinancialUserProfileTypeFromJSON(json['profileType']),
        'pageNumber': json['pageNumber'],
        'pageSize': json['pageSize'],
        'minAmount': !exists(json, 'minAmount') ? undefined : json['minAmount'],
        'maxAmount': !exists(json, 'maxAmount') ? undefined : json['maxAmount'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'startDate': !exists(json, 'startDate') ? undefined : (new Date(json['startDate'])),
        'endDate': !exists(json, 'endDate') ? undefined : (new Date(json['endDate'])),
        'financialAccountType': !exists(json, 'financialAccountType') ? undefined : FinancialAccountTypeFromJSON(json['financialAccountType']),
    };
}

export function SearchTransactionsRequestToJSON(value?: SearchTransactionsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'profileType': FinancialUserProfileTypeToJSON(value.profileType),
        'pageNumber': value.pageNumber,
        'pageSize': value.pageSize,
        'minAmount': value.minAmount,
        'maxAmount': value.maxAmount,
        'category': value.category,
        'startDate': value.startDate === undefined ? undefined : (value.startDate.toISOString()),
        'endDate': value.endDate === undefined ? undefined : (value.endDate.toISOString()),
        'financialAccountType': FinancialAccountTypeToJSON(value.financialAccountType),
    };
}

