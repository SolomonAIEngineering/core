/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InternalErrorCode } from './InternalErrorCode';
import {
    InternalErrorCodeFromJSON,
    InternalErrorCodeFromJSONTyped,
    InternalErrorCodeToJSON,
} from './InternalErrorCode';

/**
 * 
 * @export
 * @interface InternalErrorMessageResponse
 */
export interface InternalErrorMessageResponse {
    /**
     * 
     * @type {InternalErrorCode}
     * @memberof InternalErrorMessageResponse
     */
    code?: InternalErrorCode;
    /**
     * 
     * @type {string}
     * @memberof InternalErrorMessageResponse
     */
    message?: string;
}

/**
 * Check if a given object implements the InternalErrorMessageResponse interface.
 */
export function instanceOfInternalErrorMessageResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InternalErrorMessageResponseFromJSON(json: any): InternalErrorMessageResponse {
    return InternalErrorMessageResponseFromJSONTyped(json, false);
}

export function InternalErrorMessageResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalErrorMessageResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : InternalErrorCodeFromJSON(json['code']),
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function InternalErrorMessageResponseToJSON(value?: InternalErrorMessageResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': InternalErrorCodeToJSON(value.code),
        'message': value.message,
    };
}

