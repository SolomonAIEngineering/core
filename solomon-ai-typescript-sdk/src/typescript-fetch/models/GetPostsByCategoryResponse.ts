/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Post } from './Post';
import {
    PostFromJSON,
    PostFromJSONTyped,
    PostToJSON,
} from './Post';

/**
 * 
 * @export
 * @interface GetPostsByCategoryResponse
 */
export interface GetPostsByCategoryResponse {
    /**
     * 
     * @type {Array<Post>}
     * @memberof GetPostsByCategoryResponse
     */
    posts?: Array<Post>;
    /**
     * 
     * @type {string}
     * @memberof GetPostsByCategoryResponse
     */
    nextOffset?: string;
}

/**
 * Check if a given object implements the GetPostsByCategoryResponse interface.
 */
export function instanceOfGetPostsByCategoryResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetPostsByCategoryResponseFromJSON(json: any): GetPostsByCategoryResponse {
    return GetPostsByCategoryResponseFromJSONTyped(json, false);
}

export function GetPostsByCategoryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPostsByCategoryResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'posts': !exists(json, 'posts') ? undefined : ((json['posts'] as Array<any>).map(PostFromJSON)),
        'nextOffset': !exists(json, 'nextOffset') ? undefined : json['nextOffset'],
    };
}

export function GetPostsByCategoryResponseToJSON(value?: GetPostsByCategoryResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'posts': value.posts === undefined ? undefined : ((value.posts as Array<any>).map(PostToJSON)),
        'nextOffset': value.nextOffset,
    };
}

