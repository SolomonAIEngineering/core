/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Any1 } from './Any1';
import {
    Any1FromJSON,
    Any1FromJSONTyped,
    Any1ToJSON,
} from './Any1';
import type { SmartNote } from './SmartNote';
import {
    SmartNoteFromJSON,
    SmartNoteFromJSONTyped,
    SmartNoteToJSON,
} from './SmartNote';

/**
 * Message representing recurring transactions associated with a Plaid account.
 * @export
 * @interface PlaidAccountRecurringTransaction
 */
export interface PlaidAccountRecurringTransaction {
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    accountId?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    streamId?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    categoryId?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    merchantName?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    personalFinanceCategoryPrimary?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    personalFinanceCategoryDetailed?: string;
    /**
     * 
     * @type {Date}
     * @memberof PlaidAccountRecurringTransaction
     */
    firstDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PlaidAccountRecurringTransaction
     */
    lastDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    frequency?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    transactionIds?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    averageAmount?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    averageAmountIsoCurrencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    lastAmount?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    lastAmountIsoCurrencyCode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PlaidAccountRecurringTransaction
     */
    isActive?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    status?: string;
    /**
     * 
     * @type {Date}
     * @memberof PlaidAccountRecurringTransaction
     */
    updatedTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    linkId?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaidAccountRecurringTransaction
     */
    flow?: string;
    /**
     * The timestamp associated with this recurring transaction.
     * @type {Date}
     * @memberof PlaidAccountRecurringTransaction
     */
    time?: Date;
    /**
     * 
     * @type {Any1}
     * @memberof PlaidAccountRecurringTransaction
     */
    additionalProperties?: Any1;
    /**
     * Notes associated with this recurring transaction.
     * @type {Array<SmartNote>}
     * @memberof PlaidAccountRecurringTransaction
     */
    notes?: Array<SmartNote>;
}

/**
 * Check if a given object implements the PlaidAccountRecurringTransaction interface.
 */
export function instanceOfPlaidAccountRecurringTransaction(value: object): boolean {
    return true;
}

export function PlaidAccountRecurringTransactionFromJSON(json: any): PlaidAccountRecurringTransaction {
    return PlaidAccountRecurringTransactionFromJSONTyped(json, false);
}

export function PlaidAccountRecurringTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaidAccountRecurringTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['accountId'] == null ? undefined : json['accountId'],
        'streamId': json['streamId'] == null ? undefined : json['streamId'],
        'categoryId': json['categoryId'] == null ? undefined : json['categoryId'],
        'description': json['description'] == null ? undefined : json['description'],
        'merchantName': json['merchantName'] == null ? undefined : json['merchantName'],
        'personalFinanceCategoryPrimary': json['personalFinanceCategoryPrimary'] == null ? undefined : json['personalFinanceCategoryPrimary'],
        'personalFinanceCategoryDetailed': json['personalFinanceCategoryDetailed'] == null ? undefined : json['personalFinanceCategoryDetailed'],
        'firstDate': json['firstDate'] == null ? undefined : (new Date(json['firstDate'])),
        'lastDate': json['lastDate'] == null ? undefined : (new Date(json['lastDate'])),
        'frequency': json['frequency'] == null ? undefined : json['frequency'],
        'transactionIds': json['transactionIds'] == null ? undefined : json['transactionIds'],
        'averageAmount': json['averageAmount'] == null ? undefined : json['averageAmount'],
        'averageAmountIsoCurrencyCode': json['averageAmountIsoCurrencyCode'] == null ? undefined : json['averageAmountIsoCurrencyCode'],
        'lastAmount': json['lastAmount'] == null ? undefined : json['lastAmount'],
        'lastAmountIsoCurrencyCode': json['lastAmountIsoCurrencyCode'] == null ? undefined : json['lastAmountIsoCurrencyCode'],
        'isActive': json['isActive'] == null ? undefined : json['isActive'],
        'status': json['status'] == null ? undefined : json['status'],
        'updatedTime': json['updatedTime'] == null ? undefined : (new Date(json['updatedTime'])),
        'userId': json['userId'] == null ? undefined : json['userId'],
        'linkId': json['linkId'] == null ? undefined : json['linkId'],
        'id': json['id'] == null ? undefined : json['id'],
        'flow': json['flow'] == null ? undefined : json['flow'],
        'time': json['time'] == null ? undefined : (new Date(json['time'])),
        'additionalProperties': json['additionalProperties'] == null ? undefined : Any1FromJSON(json['additionalProperties']),
        'notes': json['notes'] == null ? undefined : ((json['notes'] as Array<any>).map(SmartNoteFromJSON)),
    };
}

export function PlaidAccountRecurringTransactionToJSON(value?: PlaidAccountRecurringTransaction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'accountId': value['accountId'],
        'streamId': value['streamId'],
        'categoryId': value['categoryId'],
        'description': value['description'],
        'merchantName': value['merchantName'],
        'personalFinanceCategoryPrimary': value['personalFinanceCategoryPrimary'],
        'personalFinanceCategoryDetailed': value['personalFinanceCategoryDetailed'],
        'firstDate': value['firstDate'] == null ? undefined : ((value['firstDate']).toISOString()),
        'lastDate': value['lastDate'] == null ? undefined : ((value['lastDate']).toISOString()),
        'frequency': value['frequency'],
        'transactionIds': value['transactionIds'],
        'averageAmount': value['averageAmount'],
        'averageAmountIsoCurrencyCode': value['averageAmountIsoCurrencyCode'],
        'lastAmount': value['lastAmount'],
        'lastAmountIsoCurrencyCode': value['lastAmountIsoCurrencyCode'],
        'isActive': value['isActive'],
        'status': value['status'],
        'updatedTime': value['updatedTime'] == null ? undefined : ((value['updatedTime']).toISOString()),
        'userId': value['userId'],
        'linkId': value['linkId'],
        'id': value['id'],
        'flow': value['flow'],
        'time': value['time'] == null ? undefined : ((value['time']).toISOString()),
        'additionalProperties': Any1ToJSON(value['additionalProperties']),
        'notes': value['notes'] == null ? undefined : ((value['notes'] as Array<any>).map(SmartNoteToJSON)),
    };
}

