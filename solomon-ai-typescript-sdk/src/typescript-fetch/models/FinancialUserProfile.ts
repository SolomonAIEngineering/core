/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ActionableInsight } from './ActionableInsight';
import {
    ActionableInsightFromJSON,
    ActionableInsightFromJSONTyped,
    ActionableInsightToJSON,
} from './ActionableInsight';
import type { FinancialUserProfileType } from './FinancialUserProfileType';
import {
    FinancialUserProfileTypeFromJSON,
    FinancialUserProfileTypeFromJSONTyped,
    FinancialUserProfileTypeToJSON,
} from './FinancialUserProfileType';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
} from './Link';
import type { PersonalActionableInsight } from './PersonalActionableInsight';
import {
    PersonalActionableInsightFromJSON,
    PersonalActionableInsightFromJSONTyped,
    PersonalActionableInsightToJSON,
} from './PersonalActionableInsight';
import type { SmartNote } from './SmartNote';
import {
    SmartNoteFromJSON,
    SmartNoteFromJSONTyped,
    SmartNoteToJSON,
} from './SmartNote';
import type { StripeSubscription } from './StripeSubscription';
import {
    StripeSubscriptionFromJSON,
    StripeSubscriptionFromJSONTyped,
    StripeSubscriptionToJSON,
} from './StripeSubscription';

/**
 * 
 * @export
 * @interface FinancialUserProfile
 */
export interface FinancialUserProfile {
    /**
     * 
     * @type {string}
     * @memberof FinancialUserProfile
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof FinancialUserProfile
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof FinancialUserProfile
     */
    stripeCustomerId?: string;
    /**
     * 
     * @type {StripeSubscription}
     * @memberof FinancialUserProfile
     */
    stripeSubscriptions?: StripeSubscription;
    /**
     * 
     * @type {Array<Link>}
     * @memberof FinancialUserProfile
     */
    link?: Array<Link>;
    /**
     * 
     * @type {Array<ActionableInsight>}
     * @memberof FinancialUserProfile
     */
    actionableInsights?: Array<ActionableInsight>;
    /**
     * 
     * @type {string}
     * @memberof FinancialUserProfile
     */
    email?: string;
    /**
     * 
     * @type {Array<PersonalActionableInsight>}
     * @memberof FinancialUserProfile
     */
    actionablePersonalInsights?: Array<PersonalActionableInsight>;
    /**
     * 
     * @type {FinancialUserProfileType}
     * @memberof FinancialUserProfile
     */
    profileType?: FinancialUserProfileType;
    /**
     * 
     * @type {Array<SmartNote>}
     * @memberof FinancialUserProfile
     */
    notes?: Array<SmartNote>;
}

/**
 * Check if a given object implements the FinancialUserProfile interface.
 */
export function instanceOfFinancialUserProfile(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FinancialUserProfileFromJSON(json: any): FinancialUserProfile {
    return FinancialUserProfileFromJSONTyped(json, false);
}

export function FinancialUserProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): FinancialUserProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'stripeCustomerId': !exists(json, 'stripeCustomerId') ? undefined : json['stripeCustomerId'],
        'stripeSubscriptions': !exists(json, 'stripeSubscriptions') ? undefined : StripeSubscriptionFromJSON(json['stripeSubscriptions']),
        'link': !exists(json, 'link') ? undefined : ((json['link'] as Array<any>).map(LinkFromJSON)),
        'actionableInsights': !exists(json, 'actionableInsights') ? undefined : ((json['actionableInsights'] as Array<any>).map(ActionableInsightFromJSON)),
        'email': !exists(json, 'email') ? undefined : json['email'],
        'actionablePersonalInsights': !exists(json, 'actionablePersonalInsights') ? undefined : ((json['actionablePersonalInsights'] as Array<any>).map(PersonalActionableInsightFromJSON)),
        'profileType': !exists(json, 'profileType') ? undefined : FinancialUserProfileTypeFromJSON(json['profileType']),
        'notes': !exists(json, 'notes') ? undefined : ((json['notes'] as Array<any>).map(SmartNoteFromJSON)),
    };
}

export function FinancialUserProfileToJSON(value?: FinancialUserProfile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userId': value.userId,
        'stripeCustomerId': value.stripeCustomerId,
        'stripeSubscriptions': StripeSubscriptionToJSON(value.stripeSubscriptions),
        'link': value.link === undefined ? undefined : ((value.link as Array<any>).map(LinkToJSON)),
        'actionableInsights': value.actionableInsights === undefined ? undefined : ((value.actionableInsights as Array<any>).map(ActionableInsightToJSON)),
        'email': value.email,
        'actionablePersonalInsights': value.actionablePersonalInsights === undefined ? undefined : ((value.actionablePersonalInsights as Array<any>).map(PersonalActionableInsightToJSON)),
        'profileType': FinancialUserProfileTypeToJSON(value.profileType),
        'notes': value.notes === undefined ? undefined : ((value.notes as Array<any>).map(SmartNoteToJSON)),
    };
}

