/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReportItem } from './ReportItem';
import {
    ReportItemFromJSON,
    ReportItemFromJSONTyped,
    ReportItemToJSON,
} from './ReportItem';

/**
 * The CashFlowStatement object shows operating activities, investing activities, and financing activities over a
 * period of time (month, quarter, or year).
 * @export
 * @interface CashFlowStatement
 */
export interface CashFlowStatement {
    /**
     * 
     * @type {string}
     * @memberof CashFlowStatement
     */
    id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof CashFlowStatement
     */
    remoteId?: string;
    /**
     * The cash flow statement's name.
     * @type {string}
     * @memberof CashFlowStatement
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CashFlowStatement
     */
    currency?: string;
    /**
     * The company the cash flow statement belongs to.
     * @type {string}
     * @memberof CashFlowStatement
     */
    company?: string;
    /**
     * The cash flow statement's start period.
     * 
     * Consider using google.protobuf.Timestamp
     * @type {Date}
     * @memberof CashFlowStatement
     */
    startPeriod?: Date;
    /**
     * The cash flow statement's end period.
     * 
     * Consider using google.protobuf.Timestamp
     * @type {Date}
     * @memberof CashFlowStatement
     */
    endPeriod?: Date;
    /**
     * Cash and cash equivalents at the beginning of the cash flow statement's period.
     * @type {number}
     * @memberof CashFlowStatement
     */
    cashAtBeginningOfPeriod?: number;
    /**
     * Cash and cash equivalents at the beginning of the cash flow statement's period.
     * @type {number}
     * @memberof CashFlowStatement
     */
    cashAtEndOfPeriod?: number;
    /**
     * 
     * @type {Array<ReportItem>}
     * @memberof CashFlowStatement
     */
    operatingActivities?: Array<ReportItem>;
    /**
     * 
     * @type {Array<ReportItem>}
     * @memberof CashFlowStatement
     */
    investingActivities?: Array<ReportItem>;
    /**
     * 
     * @type {Array<ReportItem>}
     * @memberof CashFlowStatement
     */
    financingActivities?: Array<ReportItem>;
    /**
     * The time that cash flow statement was generated by the accounting system.
     * 
     * Consider using google.protobuf.Timestamp
     * @type {Date}
     * @memberof CashFlowStatement
     */
    remoteGeneratedAt?: Date;
    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     * @type {boolean}
     * @memberof CashFlowStatement
     */
    remoteWasDeleted?: boolean;
    /**
     * Consider using google.protobuf.Timestamp
     * @type {Date}
     * @memberof CashFlowStatement
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof CashFlowStatement
     */
    mergeRecordId?: string;
}

/**
 * Check if a given object implements the CashFlowStatement interface.
 */
export function instanceOfCashFlowStatement(value: object): boolean {
    return true;
}

export function CashFlowStatementFromJSON(json: any): CashFlowStatement {
    return CashFlowStatementFromJSONTyped(json, false);
}

export function CashFlowStatementFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashFlowStatement {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'remoteId': json['remoteId'] == null ? undefined : json['remoteId'],
        'name': json['name'] == null ? undefined : json['name'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'company': json['company'] == null ? undefined : json['company'],
        'startPeriod': json['startPeriod'] == null ? undefined : (new Date(json['startPeriod'])),
        'endPeriod': json['endPeriod'] == null ? undefined : (new Date(json['endPeriod'])),
        'cashAtBeginningOfPeriod': json['cashAtBeginningOfPeriod'] == null ? undefined : json['cashAtBeginningOfPeriod'],
        'cashAtEndOfPeriod': json['cashAtEndOfPeriod'] == null ? undefined : json['cashAtEndOfPeriod'],
        'operatingActivities': json['operatingActivities'] == null ? undefined : ((json['operatingActivities'] as Array<any>).map(ReportItemFromJSON)),
        'investingActivities': json['investingActivities'] == null ? undefined : ((json['investingActivities'] as Array<any>).map(ReportItemFromJSON)),
        'financingActivities': json['financingActivities'] == null ? undefined : ((json['financingActivities'] as Array<any>).map(ReportItemFromJSON)),
        'remoteGeneratedAt': json['remoteGeneratedAt'] == null ? undefined : (new Date(json['remoteGeneratedAt'])),
        'remoteWasDeleted': json['remoteWasDeleted'] == null ? undefined : json['remoteWasDeleted'],
        'modifiedAt': json['modifiedAt'] == null ? undefined : (new Date(json['modifiedAt'])),
        'mergeRecordId': json['mergeRecordId'] == null ? undefined : json['mergeRecordId'],
    };
}

export function CashFlowStatementToJSON(value?: CashFlowStatement | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'remoteId': value['remoteId'],
        'name': value['name'],
        'currency': value['currency'],
        'company': value['company'],
        'startPeriod': value['startPeriod'] == null ? undefined : ((value['startPeriod']).toISOString()),
        'endPeriod': value['endPeriod'] == null ? undefined : ((value['endPeriod']).toISOString()),
        'cashAtBeginningOfPeriod': value['cashAtBeginningOfPeriod'],
        'cashAtEndOfPeriod': value['cashAtEndOfPeriod'],
        'operatingActivities': value['operatingActivities'] == null ? undefined : ((value['operatingActivities'] as Array<any>).map(ReportItemToJSON)),
        'investingActivities': value['investingActivities'] == null ? undefined : ((value['investingActivities'] as Array<any>).map(ReportItemToJSON)),
        'financingActivities': value['financingActivities'] == null ? undefined : ((value['financingActivities'] as Array<any>).map(ReportItemToJSON)),
        'remoteGeneratedAt': value['remoteGeneratedAt'] == null ? undefined : ((value['remoteGeneratedAt']).toISOString()),
        'remoteWasDeleted': value['remoteWasDeleted'],
        'modifiedAt': value['modifiedAt'] == null ? undefined : ((value['modifiedAt']).toISOString()),
        'mergeRecordId': value['mergeRecordId'],
    };
}

