/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReportItem } from './ReportItem';
import {
    ReportItemFromJSON,
    ReportItemFromJSONTyped,
    ReportItemToJSON,
} from './ReportItem';

/**
 * The CashFlowStatement object shows operating activities, investing activities, and financing activities over a
 * period of time (month, quarter, or year).
 * @export
 * @interface CashFlowStatement
 */
export interface CashFlowStatement {
    /**
     * 
     * @type {string}
     * @memberof CashFlowStatement
     */
    id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof CashFlowStatement
     */
    remoteId?: string;
    /**
     * The cash flow statement's name.
     * @type {string}
     * @memberof CashFlowStatement
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CashFlowStatement
     */
    currency?: string;
    /**
     * The company the cash flow statement belongs to.
     * @type {string}
     * @memberof CashFlowStatement
     */
    company?: string;
    /**
     * The cash flow statement's start period.
     * 
     * Consider using google.protobuf.Timestamp
     * @type {Date}
     * @memberof CashFlowStatement
     */
    startPeriod?: Date;
    /**
     * The cash flow statement's end period.
     * 
     * Consider using google.protobuf.Timestamp
     * @type {Date}
     * @memberof CashFlowStatement
     */
    endPeriod?: Date;
    /**
     * Cash and cash equivalents at the beginning of the cash flow statement's period.
     * @type {number}
     * @memberof CashFlowStatement
     */
    cashAtBeginningOfPeriod?: number;
    /**
     * Cash and cash equivalents at the beginning of the cash flow statement's period.
     * @type {number}
     * @memberof CashFlowStatement
     */
    cashAtEndOfPeriod?: number;
    /**
     * 
     * @type {Array<ReportItem>}
     * @memberof CashFlowStatement
     */
    operatingActivities?: Array<ReportItem>;
    /**
     * 
     * @type {Array<ReportItem>}
     * @memberof CashFlowStatement
     */
    investingActivities?: Array<ReportItem>;
    /**
     * 
     * @type {Array<ReportItem>}
     * @memberof CashFlowStatement
     */
    financingActivities?: Array<ReportItem>;
    /**
     * The time that cash flow statement was generated by the accounting system.
     * 
     * Consider using google.protobuf.Timestamp
     * @type {Date}
     * @memberof CashFlowStatement
     */
    remoteGeneratedAt?: Date;
    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     * @type {boolean}
     * @memberof CashFlowStatement
     */
    remoteWasDeleted?: boolean;
    /**
     * Consider using google.protobuf.Timestamp
     * @type {Date}
     * @memberof CashFlowStatement
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof CashFlowStatement
     */
    mergeRecordId?: string;
}

/**
 * Check if a given object implements the CashFlowStatement interface.
 */
export function instanceOfCashFlowStatement(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CashFlowStatementFromJSON(json: any): CashFlowStatement {
    return CashFlowStatementFromJSONTyped(json, false);
}

export function CashFlowStatementFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashFlowStatement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'remoteId': !exists(json, 'remoteId') ? undefined : json['remoteId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'company': !exists(json, 'company') ? undefined : json['company'],
        'startPeriod': !exists(json, 'startPeriod') ? undefined : (new Date(json['startPeriod'])),
        'endPeriod': !exists(json, 'endPeriod') ? undefined : (new Date(json['endPeriod'])),
        'cashAtBeginningOfPeriod': !exists(json, 'cashAtBeginningOfPeriod') ? undefined : json['cashAtBeginningOfPeriod'],
        'cashAtEndOfPeriod': !exists(json, 'cashAtEndOfPeriod') ? undefined : json['cashAtEndOfPeriod'],
        'operatingActivities': !exists(json, 'operatingActivities') ? undefined : ((json['operatingActivities'] as Array<any>).map(ReportItemFromJSON)),
        'investingActivities': !exists(json, 'investingActivities') ? undefined : ((json['investingActivities'] as Array<any>).map(ReportItemFromJSON)),
        'financingActivities': !exists(json, 'financingActivities') ? undefined : ((json['financingActivities'] as Array<any>).map(ReportItemFromJSON)),
        'remoteGeneratedAt': !exists(json, 'remoteGeneratedAt') ? undefined : (new Date(json['remoteGeneratedAt'])),
        'remoteWasDeleted': !exists(json, 'remoteWasDeleted') ? undefined : json['remoteWasDeleted'],
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
        'mergeRecordId': !exists(json, 'mergeRecordId') ? undefined : json['mergeRecordId'],
    };
}

export function CashFlowStatementToJSON(value?: CashFlowStatement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'remoteId': value.remoteId,
        'name': value.name,
        'currency': value.currency,
        'company': value.company,
        'startPeriod': value.startPeriod === undefined ? undefined : (value.startPeriod.toISOString()),
        'endPeriod': value.endPeriod === undefined ? undefined : (value.endPeriod.toISOString()),
        'cashAtBeginningOfPeriod': value.cashAtBeginningOfPeriod,
        'cashAtEndOfPeriod': value.cashAtEndOfPeriod,
        'operatingActivities': value.operatingActivities === undefined ? undefined : ((value.operatingActivities as Array<any>).map(ReportItemToJSON)),
        'investingActivities': value.investingActivities === undefined ? undefined : ((value.investingActivities as Array<any>).map(ReportItemToJSON)),
        'financingActivities': value.financingActivities === undefined ? undefined : ((value.financingActivities as Array<any>).map(ReportItemToJSON)),
        'remoteGeneratedAt': value.remoteGeneratedAt === undefined ? undefined : (value.remoteGeneratedAt.toISOString()),
        'remoteWasDeleted': value.remoteWasDeleted,
        'modifiedAt': value.modifiedAt === undefined ? undefined : (value.modifiedAt.toISOString()),
        'mergeRecordId': value.mergeRecordId,
    };
}

