/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The VendorCreditLine object represents individual line items in a VendorCredit transaction, detailing specific elements of the credit.
 * @export
 * @interface VendorCreditLine
 */
export interface VendorCreditLine {
    /**
     * 
     * @type {string}
     * @memberof VendorCreditLine
     */
    remoteId?: string;
    /**
     * 
     * @type {number}
     * @memberof VendorCreditLine
     */
    netAmount?: number;
    /**
     * 
     * @type {string}
     * @memberof VendorCreditLine
     */
    trackingCategory?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof VendorCreditLine
     */
    trackingCategories?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof VendorCreditLine
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof VendorCreditLine
     */
    account?: string;
    /**
     * 
     * @type {string}
     * @memberof VendorCreditLine
     */
    company?: string;
    /**
     * 
     * @type {string}
     * @memberof VendorCreditLine
     */
    exchangeRate?: string;
    /**
     * 
     * @type {Date}
     * @memberof VendorCreditLine
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof VendorCreditLine
     */
    id?: string;
}

/**
 * Check if a given object implements the VendorCreditLine interface.
 */
export function instanceOfVendorCreditLine(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VendorCreditLineFromJSON(json: any): VendorCreditLine {
    return VendorCreditLineFromJSONTyped(json, false);
}

export function VendorCreditLineFromJSONTyped(json: any, ignoreDiscriminator: boolean): VendorCreditLine {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'remoteId': !exists(json, 'remoteId') ? undefined : json['remoteId'],
        'netAmount': !exists(json, 'netAmount') ? undefined : json['netAmount'],
        'trackingCategory': !exists(json, 'trackingCategory') ? undefined : json['trackingCategory'],
        'trackingCategories': !exists(json, 'trackingCategories') ? undefined : json['trackingCategories'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'account': !exists(json, 'account') ? undefined : json['account'],
        'company': !exists(json, 'company') ? undefined : json['company'],
        'exchangeRate': !exists(json, 'exchangeRate') ? undefined : json['exchangeRate'],
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function VendorCreditLineToJSON(value?: VendorCreditLine | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'remoteId': value.remoteId,
        'netAmount': value.netAmount,
        'trackingCategory': value.trackingCategory,
        'trackingCategories': value.trackingCategories,
        'description': value.description,
        'account': value.account,
        'company': value.company,
        'exchangeRate': value.exchangeRate,
        'modifiedAt': value.modifiedAt === undefined ? undefined : (value.modifiedAt.toISOString()),
        'id': value.id,
    };
}

