/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PolicyType } from './PolicyType';
import {
    PolicyTypeFromJSON,
    PolicyTypeFromJSONTyped,
    PolicyTypeToJSON,
} from './PolicyType';

/**
 * 
 * @export
 * @interface EmployeTimeOffBalance
 */
export interface EmployeTimeOffBalance {
    /**
     * 
     * @type {string}
     * @memberof EmployeTimeOffBalance
     */
    id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof EmployeTimeOffBalance
     */
    remoteId?: string;
    /**
     * 
     * @type {number}
     * @memberof EmployeTimeOffBalance
     */
    balance?: number;
    /**
     * 
     * @type {number}
     * @memberof EmployeTimeOffBalance
     */
    used?: number;
    /**
     * 
     * @type {PolicyType}
     * @memberof EmployeTimeOffBalance
     */
    policyType?: PolicyType;
    /**
     * 
     * @type {boolean}
     * @memberof EmployeTimeOffBalance
     */
    remoteWasDeleted?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof EmployeTimeOffBalance
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof EmployeTimeOffBalance
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof EmployeTimeOffBalance
     */
    mergeAccountId?: string;
}

/**
 * Check if a given object implements the EmployeTimeOffBalance interface.
 */
export function instanceOfEmployeTimeOffBalance(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EmployeTimeOffBalanceFromJSON(json: any): EmployeTimeOffBalance {
    return EmployeTimeOffBalanceFromJSONTyped(json, false);
}

export function EmployeTimeOffBalanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmployeTimeOffBalance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'remoteId': !exists(json, 'remoteId') ? undefined : json['remoteId'],
        'balance': !exists(json, 'balance') ? undefined : json['balance'],
        'used': !exists(json, 'used') ? undefined : json['used'],
        'policyType': !exists(json, 'policyType') ? undefined : PolicyTypeFromJSON(json['policyType']),
        'remoteWasDeleted': !exists(json, 'remoteWasDeleted') ? undefined : json['remoteWasDeleted'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
        'mergeAccountId': !exists(json, 'mergeAccountId') ? undefined : json['mergeAccountId'],
    };
}

export function EmployeTimeOffBalanceToJSON(value?: EmployeTimeOffBalance | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'remoteId': value.remoteId,
        'balance': value.balance,
        'used': value.used,
        'policyType': PolicyTypeToJSON(value.policyType),
        'remoteWasDeleted': value.remoteWasDeleted,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'modifiedAt': value.modifiedAt === undefined ? undefined : (value.modifiedAt.toISOString()),
        'mergeAccountId': value.mergeAccountId,
    };
}

