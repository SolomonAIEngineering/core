/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The TaxRate object is used to represent a tax rate.
 * @export
 * @interface TaxRate
 */
export interface TaxRate {
    /**
     * 
     * @type {string}
     * @memberof TaxRate
     */
    id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof TaxRate
     */
    remoteId?: string;
    /**
     * The tax rate's description.
     * @type {string}
     * @memberof TaxRate
     */
    description?: string;
    /**
     * The tax rate's total tax rate.
     * @type {number}
     * @memberof TaxRate
     */
    totalTaxRate?: number;
    /**
     * The tax rate's effective tax rate.
     * @type {number}
     * @memberof TaxRate
     */
    effectiveTaxRate?: number;
    /**
     * The company the tax rate belongs to.
     * @type {string}
     * @memberof TaxRate
     */
    company?: string;
    /**
     * Indicates whether or not this object has been deleted in the third party platform.
     * @type {boolean}
     * @memberof TaxRate
     */
    remoteWasDeleted?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof TaxRate
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof TaxRate
     */
    mergeRecordId?: string;
    /**
     * 
     * @type {Date}
     * @memberof TaxRate
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the TaxRate interface.
 */
export function instanceOfTaxRate(value: object): boolean {
    return true;
}

export function TaxRateFromJSON(json: any): TaxRate {
    return TaxRateFromJSONTyped(json, false);
}

export function TaxRateFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxRate {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'remoteId': json['remoteId'] == null ? undefined : json['remoteId'],
        'description': json['description'] == null ? undefined : json['description'],
        'totalTaxRate': json['totalTaxRate'] == null ? undefined : json['totalTaxRate'],
        'effectiveTaxRate': json['effectiveTaxRate'] == null ? undefined : json['effectiveTaxRate'],
        'company': json['company'] == null ? undefined : json['company'],
        'remoteWasDeleted': json['remoteWasDeleted'] == null ? undefined : json['remoteWasDeleted'],
        'modifiedAt': json['modifiedAt'] == null ? undefined : (new Date(json['modifiedAt'])),
        'mergeRecordId': json['mergeRecordId'] == null ? undefined : json['mergeRecordId'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function TaxRateToJSON(value?: TaxRate | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'remoteId': value['remoteId'],
        'description': value['description'],
        'totalTaxRate': value['totalTaxRate'],
        'effectiveTaxRate': value['effectiveTaxRate'],
        'company': value['company'],
        'remoteWasDeleted': value['remoteWasDeleted'],
        'modifiedAt': value['modifiedAt'] == null ? undefined : ((value['modifiedAt']).toISOString()),
        'mergeRecordId': value['mergeRecordId'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

