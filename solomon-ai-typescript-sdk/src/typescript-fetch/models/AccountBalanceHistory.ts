/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FinancialUserProfileType } from './FinancialUserProfileType';
import {
    FinancialUserProfileTypeFromJSON,
    FinancialUserProfileTypeFromJSONTyped,
    FinancialUserProfileTypeToJSON,
} from './FinancialUserProfileType';

/**
 * Account Balance History
 * This message is used to represent the balance history of an account.
 * @export
 * @interface AccountBalanceHistory
 */
export interface AccountBalanceHistory {
    /**
     * 
     * @type {Date}
     * @memberof AccountBalanceHistory
     */
    time?: Date;
    /**
     * 
     * @type {string}
     * @memberof AccountBalanceHistory
     */
    accountId?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountBalanceHistory
     */
    isoCurrencyCode?: string;
    /**
     * 
     * @type {number}
     * @memberof AccountBalanceHistory
     */
    balance?: number;
    /**
     * 
     * @type {string}
     * @memberof AccountBalanceHistory
     */
    userId?: string;
    /**
     * 
     * @type {number}
     * @memberof AccountBalanceHistory
     */
    sign?: number;
    /**
     * 
     * @type {string}
     * @memberof AccountBalanceHistory
     */
    id?: string;
    /**
     * 
     * @type {FinancialUserProfileType}
     * @memberof AccountBalanceHistory
     */
    profileType?: FinancialUserProfileType;
}

/**
 * Check if a given object implements the AccountBalanceHistory interface.
 */
export function instanceOfAccountBalanceHistory(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AccountBalanceHistoryFromJSON(json: any): AccountBalanceHistory {
    return AccountBalanceHistoryFromJSONTyped(json, false);
}

export function AccountBalanceHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountBalanceHistory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'time': !exists(json, 'time') ? undefined : (new Date(json['time'])),
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'isoCurrencyCode': !exists(json, 'isoCurrencyCode') ? undefined : json['isoCurrencyCode'],
        'balance': !exists(json, 'balance') ? undefined : json['balance'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'sign': !exists(json, 'sign') ? undefined : json['sign'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'profileType': !exists(json, 'profileType') ? undefined : FinancialUserProfileTypeFromJSON(json['profileType']),
    };
}

export function AccountBalanceHistoryToJSON(value?: AccountBalanceHistory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'time': value.time === undefined ? undefined : (value.time.toISOString()),
        'accountId': value.accountId,
        'isoCurrencyCode': value.isoCurrencyCode,
        'balance': value.balance,
        'userId': value.userId,
        'sign': value.sign,
        'id': value.id,
        'profileType': FinancialUserProfileTypeToJSON(value.profileType),
    };
}

