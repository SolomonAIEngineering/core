/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PostType } from './PostType';
import {
    PostTypeFromJSON,
    PostTypeFromJSONTyped,
    PostTypeToJSON,
} from './PostType';

/**
 * 
 * @export
 * @interface ReportCommentReplyBody
 */
export interface ReportCommentReplyBody {
    /**
     * 
     * @type {PostType}
     * @memberof ReportCommentReplyBody
     */
    postType: PostType;
}

/**
 * Check if a given object implements the ReportCommentReplyBody interface.
 */
export function instanceOfReportCommentReplyBody(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "postType" in value;

    return isInstance;
}

export function ReportCommentReplyBodyFromJSON(json: any): ReportCommentReplyBody {
    return ReportCommentReplyBodyFromJSONTyped(json, false);
}

export function ReportCommentReplyBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportCommentReplyBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'postType': PostTypeFromJSON(json['postType']),
    };
}

export function ReportCommentReplyBodyToJSON(value?: ReportCommentReplyBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'postType': PostTypeToJSON(value.postType),
    };
}

