/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MediaMetadata } from './MediaMetadata';
import {
    MediaMetadataFromJSON,
    MediaMetadataFromJSONTyped,
    MediaMetadataToJSON,
} from './MediaMetadata';

/**
 * 
 * @export
 * @interface Media
 */
export interface Media {
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    link?: string;
    /**
     * 
     * @type {MediaMetadata}
     * @memberof Media
     */
    metadata?: MediaMetadata;
}

/**
 * Check if a given object implements the Media interface.
 */
export function instanceOfMedia(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MediaFromJSON(json: any): Media {
    return MediaFromJSONTyped(json, false);
}

export function MediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Media {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'link': !exists(json, 'link') ? undefined : json['link'],
        'metadata': !exists(json, 'metadata') ? undefined : MediaMetadataFromJSON(json['metadata']),
    };
}

export function MediaToJSON(value?: Media | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt,
        'link': value.link,
        'metadata': MediaMetadataToJSON(value.metadata),
    };
}

