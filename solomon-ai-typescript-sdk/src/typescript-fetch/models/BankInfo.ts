/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BankAccountType1 } from './BankAccountType1';
import {
    BankAccountType1FromJSON,
    BankAccountType1FromJSONTyped,
    BankAccountType1ToJSON,
} from './BankAccountType1';

/**
 * The BankInfo object is used to represent the Bank Account information for an Employee.
 * @export
 * @interface BankInfo
 */
export interface BankInfo {
    /**
     * 
     * @type {string}
     * @memberof BankInfo
     */
    id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof BankInfo
     */
    remoteId?: string;
    /**
     * 
     * @type {string}
     * @memberof BankInfo
     */
    accountNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof BankInfo
     */
    routingNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof BankInfo
     */
    bankName?: string;
    /**
     * 
     * @type {BankAccountType1}
     * @memberof BankInfo
     */
    accountType?: BankAccountType1;
    /**
     * When the matching bank object was created in the third party system.
     * @type {Date}
     * @memberof BankInfo
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof BankInfo
     */
    mergeAccountId?: string;
    /**
     * Indicates whether or not this object has been deleted in the third party platform.
     * @type {boolean}
     * @memberof BankInfo
     */
    remoteWasDeleted?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof BankInfo
     */
    modifiedAt?: Date;
}

/**
 * Check if a given object implements the BankInfo interface.
 */
export function instanceOfBankInfo(value: object): boolean {
    return true;
}

export function BankInfoFromJSON(json: any): BankInfo {
    return BankInfoFromJSONTyped(json, false);
}

export function BankInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BankInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'remoteId': json['remoteId'] == null ? undefined : json['remoteId'],
        'accountNumber': json['accountNumber'] == null ? undefined : json['accountNumber'],
        'routingNumber': json['routingNumber'] == null ? undefined : json['routingNumber'],
        'bankName': json['bankName'] == null ? undefined : json['bankName'],
        'accountType': json['accountType'] == null ? undefined : BankAccountType1FromJSON(json['accountType']),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'mergeAccountId': json['mergeAccountId'] == null ? undefined : json['mergeAccountId'],
        'remoteWasDeleted': json['remoteWasDeleted'] == null ? undefined : json['remoteWasDeleted'],
        'modifiedAt': json['modifiedAt'] == null ? undefined : (new Date(json['modifiedAt'])),
    };
}

export function BankInfoToJSON(value?: BankInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'remoteId': value['remoteId'],
        'accountNumber': value['accountNumber'],
        'routingNumber': value['routingNumber'],
        'bankName': value['bankName'],
        'accountType': BankAccountType1ToJSON(value['accountType']),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'mergeAccountId': value['mergeAccountId'],
        'remoteWasDeleted': value['remoteWasDeleted'],
        'modifiedAt': value['modifiedAt'] == null ? undefined : ((value['modifiedAt']).toISOString()),
    };
}

