/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SocialProfileMetadata } from './SocialProfileMetadata';
import {
    SocialProfileMetadataFromJSON,
    SocialProfileMetadataFromJSONTyped,
    SocialProfileMetadataToJSON,
} from './SocialProfileMetadata';

/**
 * 
 * @export
 * @interface SocialRelationshipMetadata
 */
export interface SocialRelationshipMetadata {
    /**
     * 
     * @type {SocialProfileMetadata}
     * @memberof SocialRelationshipMetadata
     */
    sourceProfile: SocialProfileMetadata;
    /**
     * 
     * @type {SocialProfileMetadata}
     * @memberof SocialRelationshipMetadata
     */
    targetProfile: SocialProfileMetadata;
    /**
     * 
     * @type {boolean}
     * @memberof SocialRelationshipMetadata
     */
    following?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SocialRelationshipMetadata
     */
    followingSince?: string;
}

/**
 * Check if a given object implements the SocialRelationshipMetadata interface.
 */
export function instanceOfSocialRelationshipMetadata(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sourceProfile" in value;
    isInstance = isInstance && "targetProfile" in value;

    return isInstance;
}

export function SocialRelationshipMetadataFromJSON(json: any): SocialRelationshipMetadata {
    return SocialRelationshipMetadataFromJSONTyped(json, false);
}

export function SocialRelationshipMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SocialRelationshipMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sourceProfile': SocialProfileMetadataFromJSON(json['sourceProfile']),
        'targetProfile': SocialProfileMetadataFromJSON(json['targetProfile']),
        'following': !exists(json, 'following') ? undefined : json['following'],
        'followingSince': !exists(json, 'followingSince') ? undefined : json['followingSince'],
    };
}

export function SocialRelationshipMetadataToJSON(value?: SocialRelationshipMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sourceProfile': SocialProfileMetadataToJSON(value.sourceProfile),
        'targetProfile': SocialProfileMetadataToJSON(value.targetProfile),
        'following': value.following,
        'followingSince': value.followingSince,
    };
}

