/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The PurchaseOrderLineItem object is used to represent a purchase order's line item.
 * @export
 * @interface PurchaseOrderLineItem
 */
export interface PurchaseOrderLineItem {
    /**
     * 
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    remoteId?: string;
    /**
     * 
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof PurchaseOrderLineItem
     */
    quantity?: number;
    /**
     * Assuming string, but might be better as float or double.
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    unitPrice?: string;
    /**
     * 
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    item?: string;
    /**
     * 
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    account?: string;
    /**
     * 
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    trackingCategory?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PurchaseOrderLineItem
     */
    trackingCategories?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    taxAmount?: string;
    /**
     * 
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    totalLineAmount?: string;
    /**
     * 
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    currency?: string;
    /**
     * Assuming string, but might be better as float or double.
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    exchangeRate?: string;
    /**
     * 
     * @type {string}
     * @memberof PurchaseOrderLineItem
     */
    company?: string;
    /**
     * 
     * @type {Date}
     * @memberof PurchaseOrderLineItem
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PurchaseOrderLineItem
     */
    createdAt?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof PurchaseOrderLineItem
     */
    remoteWasDeleted?: boolean;
}

/**
 * Check if a given object implements the PurchaseOrderLineItem interface.
 */
export function instanceOfPurchaseOrderLineItem(value: object): boolean {
    return true;
}

export function PurchaseOrderLineItemFromJSON(json: any): PurchaseOrderLineItem {
    return PurchaseOrderLineItemFromJSONTyped(json, false);
}

export function PurchaseOrderLineItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): PurchaseOrderLineItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'remoteId': json['remoteId'] == null ? undefined : json['remoteId'],
        'description': json['description'] == null ? undefined : json['description'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'unitPrice': json['unitPrice'] == null ? undefined : json['unitPrice'],
        'item': json['item'] == null ? undefined : json['item'],
        'account': json['account'] == null ? undefined : json['account'],
        'trackingCategory': json['trackingCategory'] == null ? undefined : json['trackingCategory'],
        'trackingCategories': json['trackingCategories'] == null ? undefined : json['trackingCategories'],
        'taxAmount': json['taxAmount'] == null ? undefined : json['taxAmount'],
        'totalLineAmount': json['totalLineAmount'] == null ? undefined : json['totalLineAmount'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'exchangeRate': json['exchangeRate'] == null ? undefined : json['exchangeRate'],
        'company': json['company'] == null ? undefined : json['company'],
        'modifiedAt': json['modifiedAt'] == null ? undefined : (new Date(json['modifiedAt'])),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'remoteWasDeleted': json['remoteWasDeleted'] == null ? undefined : json['remoteWasDeleted'],
    };
}

export function PurchaseOrderLineItemToJSON(value?: PurchaseOrderLineItem | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'remoteId': value['remoteId'],
        'description': value['description'],
        'quantity': value['quantity'],
        'unitPrice': value['unitPrice'],
        'item': value['item'],
        'account': value['account'],
        'trackingCategory': value['trackingCategory'],
        'trackingCategories': value['trackingCategories'],
        'taxAmount': value['taxAmount'],
        'totalLineAmount': value['totalLineAmount'],
        'currency': value['currency'],
        'exchangeRate': value['exchangeRate'],
        'company': value['company'],
        'modifiedAt': value['modifiedAt'] == null ? undefined : ((value['modifiedAt']).toISOString()),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'remoteWasDeleted': value['remoteWasDeleted'],
    };
}

