/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CompanyProfile
 */
export interface CompanyProfile {
    /**
     * 
     * @type {string}
     * @memberof CompanyProfile
     */
    id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof CompanyProfile
     */
    remoteId?: string;
    /**
     * The company's legal name.
     * @type {string}
     * @memberof CompanyProfile
     */
    legalName?: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyProfile
     */
    displayName?: string;
    /**
     * The company's tax number.
     * @type {Array<string>}
     * @memberof CompanyProfile
     */
    einNumbers?: Array<string>;
    /**
     * Indicates whether or not this object has been deleted in the third party platform.
     * @type {boolean}
     * @memberof CompanyProfile
     */
    remoteWasDeleted?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof CompanyProfile
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof CompanyProfile
     */
    lastUpdatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof CompanyProfile
     */
    mergeAccountId?: string;
}

/**
 * Check if a given object implements the CompanyProfile interface.
 */
export function instanceOfCompanyProfile(value: object): boolean {
    return true;
}

export function CompanyProfileFromJSON(json: any): CompanyProfile {
    return CompanyProfileFromJSONTyped(json, false);
}

export function CompanyProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyProfile {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'remoteId': json['remoteId'] == null ? undefined : json['remoteId'],
        'legalName': json['legalName'] == null ? undefined : json['legalName'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'einNumbers': json['einNumbers'] == null ? undefined : json['einNumbers'],
        'remoteWasDeleted': json['remoteWasDeleted'] == null ? undefined : json['remoteWasDeleted'],
        'modifiedAt': json['modifiedAt'] == null ? undefined : (new Date(json['modifiedAt'])),
        'lastUpdatedAt': json['lastUpdatedAt'] == null ? undefined : (new Date(json['lastUpdatedAt'])),
        'mergeAccountId': json['mergeAccountId'] == null ? undefined : json['mergeAccountId'],
    };
}

export function CompanyProfileToJSON(value?: CompanyProfile | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'remoteId': value['remoteId'],
        'legalName': value['legalName'],
        'displayName': value['displayName'],
        'einNumbers': value['einNumbers'],
        'remoteWasDeleted': value['remoteWasDeleted'],
        'modifiedAt': value['modifiedAt'] == null ? undefined : ((value['modifiedAt']).toISOString()),
        'lastUpdatedAt': value['lastUpdatedAt'] == null ? undefined : ((value['lastUpdatedAt']).toISOString()),
        'mergeAccountId': value['mergeAccountId'],
    };
}

