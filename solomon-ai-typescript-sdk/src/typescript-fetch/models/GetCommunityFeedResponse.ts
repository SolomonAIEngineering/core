/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BaseTimeline } from './BaseTimeline';
import {
    BaseTimelineFromJSON,
    BaseTimelineFromJSONTyped,
    BaseTimelineToJSON,
} from './BaseTimeline';
import type { NotificationTimeline } from './NotificationTimeline';
import {
    NotificationTimelineFromJSON,
    NotificationTimelineFromJSONTyped,
    NotificationTimelineToJSON,
} from './NotificationTimeline';

/**
 * 
 * @export
 * @interface GetCommunityFeedResponse
 */
export interface GetCommunityFeedResponse {
    /**
     * 
     * @type {BaseTimeline}
     * @memberof GetCommunityFeedResponse
     */
    baseTimeline?: BaseTimeline;
    /**
     * 
     * @type {NotificationTimeline}
     * @memberof GetCommunityFeedResponse
     */
    notificationTimeline?: NotificationTimeline;
    /**
     * 
     * @type {string}
     * @memberof GetCommunityFeedResponse
     */
    nextPageToken?: string;
}

/**
 * Check if a given object implements the GetCommunityFeedResponse interface.
 */
export function instanceOfGetCommunityFeedResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetCommunityFeedResponseFromJSON(json: any): GetCommunityFeedResponse {
    return GetCommunityFeedResponseFromJSONTyped(json, false);
}

export function GetCommunityFeedResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCommunityFeedResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'baseTimeline': !exists(json, 'baseTimeline') ? undefined : BaseTimelineFromJSON(json['baseTimeline']),
        'notificationTimeline': !exists(json, 'notificationTimeline') ? undefined : NotificationTimelineFromJSON(json['notificationTimeline']),
        'nextPageToken': !exists(json, 'nextPageToken') ? undefined : json['nextPageToken'],
    };
}

export function GetCommunityFeedResponseToJSON(value?: GetCommunityFeedResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'baseTimeline': BaseTimelineToJSON(value.baseTimeline),
        'notificationTimeline': NotificationTimelineToJSON(value.notificationTimeline),
        'nextPageToken': value.nextPageToken,
    };
}

