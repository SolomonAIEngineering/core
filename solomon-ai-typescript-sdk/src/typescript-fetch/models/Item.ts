/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The Item object refers to the goods involved in a transaction.
 * @export
 * @interface Item
 */
export interface Item {
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof Item
     */
    remoteId?: string;
    /**
     * The item's name.
     * @type {string}
     * @memberof Item
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    status?: string;
    /**
     * The item's unit price.
     * @type {number}
     * @memberof Item
     */
    unitPrice?: number;
    /**
     * The price at which the item is purchased from a vendor.
     * @type {number}
     * @memberof Item
     */
    purchasePrice?: number;
    /**
     * References the default account used to record a purchase of the item.
     * @type {string}
     * @memberof Item
     */
    purchaseAccount?: string;
    /**
     * References the default account used to record a sale.
     * @type {string}
     * @memberof Item
     */
    salesAccount?: string;
    /**
     * The company the item belongs to.
     * @type {string}
     * @memberof Item
     */
    company?: string;
    /**
     * When the third party's item note was updated.
     * @type {Date}
     * @memberof Item
     */
    remoteUpdatedAt?: Date;
    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     * @type {boolean}
     * @memberof Item
     */
    remoteWasDeleted?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Item
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    mergeRecordId?: string;
    /**
     * 
     * @type {Date}
     * @memberof Item
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the Item interface.
 */
export function instanceOfItem(value: object): boolean {
    return true;
}

export function ItemFromJSON(json: any): Item {
    return ItemFromJSONTyped(json, false);
}

export function ItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): Item {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'remoteId': json['remoteId'] == null ? undefined : json['remoteId'],
        'name': json['name'] == null ? undefined : json['name'],
        'status': json['status'] == null ? undefined : json['status'],
        'unitPrice': json['unitPrice'] == null ? undefined : json['unitPrice'],
        'purchasePrice': json['purchasePrice'] == null ? undefined : json['purchasePrice'],
        'purchaseAccount': json['purchaseAccount'] == null ? undefined : json['purchaseAccount'],
        'salesAccount': json['salesAccount'] == null ? undefined : json['salesAccount'],
        'company': json['company'] == null ? undefined : json['company'],
        'remoteUpdatedAt': json['remoteUpdatedAt'] == null ? undefined : (new Date(json['remoteUpdatedAt'])),
        'remoteWasDeleted': json['remoteWasDeleted'] == null ? undefined : json['remoteWasDeleted'],
        'modifiedAt': json['modifiedAt'] == null ? undefined : (new Date(json['modifiedAt'])),
        'mergeRecordId': json['mergeRecordId'] == null ? undefined : json['mergeRecordId'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function ItemToJSON(value?: Item | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'remoteId': value['remoteId'],
        'name': value['name'],
        'status': value['status'],
        'unitPrice': value['unitPrice'],
        'purchasePrice': value['purchasePrice'],
        'purchaseAccount': value['purchaseAccount'],
        'salesAccount': value['salesAccount'],
        'company': value['company'],
        'remoteUpdatedAt': value['remoteUpdatedAt'] == null ? undefined : ((value['remoteUpdatedAt']).toISOString()),
        'remoteWasDeleted': value['remoteWasDeleted'],
        'modifiedAt': value['modifiedAt'] == null ? undefined : ((value['modifiedAt']).toISOString()),
        'mergeRecordId': value['mergeRecordId'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

