/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 *  - RE_OCCURING_TRANSACTIONS_STATUS_MATURE: A MATURE recurring stream should have at least 3 transactions and happen
 *  on a regular cadence (For Annual recurring stream, we will mark it MATURE after 2 instances).
 *  - RE_OCCURING_TRANSACTIONS_STATUS_EARLY_DETECTION: When a recurring transaction first appears in the transaction history and before it fulfills
 * the requirement of a mature stream, the status will be EARLY_DETECTION.
 *  - RE_OCCURING_TRANSACTIONS_STATUS_TOMBSTONED: A stream that was previously in the EARLY_DETECTION status will move to the TOMBSTONED
 * status when no further transactions were found at the next expected date.
 * @export
 */
export const ReOccuringTransactionsStatus = {
    Unspecified: 'RE_OCCURING_TRANSACTIONS_STATUS_UNSPECIFIED',
    Mature: 'RE_OCCURING_TRANSACTIONS_STATUS_MATURE',
    EarlyDetection: 'RE_OCCURING_TRANSACTIONS_STATUS_EARLY_DETECTION',
    Tombstoned: 'RE_OCCURING_TRANSACTIONS_STATUS_TOMBSTONED'
} as const;
export type ReOccuringTransactionsStatus = typeof ReOccuringTransactionsStatus[keyof typeof ReOccuringTransactionsStatus];


export function ReOccuringTransactionsStatusFromJSON(json: any): ReOccuringTransactionsStatus {
    return ReOccuringTransactionsStatusFromJSONTyped(json, false);
}

export function ReOccuringTransactionsStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReOccuringTransactionsStatus {
    return json as ReOccuringTransactionsStatus;
}

export function ReOccuringTransactionsStatusToJSON(value?: ReOccuringTransactionsStatus | null): any {
    return value as any;
}

