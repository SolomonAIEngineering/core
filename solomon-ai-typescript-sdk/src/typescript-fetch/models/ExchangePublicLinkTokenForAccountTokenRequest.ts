/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExchangePublicLinkTokenForAccountTokenRequest
 */
export interface ExchangePublicLinkTokenForAccountTokenRequest {
    /**
     * 
     * @type {string}
     * @memberof ExchangePublicLinkTokenForAccountTokenRequest
     */
    authZeroUserId: string;
    /**
     * 
     * @type {string}
     * @memberof ExchangePublicLinkTokenForAccountTokenRequest
     */
    publicToken: string;
    /**
     * 
     * @type {string}
     * @memberof ExchangePublicLinkTokenForAccountTokenRequest
     */
    endUserOriginId: string;
    /**
     * 
     * @type {string}
     * @memberof ExchangePublicLinkTokenForAccountTokenRequest
     */
    organizationName: string;
}

/**
 * Check if a given object implements the ExchangePublicLinkTokenForAccountTokenRequest interface.
 */
export function instanceOfExchangePublicLinkTokenForAccountTokenRequest(value: object): boolean {
    if (!('authZeroUserId' in value)) return false;
    if (!('publicToken' in value)) return false;
    if (!('endUserOriginId' in value)) return false;
    if (!('organizationName' in value)) return false;
    return true;
}

export function ExchangePublicLinkTokenForAccountTokenRequestFromJSON(json: any): ExchangePublicLinkTokenForAccountTokenRequest {
    return ExchangePublicLinkTokenForAccountTokenRequestFromJSONTyped(json, false);
}

export function ExchangePublicLinkTokenForAccountTokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExchangePublicLinkTokenForAccountTokenRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'authZeroUserId': json['authZeroUserId'],
        'publicToken': json['publicToken'],
        'endUserOriginId': json['endUserOriginId'],
        'organizationName': json['organizationName'],
    };
}

export function ExchangePublicLinkTokenForAccountTokenRequestToJSON(value?: ExchangePublicLinkTokenForAccountTokenRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'authZeroUserId': value['authZeroUserId'],
        'publicToken': value['publicToken'],
        'endUserOriginId': value['endUserOriginId'],
        'organizationName': value['organizationName'],
    };
}

