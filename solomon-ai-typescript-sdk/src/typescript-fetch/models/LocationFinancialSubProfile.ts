/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FinancialUserProfileType } from './FinancialUserProfileType';
import {
    FinancialUserProfileTypeFromJSON,
    FinancialUserProfileTypeFromJSONTyped,
    FinancialUserProfileTypeToJSON,
} from './FinancialUserProfileType';

/**
 * LocationFinancialSubProfile
 * This message is used to represent the financial sub profile of a location.
 * @export
 * @interface LocationFinancialSubProfile
 */
export interface LocationFinancialSubProfile {
    /**
     * 
     * @type {string}
     * @memberof LocationFinancialSubProfile
     */
    locationCity?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationFinancialSubProfile
     */
    transactionCount?: string;
    /**
     * 
     * @type {number}
     * @memberof LocationFinancialSubProfile
     */
    spentLastWeek?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationFinancialSubProfile
     */
    spentLastTwoWeeks?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationFinancialSubProfile
     */
    spentLastMonth?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationFinancialSubProfile
     */
    spentLastSixMonths?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationFinancialSubProfile
     */
    spentLastYear?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationFinancialSubProfile
     */
    spentLastTwoYears?: number;
    /**
     * 
     * @type {string}
     * @memberof LocationFinancialSubProfile
     */
    userId?: string;
    /**
     * 
     * @type {number}
     * @memberof LocationFinancialSubProfile
     */
    month?: number;
    /**
     * 
     * @type {FinancialUserProfileType}
     * @memberof LocationFinancialSubProfile
     */
    profileType?: FinancialUserProfileType;
}

/**
 * Check if a given object implements the LocationFinancialSubProfile interface.
 */
export function instanceOfLocationFinancialSubProfile(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LocationFinancialSubProfileFromJSON(json: any): LocationFinancialSubProfile {
    return LocationFinancialSubProfileFromJSONTyped(json, false);
}

export function LocationFinancialSubProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationFinancialSubProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'locationCity': !exists(json, 'locationCity') ? undefined : json['locationCity'],
        'transactionCount': !exists(json, 'transactionCount') ? undefined : json['transactionCount'],
        'spentLastWeek': !exists(json, 'spentLastWeek') ? undefined : json['spentLastWeek'],
        'spentLastTwoWeeks': !exists(json, 'spentLastTwoWeeks') ? undefined : json['spentLastTwoWeeks'],
        'spentLastMonth': !exists(json, 'spentLastMonth') ? undefined : json['spentLastMonth'],
        'spentLastSixMonths': !exists(json, 'spentLastSixMonths') ? undefined : json['spentLastSixMonths'],
        'spentLastYear': !exists(json, 'spentLastYear') ? undefined : json['spentLastYear'],
        'spentLastTwoYears': !exists(json, 'spentLastTwoYears') ? undefined : json['spentLastTwoYears'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'month': !exists(json, 'month') ? undefined : json['month'],
        'profileType': !exists(json, 'profileType') ? undefined : FinancialUserProfileTypeFromJSON(json['profileType']),
    };
}

export function LocationFinancialSubProfileToJSON(value?: LocationFinancialSubProfile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'locationCity': value.locationCity,
        'transactionCount': value.transactionCount,
        'spentLastWeek': value.spentLastWeek,
        'spentLastTwoWeeks': value.spentLastTwoWeeks,
        'spentLastMonth': value.spentLastMonth,
        'spentLastSixMonths': value.spentLastSixMonths,
        'spentLastYear': value.spentLastYear,
        'spentLastTwoYears': value.spentLastTwoYears,
        'userId': value.userId,
        'month': value.month,
        'profileType': FinancialUserProfileTypeToJSON(value.profileType),
    };
}

