/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The Categories table stores information about the different categories of expenses or income,
 * such as "Housing", "Food", "Transportation", and "Entertainment". Each category has one or more
 * subcategories, which are stored in the Subcategories table.
 * 
 * For example, the "Housing" category might have subcategories for "Rent", "Utilities", and "Home Maintenance".
 * @export
 * @interface Category1
 */
export interface Category1 {
    /**
     * 
     * @type {string}
     * @memberof Category1
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Category1
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Category1
     */
    description?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Category1
     */
    subcategories?: Array<string>;
}

/**
 * Check if a given object implements the Category1 interface.
 */
export function instanceOfCategory1(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function Category1FromJSON(json: any): Category1 {
    return Category1FromJSONTyped(json, false);
}

export function Category1FromJSONTyped(json: any, ignoreDiscriminator: boolean): Category1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'subcategories': !exists(json, 'subcategories') ? undefined : json['subcategories'],
    };
}

export function Category1ToJSON(value?: Category1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'subcategories': value.subcategories,
    };
}

