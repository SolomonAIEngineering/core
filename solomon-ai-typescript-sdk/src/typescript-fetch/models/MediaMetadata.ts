/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MediaCrop } from './MediaCrop';
import {
    MediaCropFromJSON,
    MediaCropFromJSONTyped,
    MediaCropToJSON,
} from './MediaCrop';
import type { MediaResize } from './MediaResize';
import {
    MediaResizeFromJSON,
    MediaResizeFromJSONTyped,
    MediaResizeToJSON,
} from './MediaResize';
import type { MediaType } from './MediaType';
import {
    MediaTypeFromJSON,
    MediaTypeFromJSONTyped,
    MediaTypeToJSON,
} from './MediaType';

/**
 * 
 * @export
 * @interface MediaMetadata
 */
export interface MediaMetadata {
    /**
     * 
     * @type {string}
     * @memberof MediaMetadata
     */
    id?: string;
    /**
     * 
     * @type {MediaResize}
     * @memberof MediaMetadata
     */
    resize?: MediaResize;
    /**
     * 
     * @type {MediaCrop}
     * @memberof MediaMetadata
     */
    crop?: MediaCrop;
    /**
     * 
     * @type {string}
     * @memberof MediaMetadata
     */
    imageWidth?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaMetadata
     */
    imageHeight?: string;
    /**
     * 
     * @type {MediaType}
     * @memberof MediaMetadata
     */
    type?: MediaType;
}

/**
 * Check if a given object implements the MediaMetadata interface.
 */
export function instanceOfMediaMetadata(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MediaMetadataFromJSON(json: any): MediaMetadata {
    return MediaMetadataFromJSONTyped(json, false);
}

export function MediaMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'resize': !exists(json, 'resize') ? undefined : MediaResizeFromJSON(json['resize']),
        'crop': !exists(json, 'crop') ? undefined : MediaCropFromJSON(json['crop']),
        'imageWidth': !exists(json, 'imageWidth') ? undefined : json['imageWidth'],
        'imageHeight': !exists(json, 'imageHeight') ? undefined : json['imageHeight'],
        'type': !exists(json, 'type') ? undefined : MediaTypeFromJSON(json['type']),
    };
}

export function MediaMetadataToJSON(value?: MediaMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'resize': MediaResizeToJSON(value.resize),
        'crop': MediaCropToJSON(value.crop),
        'imageWidth': value.imageWidth,
        'imageHeight': value.imageHeight,
        'type': MediaTypeToJSON(value.type),
    };
}

