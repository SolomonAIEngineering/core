/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * PlaidAccountTransactionSplit represents a split of a PlaidAccountTransaction.
 * @export
 * @interface TransactionSplit
 */
export interface TransactionSplit {
    /**
     * The unique ID for this transaction.
     * @type {string}
     * @memberof TransactionSplit
     */
    id?: string;
    /**
     * The user ID associated with this transaction.
     * @type {string}
     * @memberof TransactionSplit
     */
    userId?: string;
    /**
     * The link ID associated with this transaction.
     * @type {string}
     * @memberof TransactionSplit
     */
    linkId?: string;
    /**
     * The description of the transaction.
     * @type {string}
     * @memberof TransactionSplit
     */
    description?: string;
    /**
     * The amount of money involved in the transaction.
     * @type {number}
     * @memberof TransactionSplit
     */
    amount?: number;
    /**
     * The set of categories that the transaction belongs to.
     * @type {Array<string>}
     * @memberof TransactionSplit
     */
    categories?: Array<string>;
    /**
     * The primary personal finance category of the transaction.
     * @type {string}
     * @memberof TransactionSplit
     */
    personalFinanceCategoryPrimary?: string;
    /**
     * The detailed personal finance category of the transaction.
     * @type {string}
     * @memberof TransactionSplit
     */
    personalFinanceCategoryDetailed?: string;
    /**
     * Tags associated with this transaction.
     * @type {Array<string>}
     * @memberof TransactionSplit
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof TransactionSplit
     */
    authorizedDate?: Date;
    /**
     * The date-time when the transaction was authorized.
     * @type {Date}
     * @memberof TransactionSplit
     */
    authorizedDatetime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TransactionSplit
     */
    timeOfSplit?: Date;
}

/**
 * Check if a given object implements the TransactionSplit interface.
 */
export function instanceOfTransactionSplit(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransactionSplitFromJSON(json: any): TransactionSplit {
    return TransactionSplitFromJSONTyped(json, false);
}

export function TransactionSplitFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionSplit {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'linkId': !exists(json, 'linkId') ? undefined : json['linkId'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'categories': !exists(json, 'categories') ? undefined : json['categories'],
        'personalFinanceCategoryPrimary': !exists(json, 'personalFinanceCategoryPrimary') ? undefined : json['personalFinanceCategoryPrimary'],
        'personalFinanceCategoryDetailed': !exists(json, 'personalFinanceCategoryDetailed') ? undefined : json['personalFinanceCategoryDetailed'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'authorizedDate': !exists(json, 'authorizedDate') ? undefined : (new Date(json['authorizedDate'])),
        'authorizedDatetime': !exists(json, 'authorizedDatetime') ? undefined : (new Date(json['authorizedDatetime'])),
        'timeOfSplit': !exists(json, 'timeOfSplit') ? undefined : (new Date(json['timeOfSplit'])),
    };
}

export function TransactionSplitToJSON(value?: TransactionSplit | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userId': value.userId,
        'linkId': value.linkId,
        'description': value.description,
        'amount': value.amount,
        'categories': value.categories,
        'personalFinanceCategoryPrimary': value.personalFinanceCategoryPrimary,
        'personalFinanceCategoryDetailed': value.personalFinanceCategoryDetailed,
        'tags': value.tags,
        'authorizedDate': value.authorizedDate === undefined ? undefined : (value.authorizedDate.toISOString()),
        'authorizedDatetime': value.authorizedDatetime === undefined ? undefined : (value.authorizedDatetime.toISOString()),
        'timeOfSplit': value.timeOfSplit === undefined ? undefined : (value.timeOfSplit.toISOString()),
    };
}

