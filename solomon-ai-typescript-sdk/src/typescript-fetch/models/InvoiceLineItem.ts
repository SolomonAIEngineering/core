/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The Invoice object represents an itemized record of goods and/or services sold to a customer.
 * @export
 * @interface InvoiceLineItem
 */
export interface InvoiceLineItem {
    /**
     * 
     * @type {string}
     * @memberof InvoiceLineItem
     */
    id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof InvoiceLineItem
     */
    remoteId?: string;
    /**
     * The line item's description.
     * @type {string}
     * @memberof InvoiceLineItem
     */
    description?: string;
    /**
     * The line item's unit price.
     * @type {number}
     * @memberof InvoiceLineItem
     */
    unitPrice?: number;
    /**
     * The line item's quantity.
     * @type {number}
     * @memberof InvoiceLineItem
     */
    quantity?: number;
    /**
     * The line item's total amount.
     * @type {number}
     * @memberof InvoiceLineItem
     */
    totalAmount?: number;
    /**
     * 
     * @type {string}
     * @memberof InvoiceLineItem
     */
    currency?: string;
    /**
     * The line item's exchange rate.
     * @type {string}
     * @memberof InvoiceLineItem
     */
    exchangeRate?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceLineItem
     */
    item?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceLineItem
     */
    account?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceLineItem
     */
    trackingCategory?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof InvoiceLineItem
     */
    trackingCategories?: Array<string>;
    /**
     * The company the line item belongs to.
     * @type {string}
     * @memberof InvoiceLineItem
     */
    company?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceLineItem
     */
    mergeRecordId?: string;
    /**
     * Consider using google.protobuf.Timestamp
     * @type {Date}
     * @memberof InvoiceLineItem
     */
    modifiedAt?: Date;
}

/**
 * Check if a given object implements the InvoiceLineItem interface.
 */
export function instanceOfInvoiceLineItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InvoiceLineItemFromJSON(json: any): InvoiceLineItem {
    return InvoiceLineItemFromJSONTyped(json, false);
}

export function InvoiceLineItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceLineItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'remoteId': !exists(json, 'remoteId') ? undefined : json['remoteId'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'unitPrice': !exists(json, 'unitPrice') ? undefined : json['unitPrice'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'totalAmount': !exists(json, 'totalAmount') ? undefined : json['totalAmount'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'exchangeRate': !exists(json, 'exchangeRate') ? undefined : json['exchangeRate'],
        'item': !exists(json, 'item') ? undefined : json['item'],
        'account': !exists(json, 'account') ? undefined : json['account'],
        'trackingCategory': !exists(json, 'trackingCategory') ? undefined : json['trackingCategory'],
        'trackingCategories': !exists(json, 'trackingCategories') ? undefined : json['trackingCategories'],
        'company': !exists(json, 'company') ? undefined : json['company'],
        'mergeRecordId': !exists(json, 'mergeRecordId') ? undefined : json['mergeRecordId'],
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
    };
}

export function InvoiceLineItemToJSON(value?: InvoiceLineItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'remoteId': value.remoteId,
        'description': value.description,
        'unitPrice': value.unitPrice,
        'quantity': value.quantity,
        'totalAmount': value.totalAmount,
        'currency': value.currency,
        'exchangeRate': value.exchangeRate,
        'item': value.item,
        'account': value.account,
        'trackingCategory': value.trackingCategory,
        'trackingCategories': value.trackingCategories,
        'company': value.company,
        'mergeRecordId': value.mergeRecordId,
        'modifiedAt': value.modifiedAt === undefined ? undefined : (value.modifiedAt.toISOString()),
    };
}

