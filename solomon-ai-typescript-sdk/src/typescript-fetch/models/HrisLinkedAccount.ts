/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CompanyProfile } from './CompanyProfile';
import {
    CompanyProfileFromJSON,
    CompanyProfileFromJSONTyped,
    CompanyProfileToJSON,
} from './CompanyProfile';
import type { Employee } from './Employee';
import {
    EmployeeFromJSON,
    EmployeeFromJSONTyped,
    EmployeeToJSON,
} from './Employee';
import type { EmployerBenefits } from './EmployerBenefits';
import {
    EmployerBenefitsFromJSON,
    EmployerBenefitsFromJSONTyped,
    EmployerBenefitsToJSON,
} from './EmployerBenefits';
import type { EmployerPayrollRun } from './EmployerPayrollRun';
import {
    EmployerPayrollRunFromJSON,
    EmployerPayrollRunFromJSONTyped,
    EmployerPayrollRunToJSON,
} from './EmployerPayrollRun';

/**
 * 
 * @export
 * @interface HrisLinkedAccount
 */
export interface HrisLinkedAccount {
    /**
     * 
     * @type {string}
     * @memberof HrisLinkedAccount
     */
    id?: string;
    /**
     * 
     * @type {CompanyProfile}
     * @memberof HrisLinkedAccount
     */
    profile?: CompanyProfile;
    /**
     * 
     * @type {Array<EmployerBenefits>}
     * @memberof HrisLinkedAccount
     */
    benefitPlans?: Array<EmployerBenefits>;
    /**
     * 
     * @type {Array<Employee>}
     * @memberof HrisLinkedAccount
     */
    employees?: Array<Employee>;
    /**
     * 
     * @type {Array<EmployerPayrollRun>}
     * @memberof HrisLinkedAccount
     */
    payrollRuns?: Array<EmployerPayrollRun>;
}

/**
 * Check if a given object implements the HrisLinkedAccount interface.
 */
export function instanceOfHrisLinkedAccount(value: object): boolean {
    return true;
}

export function HrisLinkedAccountFromJSON(json: any): HrisLinkedAccount {
    return HrisLinkedAccountFromJSONTyped(json, false);
}

export function HrisLinkedAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): HrisLinkedAccount {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'profile': json['profile'] == null ? undefined : CompanyProfileFromJSON(json['profile']),
        'benefitPlans': json['benefitPlans'] == null ? undefined : ((json['benefitPlans'] as Array<any>).map(EmployerBenefitsFromJSON)),
        'employees': json['employees'] == null ? undefined : ((json['employees'] as Array<any>).map(EmployeeFromJSON)),
        'payrollRuns': json['payrollRuns'] == null ? undefined : ((json['payrollRuns'] as Array<any>).map(EmployerPayrollRunFromJSON)),
    };
}

export function HrisLinkedAccountToJSON(value?: HrisLinkedAccount | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'profile': CompanyProfileToJSON(value['profile']),
        'benefitPlans': value['benefitPlans'] == null ? undefined : ((value['benefitPlans'] as Array<any>).map(EmployerBenefitsToJSON)),
        'employees': value['employees'] == null ? undefined : ((value['employees'] as Array<any>).map(EmployeeToJSON)),
        'payrollRuns': value['payrollRuns'] == null ? undefined : ((value['payrollRuns'] as Array<any>).map(EmployerPayrollRunToJSON)),
    };
}

