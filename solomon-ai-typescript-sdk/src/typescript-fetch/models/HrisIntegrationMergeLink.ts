/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HrisLinkedAccount } from './HrisLinkedAccount';
import {
    HrisLinkedAccountFromJSON,
    HrisLinkedAccountFromJSONTyped,
    HrisLinkedAccountToJSON,
} from './HrisLinkedAccount';
import type { MergeLinkedAccountToken } from './MergeLinkedAccountToken';
import {
    MergeLinkedAccountTokenFromJSON,
    MergeLinkedAccountTokenFromJSONTyped,
    MergeLinkedAccountTokenToJSON,
} from './MergeLinkedAccountToken';

/**
 * 
 * @export
 * @interface HrisIntegrationMergeLink
 */
export interface HrisIntegrationMergeLink {
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    integration?: string;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    integrationSlug?: string;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    category?: string;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    endUserOriginId?: string;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    endUserOrganizationName?: string;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    endUserEmailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    webhookListenerUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof HrisIntegrationMergeLink
     */
    isDuplicate?: boolean;
    /**
     * 
     * @type {MergeLinkedAccountToken}
     * @memberof HrisIntegrationMergeLink
     */
    token?: MergeLinkedAccountToken;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    integrationName?: string;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    integrationImage?: string;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    integrationSquareImage?: string;
    /**
     * 
     * @type {HrisLinkedAccount}
     * @memberof HrisIntegrationMergeLink
     */
    account?: HrisLinkedAccount;
    /**
     * 
     * @type {string}
     * @memberof HrisIntegrationMergeLink
     */
    mergeLinkedAccountId?: string;
    /**
     * 
     * @type {Date}
     * @memberof HrisIntegrationMergeLink
     */
    lastModifiedAt?: Date;
}

/**
 * Check if a given object implements the HrisIntegrationMergeLink interface.
 */
export function instanceOfHrisIntegrationMergeLink(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HrisIntegrationMergeLinkFromJSON(json: any): HrisIntegrationMergeLink {
    return HrisIntegrationMergeLinkFromJSONTyped(json, false);
}

export function HrisIntegrationMergeLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): HrisIntegrationMergeLink {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'integration': !exists(json, 'integration') ? undefined : json['integration'],
        'integrationSlug': !exists(json, 'integrationSlug') ? undefined : json['integrationSlug'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'endUserOriginId': !exists(json, 'endUserOriginId') ? undefined : json['endUserOriginId'],
        'endUserOrganizationName': !exists(json, 'endUserOrganizationName') ? undefined : json['endUserOrganizationName'],
        'endUserEmailAddress': !exists(json, 'endUserEmailAddress') ? undefined : json['endUserEmailAddress'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'webhookListenerUrl': !exists(json, 'webhookListenerUrl') ? undefined : json['webhookListenerUrl'],
        'isDuplicate': !exists(json, 'isDuplicate') ? undefined : json['isDuplicate'],
        'token': !exists(json, 'token') ? undefined : MergeLinkedAccountTokenFromJSON(json['token']),
        'integrationName': !exists(json, 'integrationName') ? undefined : json['integrationName'],
        'integrationImage': !exists(json, 'integrationImage') ? undefined : json['integrationImage'],
        'integrationSquareImage': !exists(json, 'integrationSquareImage') ? undefined : json['integrationSquareImage'],
        'account': !exists(json, 'account') ? undefined : HrisLinkedAccountFromJSON(json['account']),
        'mergeLinkedAccountId': !exists(json, 'mergeLinkedAccountId') ? undefined : json['mergeLinkedAccountId'],
        'lastModifiedAt': !exists(json, 'lastModifiedAt') ? undefined : (new Date(json['lastModifiedAt'])),
    };
}

export function HrisIntegrationMergeLinkToJSON(value?: HrisIntegrationMergeLink | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'integration': value.integration,
        'integrationSlug': value.integrationSlug,
        'category': value.category,
        'endUserOriginId': value.endUserOriginId,
        'endUserOrganizationName': value.endUserOrganizationName,
        'endUserEmailAddress': value.endUserEmailAddress,
        'status': value.status,
        'webhookListenerUrl': value.webhookListenerUrl,
        'isDuplicate': value.isDuplicate,
        'token': MergeLinkedAccountTokenToJSON(value.token),
        'integrationName': value.integrationName,
        'integrationImage': value.integrationImage,
        'integrationSquareImage': value.integrationSquareImage,
        'account': HrisLinkedAccountToJSON(value.account),
        'mergeLinkedAccountId': value.mergeLinkedAccountId,
        'lastModifiedAt': value.lastModifiedAt === undefined ? undefined : (value.lastModifiedAt.toISOString()),
    };
}

