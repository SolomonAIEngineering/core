/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BusinessActionableInsightType } from './BusinessActionableInsightType';
import {
    BusinessActionableInsightTypeFromJSON,
    BusinessActionableInsightTypeFromJSONTyped,
    BusinessActionableInsightTypeToJSON,
} from './BusinessActionableInsightType';

/**
 * 
 * @export
 * @interface BusinessActionableInsight
 */
export interface BusinessActionableInsight {
    /**
     * 
     * @type {string}
     * @memberof BusinessActionableInsight
     */
    id?: string;
    /**
     * 
     * @type {BusinessActionableInsightType}
     * @memberof BusinessActionableInsight
     */
    type?: BusinessActionableInsightType;
    /**
     * 
     * @type {string}
     * @memberof BusinessActionableInsight
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof BusinessActionableInsight
     */
    takeaway?: string;
    /**
     * 
     * @type {string}
     * @memberof BusinessActionableInsight
     */
    action?: string;
    /**
     * 
     * @type {string}
     * @memberof BusinessActionableInsight
     */
    expectedBenefit?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BusinessActionableInsight
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof BusinessActionableInsight
     */
    generatedTime?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof BusinessActionableInsight
     */
    metricsToOptimizeFor?: Array<string>;
}

/**
 * Check if a given object implements the BusinessActionableInsight interface.
 */
export function instanceOfBusinessActionableInsight(value: object): boolean {
    return true;
}

export function BusinessActionableInsightFromJSON(json: any): BusinessActionableInsight {
    return BusinessActionableInsightFromJSONTyped(json, false);
}

export function BusinessActionableInsightFromJSONTyped(json: any, ignoreDiscriminator: boolean): BusinessActionableInsight {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : BusinessActionableInsightTypeFromJSON(json['type']),
        'description': json['description'] == null ? undefined : json['description'],
        'takeaway': json['takeaway'] == null ? undefined : json['takeaway'],
        'action': json['action'] == null ? undefined : json['action'],
        'expectedBenefit': json['expectedBenefit'] == null ? undefined : json['expectedBenefit'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'generatedTime': json['generatedTime'] == null ? undefined : (new Date(json['generatedTime'])),
        'metricsToOptimizeFor': json['metricsToOptimizeFor'] == null ? undefined : json['metricsToOptimizeFor'],
    };
}

export function BusinessActionableInsightToJSON(value?: BusinessActionableInsight | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'type': BusinessActionableInsightTypeToJSON(value['type']),
        'description': value['description'],
        'takeaway': value['takeaway'],
        'action': value['action'],
        'expectedBenefit': value['expectedBenefit'],
        'tags': value['tags'],
        'generatedTime': value['generatedTime'] == null ? undefined : ((value['generatedTime']).toISOString()),
        'metricsToOptimizeFor': value['metricsToOptimizeFor'],
    };
}

