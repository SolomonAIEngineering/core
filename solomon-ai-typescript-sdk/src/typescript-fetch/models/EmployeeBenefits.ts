/* tslint:disable */
/* eslint-disable */
/**
 * User Service
 * Solomon AI User Service API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The Benefit object is used to represent a benefit that an employee has enrolled in.
 * @export
 * @interface EmployeeBenefits
 */
export interface EmployeeBenefits {
    /**
     * 
     * @type {string}
     * @memberof EmployeeBenefits
     */
    id?: string;
    /**
     * The third-party API ID of the matching object.
     * @type {string}
     * @memberof EmployeeBenefits
     */
    remoteId?: string;
    /**
     * The name of the benefit provider.
     * @type {string}
     * @memberof EmployeeBenefits
     */
    providerName?: string;
    /**
     * The ID of the employee.
     * @type {string}
     * @memberof EmployeeBenefits
     */
    employeeMergeAccountId?: string;
    /**
     * The ID of the benefit plan.
     * @type {string}
     * @memberof EmployeeBenefits
     */
    benefitPlanMergeAccountId?: string;
    /**
     * The employee's contribution.
     * @type {string}
     * @memberof EmployeeBenefits
     */
    employeeContribution?: string;
    /**
     * The company's contribution.
     * @type {string}
     * @memberof EmployeeBenefits
     */
    companyContribution?: string;
    /**
     * The day and time the benefit started.
     * @type {Date}
     * @memberof EmployeeBenefits
     */
    startDate?: Date;
    /**
     * The day and time the benefit ended.
     * @type {Date}
     * @memberof EmployeeBenefits
     */
    endDate?: Date;
    /**
     * Indicates whether or not this object has been deleted in the third party platform.
     * @type {boolean}
     * @memberof EmployeeBenefits
     */
    remoteWasDeleted?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof EmployeeBenefits
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof EmployeeBenefits
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof EmployeeBenefits
     */
    mergeAccountId?: string;
}

/**
 * Check if a given object implements the EmployeeBenefits interface.
 */
export function instanceOfEmployeeBenefits(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EmployeeBenefitsFromJSON(json: any): EmployeeBenefits {
    return EmployeeBenefitsFromJSONTyped(json, false);
}

export function EmployeeBenefitsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmployeeBenefits {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'remoteId': !exists(json, 'remoteId') ? undefined : json['remoteId'],
        'providerName': !exists(json, 'providerName') ? undefined : json['providerName'],
        'employeeMergeAccountId': !exists(json, 'employeeMergeAccountId') ? undefined : json['employeeMergeAccountId'],
        'benefitPlanMergeAccountId': !exists(json, 'benefitPlanMergeAccountId') ? undefined : json['benefitPlanMergeAccountId'],
        'employeeContribution': !exists(json, 'employeeContribution') ? undefined : json['employeeContribution'],
        'companyContribution': !exists(json, 'companyContribution') ? undefined : json['companyContribution'],
        'startDate': !exists(json, 'startDate') ? undefined : (new Date(json['startDate'])),
        'endDate': !exists(json, 'endDate') ? undefined : (new Date(json['endDate'])),
        'remoteWasDeleted': !exists(json, 'remoteWasDeleted') ? undefined : json['remoteWasDeleted'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
        'mergeAccountId': !exists(json, 'mergeAccountId') ? undefined : json['mergeAccountId'],
    };
}

export function EmployeeBenefitsToJSON(value?: EmployeeBenefits | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'remoteId': value.remoteId,
        'providerName': value.providerName,
        'employeeMergeAccountId': value.employeeMergeAccountId,
        'benefitPlanMergeAccountId': value.benefitPlanMergeAccountId,
        'employeeContribution': value.employeeContribution,
        'companyContribution': value.companyContribution,
        'startDate': value.startDate === undefined ? undefined : (value.startDate.toISOString()),
        'endDate': value.endDate === undefined ? undefined : (value.endDate.toISOString()),
        'remoteWasDeleted': value.remoteWasDeleted,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'modifiedAt': value.modifiedAt === undefined ? undefined : (value.modifiedAt.toISOString()),
        'mergeAccountId': value.mergeAccountId,
    };
}

