apiVersion: linkerd.io/v1alpha2
kind: ServiceProfile
metadata:
  creationTimestamp: null
  name: backend-user-service.default.svc.cluster.local
  namespace: default
spec:
  routes:
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUser
    name: GetUser
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUserByUsername
    name: GetUserByUsername
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUserByEmail
    name: GetUserByEmail
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/CheckUsernameExists
    name: CheckUsernameExists
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/CheckEmailExists
    name: CheckEmailExists
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/DeleteUser
    name: DeleteUser
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/UpdateUser
    name: UpdateUser
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUserId
    name: GetUserId
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/HealthCheck
    name: HealthCheck
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/ReadynessCheck
    name: ReadynessCheck
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUserByEmailOrUsername
    name: GetUserByEmailOrUsername
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/VerifyUser
    name: VerifyUser
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/PasswordResetWebhook
    name: PasswordResetWebhook
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUserV2
    name: GetUserV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUserByUsernameV2
    name: GetUserByUsernameV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUserByEmailV2
    name: GetUserByEmailV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUserByEmailOrUsernameV2
    name: GetUserByEmailOrUsernameV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/CheckUsernameExistsV2
    name: CheckUsernameExistsV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/CheckEmailExistsV2
    name: CheckEmailExistsV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/DeleteUserV2
    name: DeleteUserV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/UpdateUserV2
    name: UpdateUserV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/CreateUserV2
    name: CreateUserV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUserIdV2
    name: GetUserIdV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/VerifyUserV2
    name: VerifyUserV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/PasswordResetWebhookV2
    name: PasswordResetWebhookV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetBusinessSettings
    name: GetBusinessSettings
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUserByAuthnIDV2
    name: GetUserByAuthnIDV2
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetCannyUserSSOToken
    name: GetCannyUserSSOToken
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetUserByAuth0ID
    name: GetUserByAuth0ID
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/CreateRole
    name: CreateRole
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/GetRole
    name: GetRole
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/UpdateRole
    name: UpdateRole
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/DeleteRole
    name: DeleteRole
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/ListRoles
    name: ListRoles
  - condition:
      method: POST
      pathRegex: /user_service\.v1\.UserService/CheckEmailAndAuth0UserIdExists
    name: CheckEmailAndAuth0UserIdExists
