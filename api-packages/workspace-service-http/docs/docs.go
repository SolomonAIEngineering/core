// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Source Code",
            "url": "https://github.com/SolomonAIEngineering/core"
        },
        "license": {
            "name": "MIT License",
            "url": "https://github.com/SolomonAIEngineering/core/blob/master/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/workspace-microservice/rest-api/v1/file/upload": {
            "post": {
                "description": "This endpoint allows for the uploading of a file to the server. Upon successful upload,",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace-service-rest"
                ],
                "summary": "Uploads a file to the server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identifier of the workspace where the file will be uploaded",
                        "name": "workspaceId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the folder within the workspace where the file will be stored",
                        "name": "folderId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the file to be saved (optional)",
                        "name": "filename",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the user uploading the file",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "The file to be uploaded",
                        "name": "attachment",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "On successful upload, returns the URL to the saved file and its metadata, including file name, size, type, and the upload timestamp.",
                        "schema": {
                            "$ref": "#/definitions/workspaceservicehttp.FileUploadResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "workspaceservicehttp.FileUploadResponse": {
            "type": "object",
            "properties": {
                "fileUrl": {
                    "type": "string"
                },
                "file_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "workspace-service.platform.svc.cluster.local:9898",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Workspace Service REST API",
	Description:      "REST API for managing workspaces and their resources on the Solomon AI platform.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
